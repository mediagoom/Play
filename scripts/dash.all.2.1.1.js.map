{"version":3,"sources":["node_modules/browser-pack/_prelude.js","A:/data/code/dashjs/dash.js/externals/base64.js","A:/data/code/dashjs/dash.js/externals/cea608-parser.js","A:/data/code/dashjs/dash.js/externals/objectiron.js","A:/data/code/dashjs/dash.js/externals/xml2json.js","A:/data/code/dashjs/dash.js/index.js","node_modules/codem-isoboxer/dist/iso_boxer.js","A:/data/code/dashjs/dash.js/src/core/Debug.js","A:/data/code/dashjs/dash.js/src/core/EventBus.js","A:/data/code/dashjs/dash.js/src/core/FactoryMaker.js","A:/data/code/dashjs/dash.js/src/core/events/CoreEvents.js","A:/data/code/dashjs/dash.js/src/core/events/Events.js","A:/data/code/dashjs/dash.js/src/core/events/EventsBase.js","A:/data/code/dashjs/dash.js/src/dash/DashAdapter.js","A:/data/code/dashjs/dash.js/src/dash/DashHandler.js","A:/data/code/dashjs/dash.js/src/dash/DashMetrics.js","A:/data/code/dashjs/dash.js/src/dash/DashParser.js","A:/data/code/dashjs/dash.js/src/dash/SegmentBaseLoader.js","A:/data/code/dashjs/dash.js/src/dash/controllers/RepresentationController.js","A:/data/code/dashjs/dash.js/src/dash/models/DashManifestModel.js","A:/data/code/dashjs/dash.js/src/dash/utils/FragmentedTextBoxParser.js","A:/data/code/dashjs/dash.js/src/dash/utils/ListSegmentsGetter.js","A:/data/code/dashjs/dash.js/src/dash/utils/SegmentsGetter.js","A:/data/code/dashjs/dash.js/src/dash/utils/SegmentsUtils.js","A:/data/code/dashjs/dash.js/src/dash/utils/TemplateSegmentsGetter.js","A:/data/code/dashjs/dash.js/src/dash/utils/TimelineConverter.js","A:/data/code/dashjs/dash.js/src/dash/utils/TimelineSegmentsGetter.js","A:/data/code/dashjs/dash.js/src/dash/vo/AdaptationSet.js","A:/data/code/dashjs/dash.js/src/dash/vo/BaseURL.js","A:/data/code/dashjs/dash.js/src/dash/vo/Event.js","A:/data/code/dashjs/dash.js/src/dash/vo/EventStream.js","A:/data/code/dashjs/dash.js/src/dash/vo/Mpd.js","A:/data/code/dashjs/dash.js/src/dash/vo/Period.js","A:/data/code/dashjs/dash.js/src/dash/vo/Representation.js","A:/data/code/dashjs/dash.js/src/dash/vo/Segment.js","A:/data/code/dashjs/dash.js/src/dash/vo/UTCTiming.js","A:/data/code/dashjs/dash.js/src/streaming/FragmentLoader.js","A:/data/code/dashjs/dash.js/src/streaming/ManifestLoader.js","A:/data/code/dashjs/dash.js/src/streaming/ManifestUpdater.js","A:/data/code/dashjs/dash.js/src/streaming/MediaPlayer.js","A:/data/code/dashjs/dash.js/src/streaming/MediaPlayerEvents.js","A:/data/code/dashjs/dash.js/src/streaming/MediaPlayerFactory.js","A:/data/code/dashjs/dash.js/src/streaming/Stream.js","A:/data/code/dashjs/dash.js/src/streaming/StreamProcessor.js","A:/data/code/dashjs/dash.js/src/streaming/TextSourceBuffer.js","A:/data/code/dashjs/dash.js/src/streaming/TextTracks.js","A:/data/code/dashjs/dash.js/src/streaming/VirtualBuffer.js","A:/data/code/dashjs/dash.js/src/streaming/XHRLoader.js","A:/data/code/dashjs/dash.js/src/streaming/XlinkLoader.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/AbrController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/BaseURLController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/BlacklistController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/BufferController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/EventController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/FragmentController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/MediaController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/MediaSourceController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/PlaybackController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/ScheduleController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/SourceBufferController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/StreamController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/TextController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/TimeSyncController.js","A:/data/code/dashjs/dash.js/src/streaming/controllers/XlinkController.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/MetricsReporting.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/MetricsReportingEvents.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/controllers/MetricsCollectionController.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/controllers/MetricsController.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/controllers/MetricsHandlersController.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/controllers/RangeController.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/controllers/ReportingController.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/metrics/MetricsHandlerFactory.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/metrics/handlers/BufferLevelHandler.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/metrics/handlers/DVBErrorsHandler.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/metrics/handlers/GenericMetricHandler.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/metrics/handlers/HttpListHandler.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/reporting/ReportingFactory.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/reporting/reporters/DVBReporting.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/utils/DVBErrorsTranslator.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/utils/HandlerHelpers.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/utils/ManifestParsing.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/utils/MetricSerialiser.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/utils/RNG.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/vo/DVBErrors.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/vo/Metrics.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/vo/Range.js","A:/data/code/dashjs/dash.js/src/streaming/metrics/vo/Reporting.js","A:/data/code/dashjs/dash.js/src/streaming/models/BaseURLTreeModel.js","A:/data/code/dashjs/dash.js/src/streaming/models/FragmentModel.js","A:/data/code/dashjs/dash.js/src/streaming/models/ManifestModel.js","A:/data/code/dashjs/dash.js/src/streaming/models/MediaPlayerModel.js","A:/data/code/dashjs/dash.js/src/streaming/models/MetricsModel.js","A:/data/code/dashjs/dash.js/src/streaming/models/URIQueryAndFragmentModel.js","A:/data/code/dashjs/dash.js/src/streaming/models/VideoModel.js","A:/data/code/dashjs/dash.js/src/streaming/protection/CommonEncryption.js","A:/data/code/dashjs/dash.js/src/streaming/protection/Protection.js","A:/data/code/dashjs/dash.js/src/streaming/protection/ProtectionEvents.js","A:/data/code/dashjs/dash.js/src/streaming/protection/controllers/ProtectionController.js","A:/data/code/dashjs/dash.js/src/streaming/protection/controllers/ProtectionKeyController.js","A:/data/code/dashjs/dash.js/src/streaming/protection/drm/KeySystemClearKey.js","A:/data/code/dashjs/dash.js/src/streaming/protection/drm/KeySystemPlayReady.js","A:/data/code/dashjs/dash.js/src/streaming/protection/drm/KeySystemWidevine.js","A:/data/code/dashjs/dash.js/src/streaming/protection/models/ProtectionModel_01b.js","A:/data/code/dashjs/dash.js/src/streaming/protection/models/ProtectionModel_21Jan2015.js","A:/data/code/dashjs/dash.js/src/streaming/protection/models/ProtectionModel_3Feb2014.js","A:/data/code/dashjs/dash.js/src/streaming/protection/servers/ClearKey.js","A:/data/code/dashjs/dash.js/src/streaming/protection/servers/DRMToday.js","A:/data/code/dashjs/dash.js/src/streaming/protection/servers/PlayReady.js","A:/data/code/dashjs/dash.js/src/streaming/protection/servers/Widevine.js","A:/data/code/dashjs/dash.js/src/streaming/protection/vo/ClearKeyKeySet.js","A:/data/code/dashjs/dash.js/src/streaming/protection/vo/KeyError.js","A:/data/code/dashjs/dash.js/src/streaming/protection/vo/KeyMessage.js","A:/data/code/dashjs/dash.js/src/streaming/protection/vo/KeyPair.js","A:/data/code/dashjs/dash.js/src/streaming/protection/vo/KeySystemAccess.js","A:/data/code/dashjs/dash.js/src/streaming/protection/vo/KeySystemConfiguration.js","A:/data/code/dashjs/dash.js/src/streaming/protection/vo/MediaCapability.js","A:/data/code/dashjs/dash.js/src/streaming/protection/vo/NeedKey.js","A:/data/code/dashjs/dash.js/src/streaming/rules/RulesContext.js","A:/data/code/dashjs/dash.js/src/streaming/rules/RulesController.js","A:/data/code/dashjs/dash.js/src/streaming/rules/SwitchRequest.js","A:/data/code/dashjs/dash.js/src/streaming/rules/abr/ABRRulesCollection.js","A:/data/code/dashjs/dash.js/src/streaming/rules/abr/AbandonRequestsRule.js","A:/data/code/dashjs/dash.js/src/streaming/rules/abr/BolaAbandonRule.js","A:/data/code/dashjs/dash.js/src/streaming/rules/abr/BolaRule.js","A:/data/code/dashjs/dash.js/src/streaming/rules/abr/BufferOccupancyRule.js","A:/data/code/dashjs/dash.js/src/streaming/rules/abr/InsufficientBufferRule.js","A:/data/code/dashjs/dash.js/src/streaming/rules/abr/ThroughputRule.js","A:/data/code/dashjs/dash.js/src/streaming/rules/baseUrlResolution/BasicSelector.js","A:/data/code/dashjs/dash.js/src/streaming/rules/baseUrlResolution/DVBSelector.js","A:/data/code/dashjs/dash.js/src/streaming/rules/scheduling/BufferLevelRule.js","A:/data/code/dashjs/dash.js/src/streaming/rules/scheduling/NextFragmentRequestRule.js","A:/data/code/dashjs/dash.js/src/streaming/rules/synchronization/LiveEdgeBinarySearchRule.js","A:/data/code/dashjs/dash.js/src/streaming/rules/synchronization/LiveEdgeWithTimeSynchronizationRule.js","A:/data/code/dashjs/dash.js/src/streaming/rules/synchronization/SynchronizationRulesCollection.js","A:/data/code/dashjs/dash.js/src/streaming/utils/BaseURLSelector.js","A:/data/code/dashjs/dash.js/src/streaming/utils/BoxParser.js","A:/data/code/dashjs/dash.js/src/streaming/utils/Capabilities.js","A:/data/code/dashjs/dash.js/src/streaming/utils/CustomTimeRanges.js","A:/data/code/dashjs/dash.js/src/streaming/utils/DOMStorage.js","A:/data/code/dashjs/dash.js/src/streaming/utils/ErrorHandler.js","A:/data/code/dashjs/dash.js/src/streaming/utils/IsoFile.js","A:/data/code/dashjs/dash.js/src/streaming/utils/LiveEdgeFinder.js","A:/data/code/dashjs/dash.js/src/streaming/utils/ObjectUtils.js","A:/data/code/dashjs/dash.js/src/streaming/utils/RequestModifier.js","A:/data/code/dashjs/dash.js/src/streaming/utils/TTMLParser.js","A:/data/code/dashjs/dash.js/src/streaming/utils/URLUtils.js","A:/data/code/dashjs/dash.js/src/streaming/utils/VTTParser.js","A:/data/code/dashjs/dash.js/src/streaming/vo/BitrateInfo.js","A:/data/code/dashjs/dash.js/src/streaming/vo/DataChunk.js","A:/data/code/dashjs/dash.js/src/streaming/vo/Error.js","A:/data/code/dashjs/dash.js/src/streaming/vo/FragmentRequest.js","A:/data/code/dashjs/dash.js/src/streaming/vo/HeadRequest.js","A:/data/code/dashjs/dash.js/src/streaming/vo/IsoBox.js","A:/data/code/dashjs/dash.js/src/streaming/vo/ManifestInfo.js","A:/data/code/dashjs/dash.js/src/streaming/vo/MediaInfo.js","A:/data/code/dashjs/dash.js/src/streaming/vo/MetricsList.js","A:/data/code/dashjs/dash.js/src/streaming/vo/StreamInfo.js","A:/data/code/dashjs/dash.js/src/streaming/vo/TextRequest.js","A:/data/code/dashjs/dash.js/src/streaming/vo/TextTrackInfo.js","A:/data/code/dashjs/dash.js/src/streaming/vo/TrackInfo.js","A:/data/code/dashjs/dash.js/src/streaming/vo/URIFragmentData.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/BolaState.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/BufferLevel.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/BufferState.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/DVRInfo.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/DroppedFrames.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/HTTPRequest.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/ManifestUpdate.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/PlayList.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/RepresentationSwitch.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/RequestsQueue.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/SchedulingInfo.js","A:/data/code/dashjs/dash.js/src/streaming/vo/metrics/TCPConnection.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"_dereq_","module","UTF8","encode","c","charCodeAt","push","decode","v","String","fromCharCode","join","BASE64","T","encodeArray","charAt","R","decodeArray","pop","ASCII","Uint8Array","encodeASCII","decodeASCII","specialCea608CharsCodes",42,92,94,95,96,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,"getCharForByte","byte","charCode","hasOwnProperty","NR_ROWS","NR_COLS","rowsLowCh1",17,18,21,22,23,16,19,20,"rowsHighCh1","rowsLowCh2",25,26,29,30,31,24,27,28,"rowsHighCh2","backgroundColors","logger","verboseFilter","DATA","DEBUG","INFO","WARNING","TEXT","ERROR","time","verboseLevel","setTime","newTime","this","log","severity","msg","minLevel","console","numArrayToHexArray","numArray","hexArray","j","toString","PenState","foreground","underline","italics","background","flash","prototype","reset","setStyles","styles","attribs","style","isDefault","equals","other","copy","newPenState","StyledUnicodeChar","uchar","penState","setChar","setPenState","newChar","isEmpty","Row","chars","pos","currPenState","equal","empty","setCursor","absPos","moveCursor","relPos","newPos","backSpace","insertChar","char","clearFromPos","startPos","clear","clearToEndOfRow","getTextString","setPenStyles","currChar","CaptionScreen","rows","currRow","nrRollUpRows","row","setPen","setPAC","pacData","JSON","stringify","newRow","indent","prevPos","Math","max","color","setBkgData","bkgData","setRollUpRows","nrRows","rollUp","getDisplayText","topRowIndex","topRow","splice","asOneRow","displayText","text","rowNr","rowText","trim","getTextAndFormat","Cea608Channel","channelNumber","outputFilter","chNr","mode","verbose","displayedMemory","nonDisplayedMemory","lastOutputScreen","currRollUpRow","writeScreen","cueStartTime","modes","lastCueEndTime","getHandler","setHandler","newHandler","setMode","newMode","insertChars","screen","outputDataUpdate","cc_RCL","cc_BS","cc_AOF","cc_AON","cc_DER","cc_RU","cc_FON","cc_RDC","cc_TR","cc_RTD","cc_EDM","cc_CR","cc_ENM","cc_EOC","tmp","cc_TO","nrCols","cc_MIDROW","secondByte","colorIndex","floor","colors","updateData","newCue","cueSplitAtTime","Cea608Parser","field","out1","out2","outputs","channels","currChNr","lastCmdA","lastCmdB","bufferedData","startTime","lastTime","dataCounters","padding","cmd","index","addData","byteList","cmdFound","b","charsFound","parseCmd","parseMidrow","parsePAC","parseBackgroundAttributes","parseChars","channel","cond1","cond2","case1","case2","interpretPAC","pacIndex","channelNr","charCodes","charCode1","oneCode","hexCodes","findCea608Nalus","raw","size","nalSize","cursor","nalType","cea608NaluRanges","isCEA608SEI","payloadType","payloadSize","countryCode","getUint8","providerCode","getUint16","userIdentifier","getUint32","userDataTypeCode","extractCea608DataFromRange","cea608Range","fieldData","ccCount","ccValid","ccType","ccData1","ccData2","undefined","cea608parser","ObjectIron","map","lookup","len","isRoot","name","mergeValues","parentItem","childItem","mapProperties","properties","parent","child","property","parentValue","childValue","merge","mergeFunction","mapItem","obj","node","len2","array","childNode","item","children","isArray","performMapping","source","pi","pp","indexOf","run","X2JS","matchers","attrPrefix","ignoreRoot","getNodeLocalName","nodeLocalName","localName","baseName","nodeName","getNodePrefix","prefix","escapeXmlChars","str","replace","unescapeXmlChars","parseDOMChildren","nodeType","DOMNodeTypes","DOCUMENT_NODE","result","firstChild","childNodes","COMMENT_NODE","childName","ELEMENT_NODE","Object","__cnt","nodeChildren","cidx","test","Array","tmpObj","aridx","__children","aidx","attributes","attr","value2","value","m","ml","matchobj","converter","nodePrefix","__prefix","__text","escapeMode","__cdata","TEXT_NODE","CDATA_SECTION_NODE","nodeValue","startTag","jsonObj","element","attrList","closed","resultStr","attrName","attrVal","substr","endTag","elementName","endsWith","suffix","jsonXmlSpecialElem","jsonObjField","Function","jsonXmlElemCount","elementsCnt","it","parseJSONAttributes","ait","parseJSONTextAttrs","jsonTxtObj","parseJSONTextObject","parseJSONArray","jsonArrRoot","jsonArrObj","arIdx","parseJSONObject","subObj","subObjElementsCnt","VERSION","parseXmlString","xmlDocStr","xmlDoc","parser","ns","window","DOMParser","parseFromString","getElementsByTagName","namespaceURI","getElementsByTagNameNS","ActiveXObject","async","loadXML","xml2json","xml_str2json","json2xml_str","json2xml","getVersion","enabled","context","global","dashjs","MediaPlayer","_srcStreamingMediaPlayerJs2","Protection","_srcStreamingProtectionProtectionJs2","MetricsReporting","_srcStreamingMetricsMetricsReportingJs2","MediaPlayerFactory","_srcStreamingMediaPlayerFactoryJs2","ISOBoxer","parseBuffer","arrayBuffer","ISOFile","parse","Utils","dataViewToString","dataView","encoding","impliedEncoding","TextDecoder","byteLength","Cursor","initialOffset","offset","_raw","DataView","_cursor","boxes","fetch","type","fetchAll","returnEarly","_sweep","box","ISOBox","newBox","_offset","_root","_parent","_parseBox","byteOffset","_readInt","getInt8","getInt16","getInt32","s1","s2","pow","_readUint","_readString","_readTerminatedString","_readTemplate","pre","post","buffer","_incomplete","largesize","usertype","_boxParsers","_parseFullBox","version","flags","forEach","boxType","entry_count","entries","entry","segment_duration","media_time","media_rate_integer","media_rate_fraction","scheme_id_uri","timescale","presentation_time_delta","event_duration","id","message_data","data","major_brand","minor_versions","compatible_brands","pre_defined","handler_type","reserved","creation_time","modification_time","duration","language","pad","sequence_number","rate","volume","reserved1","reserved2","matrix","next_track_ID","cue_text_raw","cue_text","reference_ID","earliest_presentation_time","first_offset","reference_count","references","ref","reference","reference_type","referenced_size","subsegment_duration","sap","starts_with_SAP","SAP_type","SAP_delta_time","subsegment_count","subsegments","subsegment","ranges_count","ranges","range","level","range_size","baseMediaDecodeTime","track_ID","base_data_offset","sample_description_offset","default_sample_duration","default_sample_size","default_sample_flags","layer","alternate_group","reserved3","width","height","sample_count","data_offset","first_sample_flags","samples","sample","sample_duration","sample_size","sample_flags","sample_composition_time_offset","source_label_raw","source_label","config_raw","config","Debug","setup","logToBrowserConsole","showLogTimestamp","Date","getTime","setLogTimestampVisible","setLogToBrowserConsole","getLogToBrowserConsole","message","logTime","apply","arguments","eventBus","trigger","_eventsEventsJs2","LOG","_EventBusJs2","getInstance","instance","__dashjs_factory_name","_FactoryMakerJs2","getSingletonFactory","EventBus","on","listener","scope","getHandlerIdx","handler","callback","handlers","off","idx","args","handlersForType","FactoryMaker","extend","childInstance","override","extensionContext","getExtensionContext","getSingletonInstance","className","singletonContexts","setSingletonInstance","getClassFactory","classConstructor","create","extensionObject","extension","factory","prop","extensions","CoreEvents","_EventsBase","_get","getPrototypeOf","AST_IN_FUTURE","BUFFERING_COMPLETED","BUFFER_CLEARED","BUFFER_LEVEL_UPDATED","BYTES_APPENDED","CHECK_FOR_EXISTENCE_COMPLETED","CHUNK_APPENDED","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","DATA_UPDATE_STARTED","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_STARTED","INITIALIZATION_LOADED","INIT_FRAGMENT_LOADED","INIT_REQUESTED","INTERNAL_MANIFEST_LOADED","LIVE_EDGE_SEARCH_COMPLETED","LOADING_COMPLETED","LOADING_PROGRESS","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","QUALITY_CHANGED","QUOTA_EXCEEDED","REPRESENTATION_UPDATED","SEGMENTS_LOADED","SERVICE_LOCATION_BLACKLIST_CHANGED","SOURCEBUFFER_APPEND_COMPLETED","SOURCEBUFFER_REMOVE_COMPLETED","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_COMPLETED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TIMED_TEXT_REQUESTED","TIME_SYNCHRONIZATION_COMPLETED","URL_RESOLUTION_FAILED","WALLCLOCK_TIME_UPDATED","XLINK_ALL_ELEMENTS_LOADED","XLINK_ELEMENT_LOADED","XLINK_READY","Events","_CoreEvents","events","EventsBase","publicOnly","evt","DashAdapter","setConfig","dashManifestModel","initialize","periods","adaptations","getRepresentationForTrackInfo","trackInfo","representationController","getRepresentationForQuality","quality","getAdaptationForMediaInfo","mediaInfo","streamInfo","getPeriodForStreamInfo","ln","period","convertRepresentationToTrackInfo","manifest","representation","_streamingVoTrackInfoJs2","adaptation","mpd","Period_asArray","AdaptationSet_asArray","getRepresentationFor","bandwidth","getBandwidth","DVRWindow","segmentAvailabilityRange","fragmentDuration","segmentDuration","segments","NaN","MSETimeOffset","useCalculatedLiveEdgeTime","convertAdaptationToMediaInfo","viewpoint","_streamingVoMediaInfoJs2","convertPeriodToStreamInfo","representationCount","getRepresentationCount","lang","getLanguageForAdaptation","getViewpointForAdaptation","accessibility","getAccessibilityForAdaptation","accessibilityValue","accessibilityData","schemeIdUri","search","_externalsCea608ParserJs2","embeddedCaptions","audioChannelConfiguration","getAudioChannelConfigurationForAdaptation","roles","getRolesForAdaptation","role","codec","getCodec","mimeType","getMimeType","contentProtection","getContentProtectionData","bitrateList","getBitrateListForAdaptation","KID","getKID","isText","getIsTextTrack","convertVideoInfoToEmbeddedTextInfo","parseInt","substring","isEmbedded","_streamingVoStreamInfoJs2","THRESHOLD","start","manifestInfo","convertMpdToManifestInfo","isLast","abs","isFirst","getRegularPeriods","getMpd","_streamingVoManifestInfoJs2","DVRWindowSize","timeShiftBufferDepth","loadedTime","availableFrom","availabilityStartTime","minBufferTime","maxFragmentDuration","maxSegmentDuration","getDuration","isDynamic","getIsDynamic","getMediaInfoForType","periodInfo","periodId","getAdaptationForType","getIndexForAdaptation","getAdaptationsForPeriod","getAllMediaInfoForType","media","adaptationsForType","getAdaptationsForType","mediaArr","accessibilityLength","parts","split","getStreamsInfo","streams","checkTime","getCheckTime","getManifestInfo","getInitRequest","streamProcessor","getRepresentationController","getIndexHandler","getNextFragmentRequest","getNextSegmentRequest","getFragmentRequestForTime","options","getSegmentRequestForTime","generateFragmentRequestForTime","generateSegmentRequestForTime","getIndexHandlerTime","getCurrentTime","setIndexHandlerTime","setCurrentTime","getStreamInfo","getMediaInfo","getType","getAdaptationForId","getAdaptationForIndex","getRepresentationInfoForQuality","getCurrentRepresentationInfo","getCurrentRepresentation","getEvent","eventBox","eventStreams","event","_voEventJs2","presentationTimeDelta","messageData","presentationTime","eventStream","getEventsFor","info","getEventsForPeriod","getEventStreamForAdaptationSet","getEventStreamForRepresentation","convertDataToTrack","convertDataToMedia","convertDataToStream","getDataForTrack","getDataForMedia","getDataForStream","metricsList","METRIC_LIST","TCP_CONNECTION","HTTP_REQUEST","TRACK_SWITCH","BUFFER_LEVEL","BUFFER_STATE","DVR_INFO","DROPPED_FRAMES","SCHEDULING_INFO","REQUESTS_QUEUE","MANIFEST_UPDATE","MANIFEST_UPDATE_STREAM_INFO","MANIFEST_UPDATE_TRACK_INFO","PLAY_LIST","DVB_ERRORS","_coreFactoryMakerJs2","DashHandler","currentTime","earliestTime","_coreEventsEventsJs2","onInitializationLoaded","onSegmentsLoaded","StreamProcessor","segmentsGetter","_utilsSegmentsGetterJs2","getStreamProcessor","getCurrentIndex","getEarliestTime","requestedTime","unescapeDollarsInTemplate","url","replaceIDForTemplate","setRequestUrl","request","destination","serviceLocation","baseURL","baseURLController","resolve","path","urlUtils","isRelative","generateInitRequest","mediaType","presentationStartTime","_streamingVoFragmentRequestJs2","_streamingVoMetricsHTTPRequestJs2","INIT_SEGMENT_TYPE","timelineConverter","calcAvailabilityStartTimeFromPresentationTime","availabilityEndTime","calcAvailabilityEndTimeFromPresentationTime","initialization","isMediaFinished","sDuration","seg","fTime","segmentInfoType","isFinished","availableSegmentsNumber","_utilsSegmentsUtilsJs","getSegmentByIndex","updateSegments","getSegments","onSegmentListUpdated","isNaN","min","getExpectedLiveEdge","lastIdx","lastSegment","liveEdge","metrics","metricsModel","getMetricsFor","setExpectedLiveEdge","updateManifestUpdateInfo","dashMetrics","getCurrentManifestUpdate","updateSegmentList","_streamingVoErrorJs2","updateRepresentation","keepIdx","error","hasInitialization","hasSegments","calcSegmentAvailabilityRange","end","SEGMENTS_UNAVAILABLE_ERROR_CODE","availabilityDelay","sender","segmentBaseLoader","loadInitialization","loadSegments","indexRange","getIndexForSegments","timeThreshold","epsilon","frag","ft","fd","availabilityIdx","getRequestForSegment","segment","Representation_asArray","replaceTokenForTemplate","replacementNumber","replacementTime","MEDIA_SEGMENT_TYPE","mediaRange","wallStartTime","adaptationIndex","finished","ignoreIsFinished","action","ACTION_COMPLETE","step","fragments","count","getTimeBasedSegment","_coreDebugJs2","_coreEventBusJs2","_streamingUtilsURLUtilsJs2","DashMetrics","getBandwidthForRepresentation","representationId","manifestModel","getValue","findRepresentation","getIndexForRepresentation","periodIdx","representationIndex","findRepresentationIndex","getMaxIndexForBufferType","bufferType","maxIndex","findMaxBufferIndex","getMaxAllowedIndexForBufferType","abrController","_streamingControllersAbrControllerJs2","getTopQualityIndexFor","getCurrentRepresentationSwitch","repSwitchLength","repSwitchLastIndex","currentRepSwitch","repSwitch","RepSwitchList","getLatestBufferLevelVO","bufferLevel","BufferLevel","getCurrentBufferLevel","getRequestsQueue","RequestsQueue","getCurrentHttpRequest","httpListLength","httpListLastIndex","httpList","HttpList","currentHttpList","responsecode","getHttpRequests","getCurrentDroppedFrames","droppedFramesLength","droppedFramesLastIndex","currentDroppedFrames","droppedFrames","DroppedFrames","getCurrentSchedulingInfo","currentSchedulingInfo","schedulingInfo","SchedulingInfo","currentManifestUpdate","manifestUpdate","ManifestUpdate","getCurrentDVRInfo","dvrInfoLastIndex","currentDVRInfo","dvrInfo","DVRInfo","getLatestMPDRequestHeaderValueByID","httpRequestList","httpRequest","headers","MPD_TYPE","parseResponseHeaders","_responseHeaders","getLatestFragmentRequestHeaderValueByID","headerStr","headerPairs","ilen","headerPair","adaptationSet","adaptationSetArray","representationArray","adaptationSetArrayIndex","representationArrayIndex","adaptationIsType","_modelsDashManifestModelJs2","getIsTypeOf","_streamingModelsManifestModelJs2","DashParser","durationRegex","datetimeRegex","numericRegex","httpOrHttpsRegex","originRegex","attributeList","match","exec","parseFloat","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","utcDate","UTC","MILLISECONDS_IN_SECONDS","timezoneOffset","MINUTES_IN_HOUR","getCommonValuesMap","subRepresentation","common","getSegmentValuesMap","getDashMap","xlinkController","_externalsXml2jsonJs2","iron","_externalsObjectironJs2","json","ironed","Location","Location_asArray","setMatchers","setIron","err","_streamingUtilsErrorHandlerJs2","manifestError","SegmentBaseLoader","errHandler","boxParser","_streamingUtilsBoxParserJs2","requestModifier","_streamingUtilsRequestModifierJs2","loadingInfo","needFailureReport","initRange","isoFile","XMLHttpRequest","baseUrl","searching","bytesLoaded","bytesToLoad","onload","status","response","findInitRange","onloadend","onerror","downloadError","sendRequest","onLoaded","sidx","hasRange","extraBytes","loadedLength","getBox","isComplete","loadMultiSidx","ss","se","segs","tmpCallback","concat","getSegmentsForSidx","lastBox","getLastBox","refs","_voSegmentJs2","ftyp","moov","open","modifyRequestURL","responseType","setRequestHeader","modifyRequestHeader","send","RepresentationController","dataIndex","updating","availableRepresentations","streamController","_streamingControllersStreamControllerJs2","playbackController","_streamingControllersPlaybackControllerJs2","_streamingModelsMetricsModelJs2","domStorage","_streamingUtilsDOMStorageJs2","_utilsTimelineConverterJs2","_DashMetricsJs2","mediaPlayerModel","_streamingModelsMediaPlayerModelJs2","onQualityChanged","onRepresentationUpdated","onWallclockTimeUpdated","onBufferLevelUpdated","onLiveEdgeSearchCompleted","indexHandler","getData","getDataIndex","isUpdating","currentRepresentation","dataValue","averageThroughput","bitrate","maxQuality","updateRepresentations","getAverageThroughput","getInitialBitrateFor","getQualityForBitrate","getQualityFor","addRepresentationSwitch","now","currentVideoTimeMs","addDVRMetric","addDVRInfo","getQualityForRepresentation","isAllRepresentationsUpdated","reps","getRepresentationsForAdaptation","updateAvailabilityWindow","rep","resetAvailabilityWindow","postponeUpdate","postponeTimePeriod","delay","update","setTimeout","repInfo","streamMetrics","manifestUpdateInfo","alreadyAdded","segmentAvailabilityTimePeriod","liveDelay","computeLiveDelay","SEGMENTS_UPDATE_FAILED_ERROR_CODE","addManifestUpdateRepresentationInfo","presentationTimeOffset","startNumber","setPlaybackQuality","latency","getActiveStreamInfo","getEndTimeForLastPeriod","oldQuality","newQuality","setSavedBitrateSettings","DashManifestModel","found","col","ContentComponent_asArray","mimeTypeRegEx","RegExp","codecs","contentType","getIsAudio","getIsVideo","getIsFragmentedText","getIsText","getIsMuxed","Viewpoint","Role_asArray","Accessibility_asArray","AudioChannelConfiguration_asArray","getIsMain","filter","getRepresentationSortFunction","processAdaptation","sort","periodIndex","ContentProtection_asArray","getIsDVR","containsDVR","isDVR","hasProfile","profile","has","profiles","getIsOnDemand","getIsDVB","mpdDuration","mediaPresentationDuration","Number","MAX_VALUE","getRefreshDelay","minDelay","minimumUpdatePeriod","segmentInfo","representations","_voRepresentationJs2","maxPlayoutRate","SegmentBase","SegmentList","SegmentTemplate","SegmentTimeline","S_asArray","BaseURL","Initialization","sourceURL","calcMSETimeOffset","p","_voAdaptationSetJs2","p1","vo1","vo","_voPeriodJs2","getPeriodId","DEFAULT_ID","_voMpdJs2","suggestedPresentationDelay","getFetchTime","calcPresentationTimeFromWallTime","fetchTime","periodEnd","periodArray","EventStream_asArray","_voEventStreamJs2","Event_asArray","getEventStreams","inbandStreams","InbandEventStream_asArray","getUTCTimingSources","hasAST","utcTimingsArray","UTCTiming_asArray","utcTimingEntries","utcTiming","_voUTCTimingJs2","getBaseURLsFromElement","baseUrls","BaseURL_asArray","baseUri","earlyReturn","some","_voBaseURLJs2","dvb_priority","dvb_weight","FragmentedTextBoxParser","getSamplesInfo","ab","sampleDuration","sampleCompositionTimeOffset","sampleCount","sampleSize","sampleDts","sampleList","dataOffset","sequenceNumber","totalDuration","tfhdBox","tfdtBox","trunBox","moofBox","mfhdBox","dts","cts","getMediaTimescaleFromMoov","mdhdBox","ListSegmentsGetter","getSegmentsFromList","availabilityUpperLimit","periodSegIdx","startIdx","endIdx","list","SegmentURL_asArray","_SegmentsUtilsJs","decideSegmentListRangeForTemplate","getIndexBasedSegment","SegmentsGetter","timelineSegmentsGetter","_TimelineSegmentsGetterJs2","templateSegmentsGetter","_TemplateSegmentsGetterJs2","listSegmentsGetter","_ListSegmentsGetterJs2","onSegmentListUpdatedCallback","isSegmentListUpdateRequired","upperIdx","lowerIdx","updateRequired","zeroPadToLength","numStr","minStrLength","getNumberForSegment","segmentIndex","token","endPos","formatTagPos","specifier","paddedValue","formatTag","tokenLen","formatTagLen","toUpperCase","presentationEndTime","mediaStartTime","calcMediaTimeFromPresentationTime","calcWallTimeForSegment","fTimescale","scaledTime","scaledDuration","calcPresentationTimeFromMediaTime","decideSegmentListRangeForTimeline","givenAvailabilityUpperLimit","availabilityLowerLimit","firstIdx","POSITIVE_INFINITY","isTimeSyncCompleted","availabilityWindow","periodRelativeRange","calcPeriodRelativeTimeFromMpdRelativeTime","currentSegmentList","originAvailabilityTime","originSegment","TemplateSegmentsGetter","getSegmentsFromTemplate","segmentRange","template","ceil","TimelineConverter","clientServerTimeShift","isClientServerTimeSyncCompleted","expectedLiveEdge","onTimeSyncComplete","setTimeSyncCompleted","getClientTimeOffset","calcAvailabilityTimeFromPresentationTime","calculateEnd","availabilityTime","wallTime","mediaTime","periodStart","presentationOffset","displayStartTime","d","timeAnchor","mpdRelativeTime","periodStartTime","calcMpdRelativeTimeFromPeriodRelativeTime","periodRelativeTime","searchTime","TimelineSegmentsGetter","getSegmentsFromTimeline","repeat","repeatEndTime","nextFrag","calculatedRange","hasEnoughSegments","requiredMediaTime","timeline","isAvailableSegmentNumberCalculated","maxSegmentsAhead","isStartSegmentForRequestedTimeFound","createSegment","availabilityEnd","AdaptationSet","DEFAULT_DVB_PRIORITY","DEFAULT_DVB_WEIGHT","priority","weight","Event","EventStream","adaptionSet","Mpd","Period","Representation","Segment","UTCTiming","FragmentLoader","xhrLoader","_XHRLoaderJs2","checkForExistence","report","success","exists","headRequest","_voHeadRequestJs2","load","progress","xhr","statusText","errorText","_voErrorJs2","FRAGMENT_LOADER_ERROR_LOADING_FAILURE","FRAGMENT_LOADER_ERROR_NULL_REQUEST","FRAGMENT_LOADER_MESSAGE_NULL_REQUEST","abort","ManifestLoader","onXlinkReady","_controllersXlinkControllerJs2","_voTextRequestJs2","_voMetricsHTTPRequestJs2","textStatus","actualUrl","responseURL","parseBaseUrl","location","href","originalUrl","resolveManifestOnLoad","MANIFEST_LOADER_ERROR_PARSING_FAILURE","MANIFEST_LOADER_MESSAGE_PARSING_FAILURE","MANIFEST_LOADER_ERROR_LOADING_FAILURE","_utilsURLUtilsJs2","ManifestUpdater","loader","manifestLoader","refreshDelay","refreshTimer","isStopped","onStreamsComposed","PLAYBACK_STARTED","onPlaybackStarted","PLAYBACK_PAUSED","onPlaybackPaused","onManifestLoaded","setManifest","getManifestLoader","clearInterval","startManifestRefreshTimer","onRefreshTimer","timeSinceLastUpdate","date","setValue","mediaPlayerInitialized","playbackInitialized","autoPlay","protectionController","protectionData","adapter","_MediaPlayerEventsJs2","_modelsMediaPlayerModelJs2","view","AutoPlay","capabilities","_utilsCapabilitiesJs2","_utilsErrorHandlerJs2","supportsMediaSource","_controllersAbrControllerJs2","_controllersPlaybackControllerJs2","mediaController","_controllersMediaControllerJs2","_dashModelsDashManifestModelJs2","_dashDashMetricsJs2","_modelsMetricsModelJs2","createAdaptor","restoreDefaultUTCTimingSources","setAutoPlay","attachView","attachSource","capabilityError","isReady","videoModel","play","PLAYBACK_NOT_INITIALIZED_ERROR","isPaused","pause","isSeeking","setMute","ELEMENT_NOT_ATTACHED_ERROR","getVideoElement","muted","isMuted","setVolume","getVolume","getBufferLength","getDashMetrics","toPrecision","videoBuffer","getTracksFor","MAX_SAFE_INTEGER","audioBuffer","textBuffer","getDVRWindowSize","metric","getDVRInfoMetric","getDVRSeekOffset","val","seek","streamId","getTimeRelativeToStreamId","timeAsUTC","getAsUTC","durationAsUTC","formatUTC","locales","hour12","dt","toLocaleDateString","toLocaleTimeString","convertToTimeCode","h","parentNameString","getDebug","debug","getVideoModel","setLiveDelayFragmentCount","setLiveDelay","useSuggestedPresentationDelay","setUseSuggestedPresentationDelay","enableLastBitrateCaching","enable","ttl","setLastBitrateCachingInfo","enableLastMediaSettingsCaching","setLastMediaSettingsCachingInfo","setMaxAllowedBitrateFor","getMaxAllowedBitrateFor","setMaxAllowedRepresentationRatioFor","getMaxAllowedRepresentationRatioFor","getAutoPlay","setScheduleWhilePaused","getScheduleWhilePaused","getReadOnlyMetricsFor","setQualityFor","getLimitBitrateByPortal","setLimitBitrateByPortal","setTextTrack","textSourceBuffer","_TextSourceBufferJs2","tracks","textTracks","track","getBitrateInfoListFor","stream","getActiveStream","getBitrateListFor","setInitialBitrateFor","setInitialRepresentationRatioFor","getInitialRepresentationRatioFor","getStreamsFromManifest","getTracksForTypeFromManifest","getCurrentTrackFor","setInitialMediaSettingsFor","setInitialSettings","getInitialMediaSettingsFor","getInitialSettings","setCurrentTrack","setTrack","getTrackSwitchModeFor","getSwitchMode","setTrackSwitchModeFor","setSwitchMode","setSelectionModeForInitialTrack","getSelectionModeForInitialTrack","getAutoSwitchQuality","getAutoSwitchBitrateFor","setAutoSwitchQuality","setAutoSwitchBitrateFor","getAutoSwitchQualityFor","setAutoSwitchQualityFor","enableBufferOccupancyABR","setBufferOccupancyABREnabled","retrieveManifest","createManifestLoader","self","uriQueryFragModel","_modelsURIQueryAndFragmentModelJs2","parseURI","addUTCTimingSource","removeUTCTimingSource","_dashVoUTCTimingJs2","UTCTimingSources","clearDefaultUTCTimingSources","setUTCTimingSources","DEFAULT_UTC_TIMING_SOURCE","scheme","enableManifestDateHeaderTimeSource","setUseManifestDateHeaderTimeSource","setBufferToKeep","setBufferPruningInterval","setStableBufferTime","setBufferTimeAtTopQuality","setBufferTimeAtTopQualityLongForm","setLongFormContentDurationThreshold","setRichBufferThreshold","setBandwidthSafetyFactor","getBandwidthSafetyFactor","setAbandonLoadTimeout","setFragmentLoaderRetryAttempts","setFragmentRetryAttempts","setFragmentLoaderRetryInterval","setFragmentRetryInterval","getProtectionController","detectProtection","attachProtectionController","setProtectionData","displayCaptionsOnTop","_TextTracksJs2","displayCConTop","getVideoContainer","attachVideoContainer","container","setVideoContainer","getElement","MEDIA_PLAYER_NOT_INITIALIZED_ERROR","_modelsVideoModelJs2","setElement","detectMetricsReporting","resetAndInitializePlayback","getTTMLRenderingDiv","attachTTMLRenderingDiv","div","setTTMLRenderingDiv","getSource","SOURCE_NOT_ATTACHED_ERROR","urlOrManifest","rulesController","metricsReportingController","initializePlayback","createControllers","synchronizationRulesCollection","_rulesSynchronizationSynchronizationRulesCollectionJs2","abrRulesCollection","_rulesAbrABRRulesCollectionJs2","sourceBufferController","_controllersSourceBufferControllerJs2","virtualBuffer","_VirtualBufferJs2","_rulesRulesControllerJs2","_controllersStreamControllerJs2","_modelsManifestModelJs2","liveEdgeFinder","_utilsLiveEdgeFinderJs2","mediaSourceController","_controllersMediaSourceControllerJs2","timeSyncController","_controllersTimeSyncControllerJs2","_controllersBaseURLControllerJs2","_dashUtilsTimelineConverterJs2","_ManifestLoaderJs2","createManifestParser","_utilsRequestModifierJs2","_dashDashParserJs2","_dashDashAdapterJs2","protection","createProtectionSystem","metricsReporting","createMetricsReporting","mediaElement","valToConvert","utcValue","getStreamById","loadWithManifest","MediaPlayerEvents","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_COMPLETED","PERIOD_SWITCH_STARTED","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","CAN_PLAY","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_METADATA_LOADED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_TIME_UPDATED","mediaPlayerEvents","video","_dashjs_player","player","videoID","slice","querySelectorAll","SUPPORTED_MIME_TYPE","src","document","createElement","_MediaPlayerJs2","autoplay","createAll","selector","aPlayers","videos","sources","findVideo","_x","el","toLowerCase","parentNode","loadHandler","removeEventListener","avoidAutoCreate","skipAutoCreate","addEventListener","readyState","Stream","streamProcessors","isStreamActivated","isMediaInitialized","updateError","initialized","fragmentController","_controllersFragmentControllerJs2","onBufferingCompleted","onDataUpdateCompleted","StreamInfo","ProtectionController","KEY_ERROR","onProtectionError","SERVER_CERTIFICATE_UPDATED","LICENSE_REQUEST_COMPLETE","KEY_SYSTEM_SELECTED","KEY_SESSION_CREATED","activate","mediaSource","createBuffers","onCurrentTrackChanged","initializeMedia","deactivate","clearEventController","abortSearch","manifestUpdater","getStartTime","getStreamIndex","getId","hasMedia","getBitrateList","startEventController","eventController","isActivated","isInitialized","mediaKeySessionError","getMimeTypeOrType","isMediaSupported","supportsEncryptedMedia","supportsCodec","newMediaInfo","processor","getProcessorForMediaInfo","oldMediaInfo","getBuffer","getMediaSource","createStreamProcessor","replaceIdx","updateMediaInfo","createIndexHandler","_dashSegmentBaseLoaderJs2","_dashDashHandlerJs2","optionalSettings","_StreamProcessorJs2","allMediaForType","updateTopQualityIndex","setBuffer","initializeMediaForType","initialMediaInfo","addEmbeddedTrack","isMultiTrackSupportedByType","addTrack","checkInitialMediaSettingsForType","_controllersEventControllerJs2","addInlineEvents","checkIfInitializationCompleted","hasError","audio","DATA_UPDATE_FAILED_ERROR_CODE","mediaCtrl","createBuffer","processors","getProcessors","isBufferingCompleted","sp","controller","arr","updatedStreamInfo","mediaInfoArr","Type","FragmentController","EventController","dynamic","bufferController","createBufferControllerForType","scheduleController","_controllersScheduleControllerJs2","fragmentLoader","_FragmentLoaderJs2","_dashControllersRepresentationControllerJs2","fragmentModel","getFragmentModel","setLoader","errored","getABRController","getFragmentLoader","getFragmentController","getBufferController","getMediaInfoArr","getScheduleController","getEventController","stop","getIsBufferingCompleted","_controllersBufferControllerJs2","_controllersSourceBufferController2","_controllersTextControllerJs2","TextSourceBuffer","allTracksAreDisabled","initializationSegmentReceived","fragmentedTracks","firstSubtitleStart","embeddedInitialized","initEmbedded","mediaInfos","isFragmented","_utilsBoxParserJs2","fragmentedTextBoxParser","_dashUtilsFragmentedTextBoxParserJs2","buffered","_utilsCustomTimeRangesJs2","currFragTrack","currFragmentedTrackIdx","embeddedTracks","embeddedInitializationSegmentReceived","embeddedTimescale","embeddedCea608FieldParsers","embeddedSequenceNumbers","embeddedLastSequenceNumber","append","bytes","chunk","createTextTrackFromMediaInfo","captionData","textTrackInfo","_voTextTrackInfoJs2","trackKindMap","subtitle","caption","getKind","kind","checkTTML","ttml","label","isTTML","defaultTrack","getIsDefault","totalNrTracks","addTextTrack","samplesInfo","ccContent","codecType","getParser","_sample","sampleStart","sampleRelStart","add","_codemIsoboxer2","addCaptions","captionArray","sampleData","sampleBoxes","box1","k","box2","start_time","end_time","timedTextError","segmentType","makeCueAdderForIndex","trackIndex","endTime","captionScreen","captionsArray","createHTMLCaptionsFromScreen","trackIdx","getTrackIdxForId","allCcData","extractCea608Data","fieldNr","ccData","fields","fieldParser","insertInOrder","moof","tfdt","truns","getBoxes","trun","baseOffset","baseSampleTime","accDuration","sampleTime","cea608Ranges","endSampleTime","checkIndent","line","uc","ll","getRegionProperties","region","x","y1","y2","createRGB","getStyle","videoElement","fontSize","videoHeight","ltrim","trimmed","rtrim","currRegion","existingRegion","lastRowHasText","lastRowIndentL","currP","spans","currentStyle","seenRegions","styleStates","regions","prevPenState","rowIndent","contat","currPenStateString","cueID","captionId","finalDiv","cueRegionProperties","cssText","bodyDiv","cueUniWrapper","ptag","lastSpanRow","span","brElement","appendChild","sameRow","spanStyle","spanElement","textContent","bodyStyle","cueHTMLElement","cellResolution","isFromCEA608","regionID","videoWidth","defaultFontSize","lineHeight","linePadding","deleteAllTextTracks","resetEmbedded","getAllTracksAreDisabled","VTTParser","TTMLParser","nrNonEmbeddedTracks","oldTrackIdx","getCurrentTrackIdx","setCurrentTrackIdx","currentFragTrack","newFragTrack","abortRequests","deleteTrackCues","TextTracks","Cue","VTTCue","TextTrackCue","textTrackQueue","trackElementArr","currentTrackIdx","actualVideoLeft","actualVideoTop","actualVideoWidth","actualVideoHeight","captionContainer","videoSizeCheckInterval","displayCCOnTop","topZIndex","isChrome","navigator","userAgent","fullscreenElement","fullscreenAttribute","webkitIsFullScreen","msFullscreenElement","mozFullScreen","createTrackForUserAgent","srclang","zIndex","textTrackInfoVO","totalTextTracks","defaultIndex","textTrack","nonAddedCues","renderingType","getVideoVisibleVideoSize","viewWidth","viewHeight","aspectRatio","use80Percent","viewAspectRatio","videoAspectRatio","videoPictureX","videoPictureY","videoPictureWidth","videoPictureHeight","videoPictureXAspect","videoPictureYAspect","videoPictureWidthAspect","videoPictureHeightAspect","videoPictureAspect","y","w","checkVideoSize","getCurrentTextTrack","realVideoSize","clientWidth","clientHeight","newVideoWidth","newVideoHeight","left","top","activeCues","cue","scaleCue","activeCue","key","replaceValue","elements","cellUnit","valueLinePadding","elementsSpan","getElementsByClassName","valueFontSize","valueLineHeight","timeOffset","currentItem","setInterval","bind","image","onenter","img","Image","onexit","imgs","removeChild","divs","align","position","addCue","trackId","clearCues","setNativeCueStyle","removeNativeCueStyle","getTextTrack","cues","removeCue","deleteTextTrack","styleElement","getElementById","head","stylesheet","sheet","insertRule","classList","VirtualBuffer","createDataStorage","sortArrayByProperty","calculatedBufferedRanges","storeAppendedChunk","diff","bufferedRanges","actualBufferedRanges","oldChunk","getChunks","appended","getRangeDifference","bufferedRange","updateBufferedRanges","appendedChunks","remainingChunks","findChunksForRange","sourceArr","originData","findData","removeOrigin","limit","isTracksEqual","remove","forRange","extract","getTotalBufferLevel","getTotalBufferedTime","sortProp","compare","obj1","obj2","chunks","truncateChunk","chunkStart","chunkEnd","isStartIncluded","isEndIncluded","rangeStart","rangeEnd","chunksForRange","fragmentedText","XHRLoader","cfg","xhrs","delayedXhrs","retryTimers","_downloadErrorToRequestTypeMap","_defineProperty","DOWNLOAD_ERROR_ID_MANIFEST","XLINK_EXPANSION_TYPE","DOWNLOAD_ERROR_ID_XLINK","DOWNLOAD_ERROR_ID_CONTENT","INDEX_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","OTHER_TYPE","downloadErrorToRequestTypeMap","internalLoad","remainingAttempts","traces","firstProgress","requestStartTime","lastTraceTime","lastTraceReceivedCount","handleLoaded","requestStartDate","requestEndDate","firstByteDate","checkExistenceOnly","addHttpRequest","getAllResponseHeaders","getRetryIntervalForType","complete","lengthComputable","total","loaded","bytesTotal","modifiedUrl","verb","onprogress","delayLoadingTime","delayedXhr","delayTimeout","getRetryAttemptsForType","clearTimeout","XlinkLoader","resolveObject","content","resolveToZero","resolved","resolvedContent","XLINK_LOADER_ERROR_LOADING_FAILURE","RESOLVE_TO_ZERO","XLINK_TYPE","AbrController","autoSwitchBitrate","topQualities","qualityDict","confidenceDict","bitrateDict","ratioDict","averageThroughputDict","abandonmentStateDict","streamProcessorDict","limitBitrateByPortal","_utilsDOMStorageJs2","state","ALLOW_LOAD","onFragmentLoadProgress","checkMaxBitrate","checkMaxRepresentationRatio","checkPortalSize","savedBitrate","getSavedBitrateSettings","repIdx","round","DEFAULT_VIDEO_BITRATE","DEFAULT_AUDIO_BITRATE","getPlaybackQuality","completedCallback","rules","confidence","res","topQualityIdx","setInternalQuality","setConfidenceFor","getConfidenceFor","getRules","QUALITY_SWITCH_RULES","applyRules","currentValue","newValue","_rulesSwitchRequest2","NO_CHANGE","newPlaybackQuality","isInt","setAbandonmentStateFor","getAbandonmentStateFor","bitrateInfo","infoList","_voBitrateInfoJs2","qualityIndex","setAverageThroughput","setTopQualityIndex","isPlayingAtTopQuality","isAtTop","audioQuality","videoQuality","abandonmentTimeout","maxBitrate","maxIdx","maxRepresentationRatio","elementWidth","elementHeight","newIdx","ABANDON_FRAGMENT_RULES","switchRequest","setupTimeout","getAbandonLoadTimeout","STRONG","requests","getRequests","_modelsFragmentModelJs2","FRAGMENT_MODEL_LOADING","currentQuality","ABANDON_LOAD","replaceCanceledRequests","BaseURLController","onBlackListChanged","baseURLTreeModel","invalidateSelectedIndexes","_modelsBaseURLTreeModelJs2","baseURLSelector","_utilsBaseURLSelectorJs2","chooseSelectorFromManifest","getForPath","reduce","select","_dashVoBaseURLJs2","BlackListController","contains","query","blacklist","updateEventName","onLoadFailed","loadFailedEventName","BufferController","requiredQuality","bufferTarget","criticalBufferLevel","maxAppendedIndex","lastIndex","bufferState","wallclockTicked","appendingMediaChunk","isAppendingInProgress","isPruningInProgress","inbandEventFound","clearBufferTimeout","Source","setMediaSource","_PlaybackControllerJs2","_AbrControllerJs2","onInitFragmentLoaded","onMediaFragmentLoaded","onStreamCompleted","onPlaybackProgression","onPlaybackRateChanged","onPlaybackSeeking","onAppended","onRemoved","onChunkAppended","sourceBuffer","createSourceBuffer","mediaSourceError","updateBufferTimestampOffset","appendNext","isActive","thisStreamId","activeStreamId","switchInitData","getStreamId","FRAGMENT_MODEL_EXECUTED","eventStreamMedia","eventStreamTrack","handleInbandEvents","addInbandEvents","deleteInbandEvents","hasEnoughSpaceToAppend","appendToBuffer","appendedBytesInfo","signalEndOfStream","_SourceBufferControllerJs2","QUOTA_EXCEEDED_ERROR_CODE","clearBuffer","getClearRange","getAllRanges","removeOldTrackData","checkIfBufferingCompleted","updateBufferLevel","addBufferMetrics","checkIfSufficientBuffer","addBufferState","addBufferLevel","isLastIdxAppended","notifyBufferStateChanged","STALL_THRESHOLD","eventType","mediaInbandEvents","trackInbandEvents","eventBoxes","inbandEvents","fragmentStarttime","loop","identifier","expTwo","expThree","modData","subarray","totalBufferedTime","pruneBuffer","bufferToPrune","getBufferToKeep","removeStart","removeEnd","req","getBufferRange","from","to","timestampOffset","currentTrackBufferLength","allAppendedChunks","customTimeRangesFactory","rangesToClear","rangesToLeave","safeBufferLength","isCurrentTrack","_MediaControllerJs2","TRACK_SWITCH_MODE_ALWAYS_REPLACE","switchMode","TRACK_SWITCH_MODE_NEVER_REPLACE","secondsElapsed","getWallclockTimeUpdateInterval","getBufferPruningInterval","setStreamProcessor","getBufferLevel","getCriticalBufferLevel","getIsAppendingInProgress","removeSourceBuffer","isStarted","inlineEvents","activeEvents","eventInterval","presentationTimeThreshold","onEventTimer","values","removeEvents","currentVideoTime","eventIds","keys","eventId","curr","triggerEvents","refreshManifest","MPD_RELOAD_SCHEME","MPD_RELOAD_VALUE","fragmentModels","onFragmentLoadingCompleted","process","getModel","model","findModel","setScheduleController","detachModel","isInitializationRequest","createDataChunk","_voDataChunkJs2","isInit","MediaController","resetInitialSettings","resetSwitchMode","settings","tracksForType","getSavedMediaSettings","matchSettings","selectInitialTrack","initSettings","createTrackInfo","current","extractSettings","storeLastSettings","setSavedMediaSettings","initialSettings","isModeSupported","validTrackSwitchModes","validTrackSelectionModes","selectionMode","DEFAULT_INIT_TRACK_SELECTION_MODE","t1","t2","sameId","sameViewpoint","sameLang","sameRoles","sameAccessibility","sameAudioChannelConfiguration","notEmpty","matchLang","matchViewPoint","matchRole","matchAccessibility","matchAudioChannelConfiguration","tmpArr","getTracksWithHighestBitrate","trackArr","getTracksWithWidestRange","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_WIDEST_RANGE","MediaSourceController","createMediaSource","hasWebKit","hasMediaSource","MediaSource","WebKitMediaSource","attachMediaSource","objectURL","URL","createObjectURL","setSource","detachMediaSource","setDuration","buffers","sourceBuffers","endOfStream","PlaybackController","liveStartTime","wallclockTimeIntervalId","playOnceInitialized","commonEarliestTime","addAllListeners","onBytesAppended","onBufferLevelStateChanged","onPeriodSwitchStarted","fromStreamInfo","getTimeToStreamEnd","getStreamStartTime","isPlaybackStarted","getStreamDuration","paused","seeking","getPlaybackRate","playbackRate","getPlayedRanges","played","getEnded","ended","setLiveStartTime","getLiveStartTime","dvrWindowSize","END_OF_PLAYLIST_PADDING","getUseSuggestedPresentationDelay","getLiveDelay","getLiveDelayFragmentCount","targetDelayCapping","stopUpdatingWallclockTime","removeAllListeners","ignoreStartOffset","startTimeOffset","getURIFragmentData","getActiveStreamCommonEarliestTime","getActualPresentationTime","actualTime","DVRMetrics","startUpdatingWallclockTime","tick","onWallclockTime","seekToStartTimeOffset","initialSeekTime","updateCurrentTime","timeChanged","representationInfo","onCanPlay","onPlaybackStart","onPlaybackPlaying","playingTime","seekTime","onPlaybackSeeked","onPlaybackTimeUpdated","timeToEnd","onPlaybackProgress","onPlaybackMetaDataLoaded","onPlaybackEnded","onPlaybackError","target","srcElement","bufferedStart","setStallState","_BufferControllerJs2","ScheduleController","initialPlayback","playListMetrics","playListTraceMetrics","playListTraceMetricsClosed","isFragmentLoading","timeToLoadDelay","seekTarget","scheduleWhilePaused","bufferLevelRule","_rulesSchedulingBufferLevelRuleJs2","nextFragmentRequestRule","_rulesSchedulingNextFragmentRequestRuleJs2","onTimedTextRequested","onDataUpdateStarted","onStreamInitialized","onBufferCleared","onInitRequested","onQuotaExceeded","onURLResolutionFailed","clearPlayListTraceMetrics","stopreason","trace","ready","addPlaylistTraceMetrics","currentRepresentationInfo","validate","validateTimeout","executeRequest","canceledRequests","EPSILON","readyToLoad","execute","startValidateTimer","getNextFragment","_voMetricsPlayListJs2","Trace","REPRESENTATION_SWITCH_STOP_REASON","getLiveEdge","removeExecutedRequestsBeforeTime","REBUFFERING_REASON","representationid","mstart","playbackspeed","liveEdgeTime","currentLiveStart","actualStartTime","clientTimeOffset","getSeekTarget","setSeekTarget","setTimeToLoadDelay","getTimeToLoadDelay","setPlayList","playList","finalisePlayList","reason","SourceBufferController","addSourceBuffer","ex","_StreamControllerJs2","_utilsVTTParserJs2","_utilsTTMLParserJs2","tolerance","firstStart","lastEnd","gap","toler","currentRanges","newStart","newEnd","equalStart","equalEnd","currentRange","nextCurrentRange","nextNewRange","newRanges","appendMethod","acceptsChunk","waitForUpdateEnd","intervalId","CHECK_INTERVAL","checkIsUpdateEnded","updateEndHandler","StreamController","isStreamSwitchingInProgress","hasMediaError","hasInitialisationError","autoPl","protData","_ManifestUpdaterJs2","onTimeSyncCompleted","onEnded","onManifestUpdated","onStreamBufferingCompleted","flushPlaylistMetrics","activeStream","ctrlr","addPlayList","addPlaylistMetrics","startReason","starttype","fireSwitchEvent","fromStream","toStream","toStreamInfo","startAutoPlay","msExtendedCode","playbackQuality","addDroppedFrames","STREAM_END_THRESHOLD","nextStream","getNextStream","switchStream","END_OF_PERIOD_STOP_REASON","END_OF_CONTENT_STOP_REASON","seekingStream","getStreamForTime","USER_REQUEST_STOP_REASON","SEEK_START_REASON","INITIAL_PLAYOUT_START_REASON","RESUME_FROM_PAUSE_START_REASON","baseStart","streamStart","streamDur","isFinite","onMediaSourceReady","setupMediaSource","onMediaSourceOpen","revokeObjectURL","sourceUrl","setMediaDuration","manifestDuration","mediaDuration","composeStreams","pLen","sLen","pIdx","sIdx","streamsInfo","remainingStreams","PROTECTION_CREATED","setMediaElement","_StreamJs2","addManifestUpdateStreamInfo","checkIfUpdateCompleted","manifestUTCTimingSources","allUTCTimingSources","isHTTPS","isManifestHTTPS","getUseManifestDateHeaderTimeSource","isStreamActive","FAILURE_STOP_REASON","clearAllCurrentMetrics","PROTECTION_DESTROYED","TextController","TimeSyncController","timingSources","useManifestDateHeader","useManifestDateHeaderTimeSource","offsetToDeviceTimeMs","isSynchronizing","isInitialised","urn:mpeg:dash:utc:http-head:2014","httpHeadHandler","urn:mpeg:dash:utc:http-xsdate:2014","httpHandler","xsdatetimeDecoder","urn:mpeg:dash:utc:http-iso:2014","iso8601Decoder","urn:mpeg:dash:utc:direct:2014","directHandler","urn:mpeg:dash:utc:http-head:2012","urn:mpeg:dash:utc:http-xsdate:2012","urn:mpeg:dash:utc:http-iso:2012","urn:mpeg:dash:utc:direct:2012","urn:mpeg:dash:utc:http-ntp:2014","notSupportedHandler","urn:mpeg:dash:utc:ntp:2014","urn:mpeg:dash:utc:sntp:2014","getIsSynchronizing","attemptSync","setIsInitialised","getOffsetToDeviceTimeMs","getOffsetMs","setIsSynchronizing","setOffsetMs","alternateXsdatetimeDecoder","xsdatetimeStr","parsedDate","isoStr","rfc1123Decoder","dateStr","onSuccessCB","onFailureCB","decoder","isHeadRequest","oncomplete","urls","shift","getResponseHeader","timeout","HTTP_TIMEOUT_MS","checkForDateHeader","dateHeaderValue","dateHeaderTime","completeTimeSyncSequence","failed","TIME_SYNC_FAILED_ERROR_CODE","sourceIndex","onComplete","serverTime","deviceTime","XlinkController","onXlinkElementLoaded","xlinkLoader","_XlinkLoaderJs2","getElementsToResolve","ELEMENT_TYPE_PERIOD","RESOLVE_TYPE_ONLOAD","resolveType","onXlinkAllElementsLoaded","originalContent","openingTag","closingTag","mergedContent","isResolvingFinished","mergeElementsBack","RESOLVE_TYPE_ONACTUATE","ELEMENT_TYPE_ADAPTATIONSET","ELEMENT_TYPE_EVENTSTREAM","parentElement","xlinkObject","toResolve","createXlinkObject","resolvedElements","isInappropriateTarget","elementsToResolve","dvbErrorsTranslator","_utilsDVBErrorsTranslatorJs2","_controllersMetricsCollectionControllerJs2","getReportingFactory","_reportingReportingFactoryJs2","getMetricsHandlerFactory","_metricsMetricsHandlerFactoryJs2","_MetricsReportingEventsJs2","MetricsReportingEvents","METRICS_INITIALISATION_COMPLETE","BECAME_REPORTING_PLAYER","metricsReportingEvents","MetricsCollectionController","controllersToRemove","metricsControllers","_utilsManifestParsingJs2","getMetrics","_MetricsControllerJs2","MetricsController","metricsEntry","rangeController","_RangeControllerJs2","Range","reportingController","_ReportingControllerJs2","Reporting","metricsHandlersController","_MetricsHandlersControllerJs2","MetricsHandlersController","handle","handleNewMetric","midx","ms","nextm","metricsHandlerFactory","RangeController","rs","starttime","useWallClockTime","_useWallClockTime","isEnabled","numRanges","ReportingController","reporting","reporter","reportingFactory","reporters","vos","MetricsHandlerFactory","listType","matches","keyRegex","knownFactoryProducts","register","unregister","_handlersBufferLevelHandlerJs2","DVBErrors","_handlersDVBErrorsHandlerJs2","_handlersHttpListHandlerJs2","PlayList","_handlersGenericMetricHandlerJs2","TcpList","BufferLevelHandler","getLowestBufferLevelVO","storedVOs","intervalCallback","lastReportedTime","basename","rc","n_ms","handlerHelpers","validateN","reconstructFullMetricName","interval","_utilsHandlerHelpersJs2","DVBErrorsHandler","onInitialisationComplete","unused","GenericMetricHandler","metricName","HttpListHandler","storedVos","requestType","ReportingFactory","knownReportingSchemeIdUris","moduleName","urn:dvb:dash:reporting:2014","_reportersDVBReportingJs2","DVBReporting","doGetRequest","successCB","failureCB","reqIndex","pendingRequests","isReportingPlayer","metricSerialiser","serialise","USE_DRAFT_DVB_SPEC","reportingUrl","probability","reportingPlayerStatusDecided","randomNumberGenerator","random","allowPendingRequestsToCompleteOnReset","_utilsMetricSerialiserJs2","_utilsRNGJs2","DVBErrorsTranslator","_voDVBErrorsJs2","mpdurl","terror","metricModel","addDVBErrors","onManifestUpdate","onServiceLocationChanged","errorcode","BASE_URL_CHANGED","servicelocation","onBecameReporter","BECAME_REPORTER","handleHttpMetric","CONNECTION_ERROR","tresponse","_serviceLocation","onMetricEvent","MediaError","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","CORRUPT_MEDIA_OTHER","initialise","HandlerHelpers","mn","ManifestParsing","getMetricsRangeStartTime","reportingStartTime","Metrics_asArray","metricEntry","_voMetricsJs2","Range_asArray","rangeEntry","_voRangeJs2","Reporting_asArray","reportingEntry","_voReportingJs2","MetricSerialiser","pairs","isBuiltIn","encodeURIComponent","toISOString","RNG","crypto","randomNumbers","ArrayType","NUM_RANDOM_NUMBERS","getRandomValues","rand","msCrypto","Uint32Array","BYTES_PER_ELEMENT","ipaddress","SSL_CONNECTION_FAILED_PREFIX","DNS_RESOLUTION_FAILED","HOST_UNREACHABLE","CONNECTION_REFUSED","CORRUPT_MEDIA_ISOBMFF","Metrics","Infinity","BaseURLTreeModel","root","Node","updateChildData","objectUtils","areSimpleEquivalent","selectedIdx","DEFAULT_INDEX","getBaseURLCollectionsFromManifest","ai","ri","walk","nodes","_utilsObjectUtilsJs2","_baseUrls","_selectedIdx","FragmentModel","executedRequests","loadingRequests","onLoadingCompleted","isFragmentLoaded","isEqualComplete","req1","req2","_voFragmentRequestJs2","isEqualMedia","isEqualInit","check","isLoaded","states","filteredRequests","getRequestsForState","filterRequests","removeRequest","reqs","addSchedulingInfoMetrics","ACTION_DOWNLOAD","loadCurrentFragment","getRequestForTime","threshold","addSchedulingInfo","addRequestsQueue","FRAGMENT_MODEL_FAILED","FRAGMENT_MODEL_CANCELED","ManifestModel","MediaPlayerModel","bufferOccupancyABREnabled","lastBitrateCachingInfo","DEFAULT_LOCAL_STORAGE_BITRATE_EXPIRATION","lastMediaSettingsCachingInfo","DEFAULT_LOCAL_STORAGE_MEDIA_SETTINGS_EXPIRATION","liveDelayFragmentCount","LIVE_DELAY_FRAGMENT_COUNT","bufferToKeep","BUFFER_TO_KEEP","bufferPruningInterval","BUFFER_PRUNING_INTERVAL","stableBufferTime","DEFAULT_MIN_BUFFER_TIME","bufferTimeAtTopQuality","BUFFER_TIME_AT_TOP_QUALITY","bufferTimeAtTopQualityLongForm","BUFFER_TIME_AT_TOP_QUALITY_LONG_FORM","longFormContentDurationThreshold","LONG_FORM_CONTENT_DURATION_THRESHOLD","richBufferThreshold","RICH_BUFFER_THRESHOLD","bandwidthSafetyFactor","BANDWIDTH_SAFETY_FACTOR","abandonLoadTimeout","ABANDON_LOAD_TIMEOUT","wallclockTimeUpdateInterval","WALLCLOCK_TIME_UPDATE_INTERVAL","_retryAttempts","MANIFEST_RETRY_ATTEMPTS","XLINK_RETRY_ATTEMPTS","FRAGMENT_RETRY_ATTEMPTS","retryAttempts","_retryIntervals","MANIFEST_RETRY_INTERVAL","XLINK_RETRY_INTERVAL","FRAGMENT_RETRY_INTERVAL","retryIntervals","getBufferOccupancyABREnabled","getStableBufferTime","getBufferTimeAtTopQuality","getBufferTimeAtTopQualityLongForm","getLongFormContentDurationThreshold","getRichBufferThreshold","getLastBitrateCachingInfo","getLastMediaSettingsCachingInfo","setRetryAttemptsForType","getFragmentRetryAttempts","setRetryIntervalForType","getFragmentRetryInterval","setWallclockTimeUpdateInterval","MetricsModel","metricsChanged","metricChanged","metricUpdated","metricType","metricAdded","clearCurrentMetricsForType","_voMetricsListJs2","addTcpConnection","tcpid","dest","topen","tclose","tconnect","_voMetricsTCPConnectionJs2","appendHttpTrace","actualurl","trequest","tfinish","mediaduration","responseHeaders","_tfinish","_stream","_mediaduration","mt","lto","_voMetricsRepresentationSwitchJs2","_voMetricsBufferLevelJs2","_voMetricsBufferStateJs2","BufferState","_voMetricsDVRInfoJs2","_voMetricsDroppedFramesJs2","creationTime","droppedVideoFrames","_voMetricsSchedulingInfoJs2","_voMetricsRequestsQueueJs2","addManifestUpdate","requestTime","_voMetricsManifestUpdateJs2","updatedFields","streamIndex","fragmentInfoType","TrackInfo","subreplevel","updateBolaState","_s","_voMetricsBolaStateJs2","BolaState","URIQueryAndFragmentModel","URIFragmentDataVO","_voURIFragmentDataJs2","URIQueryData","getURIQueryData","uri","reduceArray","previousValue","mapArray","isQuery","isFragment","URIFragmentData","mappedArr","testQuery","testFragment","testHTTPS","object","VideoModel","stalledStreams","setPlaybackRate","INVALID_STATE_ERR","preload","removeAttribute","videoContainer","TTMLRenderingDiv","display","overflow","pointerEvents","stallStream","isStalled","addStalledStream","createEvent","initEvent","previousPlaybackRate","dispatchEvent","removeStalledStream","hasQuality","getVideoPlaybackQuality","webkitDroppedFrameCount","CommonEncryption","cpArray","retVal","cp","pssh","keySystem","initData","psshList","parsePSSHList","uuid","cpData","_externalsBase64Js2","dv","done","byteCursor","nextBox","systemID","psshDataSize","boxStart","protectionKeyController","_controllersProtectionKeyControllerJs2","protectionModel","getProtectionModel","_controllersProtectionControllerJs2","setEncryptedMediaSupported","onencrypted","mediaKeys","requestMediaKeySystemAccess","_modelsProtectionModel_21Jan2015Js2","getAPI","APIS_ProtectionModel_3Feb2014","_modelsProtectionModel_3Feb2014Js2","api","APIS_ProtectionModel_01b","_modelsProtectionModel_01bJs2","apis","generateKeyRequest","addKey","cancelKeyRequest","needkey","keyerror","keyadded","keymessage","setMediaKeys","MediaKeys","release","close","_ProtectionEventsJs2","ProtectionEvents","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_SYSTEM_SELECTED","KEY_ADDED","KEY_MESSAGE","KEY_SESSION_CLOSED","KEY_SESSION_REMOVED","KEY_STATUSES_CHANGED","KEY_SYSTEM_ACCESS_COMPLETE","NEED_KEY","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","protectionEvents","keySystems","getKeySystems","pendingNeedKeyData","sessionType","_ProtectionJs2","aInfo","vInfo","audioInfo","videoInfo","supportedKS","getSupportedKeySystemsFromContentProtection","selectKeySystem","createKeySession","initDataForKS","_CommonEncryptionJs2","getPSSHForKeySystem","currentInitData","getAllInitData","initDataEquals","systemString","loadKeySession","sessionID","removeKeySession","sessionToken","closeKeySession","setServerCertificate","serverCertificate","onNeedKey","onKeyMessage","setSessionType","protDataSet","getProtData","keySystemString","fromManifest","audioCapabilities","videoCapabilities","_voMediaCapabilityJs2","ksIdx","ksConfig","_voKeySystemConfigurationJs2","requestedKeySystems","ks","configs","onKeySystemAccessComplete","requestKeySystemAccess","keySystemAccess","onKeySystemSelected","getKeySystem","sendLicenseRequestCompleteEvent","keyMessage","messageType","licenseServerData","getLicenseServer","eventData","getSessionID","isClearKey","clearkeys","processClearKeyLicenseRequest","updateKeySession","serverURL","laURL","getLicenseServerURLFromInitData","getPSSHData","getServerURLFromMessage","getHTTPMethod","getResponseType","getLicenseMessage","getErrorResponse","onabort","updateHeaders","withCredentials","httpRequestHeaders","getRequestHeadersFromMessage","getLicenseRequestFromMessage","initDataType","abInitData","ArrayBuffer","isView","getSupportedKeySystems","ProtectionKeyController","_drmKeySystemPlayReadyJs2","_drmKeySystemWidevineJs2","_drmKeySystemClearKeyJs2","clearkeyKeySystem","getKeySystemBySystemString","initData1","initData2","data1","data2","cps","cpIdx","schemeIdURI","getInitData","_serversDRMTodayJs2","_serversWidevineJs2","_serversPlayReadyJs2","_serversClearKeyJs2","getClearKeysFromProtectionData","KeySystemClearKey","clearkeySet","jsonMsg","keyPairs","kids","clearkeyID","clearkey","_voKeyPairJs2","_voClearKeyKeySetJs2","parseInitDataFromContentProtection","KeySystemPlayReady","dataview","messageFormat","Uint16Array","headerNameList","headerValueList","Content","licenseRequest","Challenge","numRecords","recordType","recordLength","recordData","record","laurl","luiurl","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","pro","prheader","setUint32","set","setPlayReadyMessageFormat","format","KeySystemWidevine","ProtectionModel_01b","pendingSessions","sessions","eventHandler","createEventHandler","removeEventListeners","ksConfigurations","ve","supportedAudio","supportedVideo","configIdx","videoIdx","canPlayType","_voKeySystemAccessJs2","moreSessionsAllowed","newSession","getExpirationTime","getSessionType","keyID","handleEvent","_voNeedKeyJs2","findSessionByID","sessionId","errorCode","systemCode","_voKeyErrorJs2","mediaKeyMessageError","_voKeyMessageJs2","defaultURL","sessionArray","ProtectionModel_21Jan2015","session","numSessions","removeSession","then","closeKeySessionInternal","requestKeySystemAccessInternal","mksa","createMediaKeys","mkeys","createSession","createSessionToken","generateRequest","toJWK","mediaKeySystemAccess","configuration","getConfiguration","expiration","getKeyStatuses","keyStatuses","ProtectionModel_3Feb2014","audios","audioIdx","isTypeSupported","ksAccess","ksConfiguration","boundDoSetKeys","doSetKeys","keySession","errorStr","destinationURL","ClearKey","serverResponse","keypair","keyid","kid","DRMToday","keySystemStr","com.widevine.alpha","license","com.microsoft.playready","PlayReady","Widevine","ClearKeyKeySet","numKeys","jwk","kty","alg","jwkString","buf","bView","KeyError","errorString","KeyMessage","KeyPair","KeySystemAccess","KeySystemConfiguration","distinctiveIdentifier","persistentState","sessionTypes","initDataTypes","MediaCapability","robustness","NeedKey","RulesContext","getTrackInfo","getCurrentValue","RulesController","ABR_RULE","SYNC_RULE","rulesArr","overrideFunc","rule","rulesCount","rulesContext","getRulesContext","callbackFunc","_SwitchRequestJs2","WEAK","DEFAULT","abrRules","synchronizationRules","allRules","_abrABRRulesCollectionJs2","_synchronizationSynchronizationRulesCollectionJs2","TIME_SYNCHRONIZED_RULES","BEST_GUESS_RULES","_RulesContextJs2","SwitchRequest","ABRRulesCollection","qualitySwitchRules","abandonFragmentRules","_BolaRuleJs2","_BolaAbandonRuleJs2","_ThroughputRuleJs2","_BufferOccupancyRuleJs2","_InsufficientBufferRuleJs2","_AbandonRequestsRuleJs2","AbandonRequestsRule","fragmentDict","abandonDict","setFragmentRequestDict","fragmentInfo","progressEvent","firstByteTime","elapsedTime","GRACE_TIME_THRESHOLD","measuredBandwidthInKbps","estimatedTimeOfDownload","toFixed","ABANDON_MULTIPLIER","BolaAbandonRule","rememberAbandon","canStillAbandon","adm","BOLA_STATE_STEADY","bolaState","nowMilliSeconds","elapsedTimeMilliSeconds","bytesRemaining","estimateThroughputBSF","rttSeconds","POOR_RTT_MS","diagnosticMessage","estimateOtherBytesTotal","estimateBytesRemainingAfterRtt","GRACE_PERIOD_MS","safetyGuarantee","lastQuality","BOLA_DEBUG","estimateTimeRemainSeconds","maxQualityAllowed","bufferAfterRtt","score","utility","gp","Vp","BolaRule","lastCallTimeDict","seekMediaTypes","calculateInitialState","initialState","bitrateCount","BOLA_STATE_ONE_BITRATE","bufferMax","bolaBufferTarget","MINIMUM_BUFFER_LEVEL_SPACING","maxRtt","VpNew","gpNew","minThreshold","bolaBufferMax","BOLA_STATE_STARTUP","throughputCount","AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE","AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD","ui","ui1","ri1","th","z","getQualityFromBufferLevel","getLastHttpRequests","allHttpRequests","httpRequests","getLastThroughput","lastRequests","totalInverse","downloadSeconds","downloadBits","getQualityFromThroughput","throughput","q","getDelayFromLastFragmentInSeconds","lastRequest","lastRequestFinishMilliSeconds","lct","delayMilliSeconds","initState","initThroughput","bolaQuality","lastThroughput","timeSinceLastDownload","bolaQualityVirtual","targetBufferLevel","BOLA_STATE_STARTUP_NO_INC","delaySeconds","wantBufferLevel","BufferOccupancyRule","lastSwitchTime","waitToSwitchTime","lastBufferLevel","lastBufferStateVO","isBufferRich","InsufficientBufferRule","bufferStateDict","setBufferInfo","firstBufferLoadedEvent","ThroughputRule","throughputArray","storeLastRequestThroughputByType","lastRequestThroughput","sampleAmount","startValue","totalSampledValue","downloadTime","bufferStateVO","bufferLevelVO","BasicSelector","selectedBaseUrl","blacklistController","DVBSelector","getNonBlacklistedBaseUrls","removedPriorities","samePrioritiesFilter","serviceLocationFilter","selectByWeight","availableUrls","rn","prioritySorter","topPriorityFilter","totalWeight","cumulWeights","every","BufferLevelRule","getBufferTarget","isLongFormContent","NextFragmentRequestRule","hasSeekTarget","LiveEdgeBinarySearchRule","liveEdgeInitialSearchPosition","liveEdgeSearchRange","liveEdgeSearchStep","useBinarySearch","actualLiveEdge","SEARCH_TIME_SPAN","findLiveEdge","onSearchForFragmentSucceeded","onSearchForFragmentFailed","onSuccess","onError","lastSearchTime","searchInterval","binarySearch","lastSearchSucceeded","isSearchCompleted","LiveEdgeWithTimeSynchronizationRule","SynchronizationRulesCollection","withAccurateTimeSourceRules","bestGuestRules","_LiveEdgeWithTimeSynchronizationRuleJs2","_LiveEdgeBinarySearchRuleJs2","BaseURLSelector","serviceLocationBlacklistController","_controllersBlacklistControllerJs2","basicSelector","_rulesBaseUrlResolutionBasicSelectorJs2","dvbSelector","_rulesBaseUrlResolutionDVBSelectorJs2","URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE","URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE","BoxParser","fileStart","parsedFile","dashIsoFile","_IsoFileJs2","setData","Capabilities","encryptedMediaSupported","canPlay","CustomTimeRanges","customTimeRangeArray","mergeRanges","rangeIndex1","rangeIndex2","range1","range2","DOMStorage","isSupported","supported","storage","testKey","testValue","STORAGE_TYPE_LOCAL","STORAGE_TYPE_SESSION","setItem","removeItem","translateLegacyKeys","legacyKeysAndReplacements","localStorage","getItem","oldKey","newKey","getTimestamp","ten_minutes_ms","canStore","storageType","LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE","isExpired","timestamp","LOCAL_STORAGE_BITRATE_KEY_TEMPLATE","ErrorHandler","cc","CAPABILITY_ERROR_MEDIASOURCE","CAPABILITY_ERROR_MEDIAKEYS","DOWNLOAD_ERROR_ID_SIDX","DOWNLOAD_ERROR_ID_INITIALIZATION","MANIFEST_ERROR_ID_CODEC","MANIFEST_ERROR_ID_PARSE","MANIFEST_ERROR_ID_NOSTREAMS","TIMED_TEXT_ERROR_ID_PARSE","IsoFile","parsedIsoFile","convertToDashIsoBox","boxData","getOffset","commonProps","sidxProps","sidxRefProps","emsgProps","mdhdProps","mfhdProps","tfhdProps","sample_description_index","tfdtProps","trunProps","trunSampleProps","copyProps","props","_voIsoBoxJs2","LiveEdgeFinder","isSearchStarted","searchStartTime","ruleSet","onSearchCompleted","LIVE_EDGE_NOT_FOUND_ERROR_CODE","ObjectUtils","RequestModifier","intervalStart","intervalEnd","tt","body","errorMsg","ttNS","getNamespacePrefix","removeNamespacePrefix","layout","ttmlLayout","region_asArray","styling","ttmlStyling","style_asArray","getCellResolution","defaultStyleProperties","processRegion","nsttp","frameRate","body_asArray","p_asArray","pStartTime","pEndTime","spanStartTime","spanEndTime","parseTimings","begin","cueEndTime","clipped","origStart","origEnd","images","metadata","image_asArray","imagetype","constructCueRegion","cueStyleProperties","constructCueStyle","styleIDs","cueParagraph","pElements","cueDirUniWrapper","constructCue","arrayContains","getPropertyFromArray","deletePropertyFromArray","innerHTML","applyLinePadding","wholeRegionID","finalCue","textElements","spanElements","spanEl","timingRegex","defaultLayoutProperties","align-items","-ms-writing-mode","-webkit-writing-mode","-moz-writing-mode","writing-mode","direction","font-family","font-style","line-height","font-weight","text-align","justify-content","text-decoration","unicode-bidi","white-space","fontFamilies","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","default","textAlign","right","center","multiRowAlign","auto","wrapOption","wrap","noWrap","unicodeBidi","normal","embed","bidiOverride","displayAlign","before","after","writingMode","lrtb","rltb","tbrl","tblr","lr","rl","tb","timingStr","timeParts","parsedTime","nsPrefix","camelCaseToDash","convertHexToRGBA","rgba","hex","hexMatrice","alpha","rgb","mergeArrays","primeArray","arrayToAdd","processStyle","cueStyle","valuePadding","valuePaddingInPx","valueFtSize","valueFtSizeInPx","valueLHSize","valueLHSizeInPx","rgbaValue","findStyleFromID","cueStyleID","currStyle","getProcessedStyle","ids","stylesFromId","cueRegion","coordsExtent","extent","coordsOrigin","origin","styleFromID","findRegionFromID","cueRegionID","currReg","getProcessedRegion","regionsFromId","defaultCellResolution","cueHTML","linePaddingLeft","linePaddingRight","outerHTMLBeforeBr","outerHTMLAfterBr","cueInnerHTML","nodeList","indices","spanStringEnd","br","clonePropertyString","styleBefore","outerHTML","styleAfter","cueElements","spanHTMLElement","textNode","createTextNode","hasChildNodes","brEl","newSpanHTMLElement","divRegion","pRegion","pRegionID","divRegionID","applyDefaultProperties","divStyle","pStyle","pStyleID","bodyStyleID","divStyleID","defaultProperties","URLUtils","base","lastIndexOf","absUrl","regExNewLine","regExToken","regExWhiteSpace","regExWhiteSpaceWordBoundary","lastStartTime","parseItemAttributes","cuePoints","getSublines","convertCuePointTimes","timeArray","vttCuePoints","getCaptionStyles","styleObject","lineCount","subline","lineData","decodeURI","BitrateInfo","DataChunk","FragmentRequest","HeadRequest","_FragmentRequest","checkForExistenceOnly","IsoBox","ManifestInfo","MediaInfo","MetricsList","TextRequest","TextTrackInfo","xywh","HTTPRequest","_class","_class2","METRICS_COLLECTION_START_REASON","METRICS_COLLECTION_STOP_REASON","RepresentationSwitch","TCPConnection"],"mappings":"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","file":"dash.all.min.js","sourceRoot":"./src/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* $Date: 2007-06-12 18:02:31 $ */\r\n\r\n// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/\r\n// Handles encode/decode of ASCII and Unicode strings.\r\n\r\nvar UTF8 = {};\r\nUTF8.encode = function(s) {\r\n    var u = [];\r\n    for (var i = 0; i < s.length; ++i) {\r\n        var c = s.charCodeAt(i);\r\n        if (c < 0x80) {\r\n            u.push(c);\r\n        } else if (c < 0x800) {\r\n            u.push(0xC0 | (c >> 6));\r\n            u.push(0x80 | (63 & c));\r\n        } else if (c < 0x10000) {\r\n            u.push(0xE0 | (c >> 12));\r\n            u.push(0x80 | (63 & (c >> 6)));\r\n            u.push(0x80 | (63 & c));\r\n        } else {\r\n            u.push(0xF0 | (c >> 18));\r\n            u.push(0x80 | (63 & (c >> 12)));\r\n            u.push(0x80 | (63 & (c >> 6)));\r\n            u.push(0x80 | (63 & c));\r\n        }\r\n    }\r\n    return u;\r\n};\r\nUTF8.decode = function(u) {\r\n    var a = [];\r\n    var i = 0;\r\n    while (i < u.length) {\r\n        var v = u[i++];\r\n        if (v < 0x80) {\r\n            // no need to mask byte\r\n        } else if (v < 0xE0) {\r\n            v = (31 & v) << 6;\r\n            v |= (63 & u[i++]);\r\n        } else if (v < 0xF0) {\r\n            v = (15 & v) << 12;\r\n            v |= (63 & u[i++]) << 6;\r\n            v |= (63 & u[i++]);\r\n        } else {\r\n            v = (7 & v) << 18;\r\n            v |= (63 & u[i++]) << 12;\r\n            v |= (63 & u[i++]) << 6;\r\n            v |= (63 & u[i++]);\r\n        }\r\n        a.push(String.fromCharCode(v));\r\n    }\r\n    return a.join('');\r\n};\r\n\r\nvar BASE64 = {};\r\n(function(T){\r\n    var encodeArray = function(u) {\r\n        var i = 0;\r\n        var a = [];\r\n        var n = 0 | (u.length / 3);\r\n        while (0 < n--) {\r\n            var v = (u[i] << 16) + (u[i+1] << 8) + u[i+2];\r\n            i += 3;\r\n            a.push(T.charAt(63 & (v >> 18)));\r\n            a.push(T.charAt(63 & (v >> 12)));\r\n            a.push(T.charAt(63 & (v >> 6)));\r\n            a.push(T.charAt(63 & v));\r\n        }\r\n        if (2 == (u.length - i)) {\r\n            var v = (u[i] << 16) + (u[i+1] << 8);\r\n            a.push(T.charAt(63 & (v >> 18)));\r\n            a.push(T.charAt(63 & (v >> 12)));\r\n            a.push(T.charAt(63 & (v >> 6)));\r\n            a.push('=');\r\n        } else if (1 == (u.length - i)) {\r\n            var v = (u[i] << 16);\r\n            a.push(T.charAt(63 & (v >> 18)));\r\n            a.push(T.charAt(63 & (v >> 12)));\r\n            a.push('==');\r\n        }\r\n        return a.join('');\r\n    }\r\n    var R = (function(){\r\n        var a = [];\r\n        for (var i=0; i<T.length; ++i) {\r\n            a[T.charCodeAt(i)] = i;\r\n        }\r\n        a['='.charCodeAt(0)] = 0;\r\n        return a;\r\n    })();\r\n    var decodeArray = function(s) {\r\n        var i = 0;\r\n        var u = [];\r\n        var n = 0 | (s.length / 4);\r\n        while (0 < n--) {\r\n            var v = (R[s.charCodeAt(i)] << 18) + (R[s.charCodeAt(i+1)] << 12) + (R[s.charCodeAt(i+2)] << 6) + R[s.charCodeAt(i+3)];\r\n            u.push(255 & (v >> 16));\r\n            u.push(255 & (v >> 8));\r\n            u.push(255 & v);\r\n            i += 4;\r\n        }\r\n        if (u) {\r\n            if ('=' == s.charAt(i-2)) {\r\n                u.pop();\r\n                u.pop();\r\n            } else if ('=' == s.charAt(i-1)) {\r\n                u.pop();\r\n            }\r\n        }\r\n        return u;\r\n    }\r\n    var ASCII = {};\r\n    ASCII.encode = function(s) {\r\n        var u = [];\r\n        for (var i = 0; i<s.length; ++i) {\r\n            u.push(s.charCodeAt(i));\r\n        }\r\n        return u;\r\n    };\r\n    ASCII.decode = function(u) {\r\n        for (var i = 0; i<s.length; ++i) {\r\n            a[i] = String.fromCharCode(a[i]);\r\n        }\r\n        return a.join('');\r\n    };\r\n    BASE64.decodeArray = function(s) {\r\n        var u = decodeArray(s);\r\n        return new Uint8Array(u);\r\n    };\r\n    BASE64.encodeASCII = function(s) {\r\n        var u = ASCII.encode(s);\r\n        return encodeArray(u);\r\n    };\r\n    BASE64.decodeASCII = function(s) {\r\n        var a = decodeArray(s);\r\n        return ASCII.decode(a);\r\n    };\r\n    BASE64.encode = function(s) {\r\n        var u = UTF8.encode(s);\r\n        return encodeArray(u);\r\n    };\r\n    BASE64.decode = function(s) {\r\n        var u = decodeArray(s);\r\n        return UTF8.decode(u);\r\n    };\r\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\r\n\r\n/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.\r\n Therefore commenting them out.\r\nif (undefined === btoa) {\r\n    var btoa = BASE64.encode;\r\n}\r\nif (undefined === atob) {\r\n    var atob = BASE64.decode;\r\n}\r\n*/\r\n\r\nif (typeof exports !== 'undefined') {\r\n    exports.decode = BASE64.decode;\r\n    exports.decodeArray = BASE64.decodeArray;\r\n}\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2015-2016, DASH Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  1. Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  2. Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n(function(exports) {\r\n\r\n    \"use strict\";\r\n\r\n    /**\r\n     *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes\r\n     */\r\n\r\n    var specialCea608CharsCodes = {\r\n        0x2a : 0xe1, // lowercase a, acute accent\r\n        0x5c : 0xe9, // lowercase e, acute accent\r\n        0x5e : 0xed, // lowercase i, acute accent\r\n        0x5f : 0xf3, // lowercase o, acute accent\r\n        0x60 : 0xfa, // lowercase u, acute accent\r\n        0x7b : 0xe7, // lowercase c with cedilla\r\n        0x7c : 0xf7, // division symbol\r\n        0x7d : 0xd1, // uppercase N tilde\r\n        0x7e : 0xf1, // lowercase n tilde\r\n        0x7f : 0x2588, // Full block\r\n        // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\r\n        // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F\r\n        // THIS MEANS THAT \\x50 MUST BE ADDED TO THE VALUES\r\n        0x80 : 0xae, // Registered symbol (R)\r\n        0x81 : 0xb0, // degree sign\r\n        0x82 : 0xbd, // 1/2 symbol\r\n        0x83 : 0xbf, // Inverted (open) question mark\r\n        0x84 : 0x2122, // Trademark symbol (TM)\r\n        0x85 : 0xa2, // Cents symbol\r\n        0x86 : 0xa3, // Pounds sterling\r\n        0x87 : 0x266a, // Music 8'th note\r\n        0x88 : 0xe0, // lowercase a, grave accent\r\n        0x89 : 0x20, // transparent space (regular)\r\n        0x8a : 0xe8, // lowercase e, grave accent\r\n        0x8b : 0xe2, // lowercase a, circumflex accent\r\n        0x8c : 0xea, // lowercase e, circumflex accent\r\n        0x8d : 0xee, // lowercase i, circumflex accent\r\n        0x8e : 0xf4, // lowercase o, circumflex accent\r\n        0x8f : 0xfb, // lowercase u, circumflex accent\r\n        // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\r\n        // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F\r\n        0x90 : 0xc1, // capital letter A with acute\r\n        0x91 : 0xc9, // capital letter E with acute\r\n        0x92 : 0xd3, // capital letter O with acute\r\n        0x93 : 0xda, // capital letter U with acute\r\n        0x94 : 0xdc, // capital letter U with diaresis\r\n        0x95 : 0xfc, // lowercase letter U with diaeresis\r\n        0x96 : 0x2018, // opening single quote\r\n        0x97 : 0xa1, // inverted exclamation mark\r\n        0x98 : 0x2a, // asterisk\r\n        0x99 : 0x2019, // closing single quote\r\n        0x9a : 0x2501, // box drawings heavy horizontal\r\n        0x9b : 0xa9, // copyright sign\r\n        0x9c : 0x2120, // Service mark\r\n        0x9d : 0x2022, // (round) bullet\r\n        0x9e : 0x201c, // Left double quotation mark\r\n        0x9f : 0x201d, // Right double quotation mark\r\n        0xa0 : 0xc0, // uppercase A, grave accent\r\n        0xa1 : 0xc2, // uppercase A, circumflex\r\n        0xa2 : 0xc7, // uppercase C with cedilla\r\n        0xa3 : 0xc8, // uppercase E, grave accent\r\n        0xa4 : 0xca, // uppercase E, circumflex\r\n        0xa5 : 0xcb, // capital letter E with diaresis\r\n        0xa6 : 0xeb, // lowercase letter e with diaresis\r\n        0xa7 : 0xce, // uppercase I, circumflex\r\n        0xa8 : 0xcf, // uppercase I, with diaresis\r\n        0xa9 : 0xef, // lowercase i, with diaresis\r\n        0xaa : 0xd4, // uppercase O, circumflex\r\n        0xab : 0xd9, // uppercase U, grave accent\r\n        0xac : 0xf9, // lowercase u, grave accent\r\n        0xad : 0xdb, // uppercase U, circumflex\r\n        0xae : 0xab, // left-pointing double angle quotation mark\r\n        0xaf : 0xbb, // right-pointing double angle quotation mark\r\n        // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\r\n        // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F\r\n        0xb0 : 0xc3, // Uppercase A, tilde\r\n        0xb1 : 0xe3, // Lowercase a, tilde\r\n        0xb2 : 0xcd, // Uppercase I, acute accent\r\n        0xb3 : 0xcc, // Uppercase I, grave accent\r\n        0xb4 : 0xec, // Lowercase i, grave accent\r\n        0xb5 : 0xd2, // Uppercase O, grave accent\r\n        0xb6 : 0xf2, // Lowercase o, grave accent\r\n        0xb7 : 0xd5, // Uppercase O, tilde\r\n        0xb8 : 0xf5, // Lowercase o, tilde\r\n        0xb9 : 0x7b, // Open curly brace\r\n        0xba : 0x7d, // Closing curly brace\r\n        0xbb : 0x5c, // Backslash\r\n        0xbc : 0x5e, // Caret\r\n        0xbd : 0x5f, // Underscore\r\n        0xbe : 0x7c, // Pipe (vertical line)\r\n        0xbf : 0x223c, // Tilde operator\r\n        0xc0 : 0xc4, // Uppercase A, umlaut\r\n        0xc1 : 0xe4, // Lowercase A, umlaut\r\n        0xc2 : 0xd6, // Uppercase O, umlaut\r\n        0xc3 : 0xf6, // Lowercase o, umlaut\r\n        0xc4 : 0xdf, // Esszett (sharp S)\r\n        0xc5 : 0xa5, // Yen symbol\r\n        0xc6 : 0xa4, // Generic currency sign\r\n        0xc7 : 0x2503, // Box drawings heavy vertical\r\n        0xc8 : 0xc5, // Uppercase A, ring\r\n        0xc9 : 0xe5, // Lowercase A, ring\r\n        0xca : 0xd8, // Uppercase O, stroke\r\n        0xcb : 0xf8, // Lowercase o, strok\r\n        0xcc : 0x250f, // Box drawings heavy down and right\r\n        0xcd : 0x2513, // Box drawings heavy down and left\r\n        0xce : 0x2517, // Box drawings heavy up and right\r\n        0xcf : 0x251b // Box drawings heavy up and left\r\n    };\r\n\r\n    /**\r\n     * Get Unicode Character from CEA-608 byte code\r\n     */\r\n    var getCharForByte = function(byte) {\r\n        var charCode = byte;\r\n        if (specialCea608CharsCodes.hasOwnProperty(byte)) {\r\n            charCode = specialCea608CharsCodes[byte];\r\n        }\r\n        return String.fromCharCode(charCode);\r\n    };\r\n\r\n    var NR_ROWS = 15,\r\n        NR_COLS = 32;\r\n    // Tables to look up row from PAC data\r\n    var rowsLowCh1 = {0x11 : 1, 0x12 : 3, 0x15 : 5, 0x16 : 7, 0x17 : 9, 0x10 : 11, 0x13 : 12, 0x14 : 14};\r\n    var rowsHighCh1 = {0x11 : 2, 0x12 : 4, 0x15 : 6, 0x16 : 8, 0x17 : 10, 0x13 : 13, 0x14 : 15};\r\n    var rowsLowCh2 = {0x19 : 1, 0x1A : 3, 0x1D : 5, 0x1E : 7, 0x1F : 9, 0x18 : 11, 0x1B : 12, 0x1C : 14};\r\n    var rowsHighCh2 = {0x19 : 2, 0x1A : 4, 0x1D : 6, 0x1E : 8, 0x1F : 10, 0x1B : 13, 0x1C : 15};\r\n\r\n    var backgroundColors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'];\r\n\r\n    /**\r\n     * Simple logger class to be able to write with time-stamps and filter on level.\r\n     */\r\n    var logger = {\r\n        verboseFilter : {'DATA' : 3, 'DEBUG' : 3, 'INFO' : 2, 'WARNING' : 2, 'TEXT' : 1, 'ERROR' : 0},\r\n        time : null,\r\n        verboseLevel : 0, // Only write errors\r\n        setTime : function(newTime) {\r\n            this.time = newTime;\r\n        },\r\n        log : function(severity, msg) {\r\n            var minLevel = this.verboseFilter[severity];\r\n            if (this.verboseLevel >= minLevel) {\r\n                console.log(this.time + \" [\" + severity + \"] \" + msg);\r\n            }\r\n        }\r\n    };\r\n\r\n    var numArrayToHexArray = function(numArray) {\r\n        var hexArray = [];\r\n        for (var j = 0; j < numArray.length; j++) {\r\n            hexArray.push(numArray[j].toString(16));\r\n        }\r\n        return hexArray;\r\n    };\r\n\r\n    /**\r\n     * State of CEA-608 pen or character\r\n     * @constructor\r\n     */\r\n    var PenState = function(foreground, underline, italics, background, flash) {\r\n        this.foreground = foreground || \"white\";\r\n        this.underline = underline || false;\r\n        this.italics = italics || false;\r\n        this.background = background || \"black\";\r\n        this.flash = flash || false;\r\n    };\r\n\r\n    PenState.prototype = {\r\n        \r\n        reset : function() {\r\n            this.foreground = \"white\";\r\n            this.underline = false;\r\n            this.italics = false;\r\n            this.background = \"black\";\r\n            this.flash = false;\r\n        },\r\n        \r\n        setStyles : function(styles) {\r\n            var attribs = [\"foreground\", \"underline\", \"italics\", \"background\", \"flash\"];\r\n            for (var i = 0 ; i < attribs.length; i++) {\r\n                var style = attribs[i];\r\n                if (styles.hasOwnProperty(style)) {\r\n                    this[style] = styles[style];\r\n                }\r\n            }\r\n        },\r\n        \r\n        isDefault : function() {\r\n            return (this.foreground === \"white\" && !this.underline && !this.italics && \r\n                    this.background === \"black\" && !this.flash);\r\n        },\r\n\r\n        equals : function(other) {\r\n            return ( (this.foreground === other.foreground) && \r\n                     (this.underline === other.underline) &&\r\n                     (this.italics === other.italics) &&\r\n                     (this.background === other.background) &&\r\n                     (this.flash === other.flash) );\r\n        },\r\n\r\n        copy : function(newPenState) {\r\n            this.foreground = newPenState.foreground;\r\n            this.underline = newPenState.underline;\r\n            this.italics = newPenState.italics;\r\n            this.background = newPenState.background;\r\n            this.flash = newPenState.flash;\r\n        },\r\n        \r\n        toString: function() {\r\n            return (\"color=\" + this.foreground + \", underline=\" + this.underline + \", italics=\" + this.italics +\r\n                \", background=\" + this.background + \", flash=\" + this.flash);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Unicode character with styling and background.\r\n     * @constructor\r\n     */\r\n    var StyledUnicodeChar = function(uchar, foreground, underline, italics, background, flash) {\r\n        this.uchar = uchar || ' '; // unicode character\r\n        this.penState = new PenState(foreground, underline,italics, background, flash);\r\n    };\r\n\r\n    StyledUnicodeChar.prototype = {\r\n        \r\n        reset: function() {\r\n            this.uchar = ' ';\r\n            this.penState.reset();\r\n        },\r\n        \r\n        setChar: function(uchar, newPenState) {\r\n            this.uchar = uchar;\r\n            this.penState.copy(newPenState);\r\n        },\r\n        \r\n        setPenState: function(newPenState) {\r\n            this.penState.copy(newPenState);\r\n        },\r\n        \r\n        equals: function(other) {\r\n            return this.uchar === other.uchar && this.penState.equals(other.penState);\r\n        },\r\n        \r\n        copy: function(newChar) {\r\n            this.uchar = newChar.uchar;\r\n            this.penState.copy(newChar.penState);\r\n        },\r\n        \r\n        isEmpty : function() {\r\n            return this.uchar === ' ' && this.penState.isDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.\r\n     * @constructor\r\n     */\r\n    var Row = function() {\r\n        this.chars = [];\r\n        for (var i = 0 ; i < NR_COLS ; i++) {\r\n            this.chars.push(new StyledUnicodeChar());\r\n        }\r\n        this.pos = 0;\r\n        this.currPenState = new PenState();\r\n    };\r\n\r\n    Row.prototype = {\r\n        \r\n        equals: function(other) {\r\n            var equal = true;\r\n            for (var i = 0 ; i < NR_COLS; i ++) {\r\n                if (!this.chars[i].equals(other.chars[i])) {\r\n                    equal = false;\r\n                    break;\r\n                }\r\n            }\r\n            return equal;\r\n        },\r\n        \r\n        copy: function(other) {\r\n            for (var i = 0 ; i < NR_COLS; i ++) {\r\n                this.chars[i].copy(other.chars[i]);\r\n            }\r\n        },\r\n        \r\n        isEmpty : function() {\r\n            var empty = true;\r\n            for (var i = 0 ; i < NR_COLS; i ++) {\r\n                if (!this.chars[i].isEmpty()) {\r\n                    empty = false;\r\n                    break;\r\n                }\r\n            }\r\n            return empty;\r\n        },\r\n\r\n        /**\r\n         *  Set the cursor to a valid column.\r\n         */\r\n        setCursor : function(absPos) {\r\n            if (this.pos !== absPos) {\r\n                this.pos = absPos;\r\n            }\r\n            if (this.pos < 0) {\r\n                logger.log(\"ERROR\", \"Negative cursor position \" + this.pos);\r\n                this.pos = 0;\r\n            } else if (this.pos > NR_COLS) {\r\n                logger.log(\"ERROR\", \"Too large cursor position \" + this.pos);\r\n                this.pos = NR_COLS;\r\n            }\r\n        },\r\n\r\n        /** \r\n         * Move the cursor relative to current position.\r\n         */\r\n        moveCursor : function(relPos) {\r\n            var newPos = this.pos + relPos;\r\n            if (relPos > 1) {\r\n                for (var i = this.pos+1; i < newPos+1 ; i++) {\r\n                    this.chars[i].setPenState(this.currPenState);\r\n                }\r\n            }\r\n            this.setCursor(newPos);\r\n        },\r\n\r\n        /**\r\n         * Backspace, move one step back and clear character.\r\n         */\r\n        backSpace : function () {\r\n            this.moveCursor(-1);\r\n            this.chars[this.pos].setChar(' ', this.currPenState);\r\n        },\r\n\r\n        insertChar: function(byte) {\r\n            if (byte >= 0x90) { //Extended char\r\n                this.backSpace();\r\n            }\r\n            var char = getCharForByte(byte);\r\n            if (this.pos >= NR_COLS) {\r\n                logger.log(\"ERROR\", \"Cannot insert \" + byte.toString(16) +  \r\n                            \" (\" + char + \") at position \" + this.pos + \". Skipping it!\");\r\n                return;\r\n            }\r\n            this.chars[this.pos].setChar(char, this.currPenState);\r\n            this.moveCursor(1);\r\n        },\r\n\r\n        clearFromPos : function(startPos) {\r\n            var i;\r\n            for (i = startPos ; i < NR_COLS ; i++) {\r\n                this.chars[i].reset();\r\n            }\r\n        },\r\n\r\n        clear : function() {\r\n            this.clearFromPos(0);\r\n            this.pos = 0;\r\n            this.currPenState.reset();\r\n        },\r\n\r\n        clearToEndOfRow : function() {\r\n            this.clearFromPos(this.pos);\r\n        },\r\n\r\n        getTextString: function() {\r\n            var chars = [];\r\n            var empty = true;\r\n            for (var i = 0 ; i < NR_COLS ; i++) {\r\n                var char = this.chars[i].uchar;\r\n                if (char !== \" \") {\r\n                    empty = false;\r\n                }\r\n                chars.push(char);\r\n            }\r\n            if (empty) {\r\n                return \"\";\r\n            } else {\r\n                return chars.join(\"\");\r\n            }\r\n        },\r\n\r\n        setPenStyles: function(styles) {\r\n            this.currPenState.setStyles(styles);\r\n            var currChar = this.chars[this.pos];\r\n            currChar.setPenState(this.currPenState);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Keep a CEA-608 screen of 32x15 styled characters\r\n     * @constructor\r\n    */\r\n    var CaptionScreen = function() {\r\n\r\n        this.rows = [];\r\n        for (var i = 0 ; i <  NR_ROWS; i++) {\r\n            this.rows.push(new Row()); // Note that we use zero-based numbering (0-14)\r\n        }\r\n        this.currRow = NR_ROWS - 1;\r\n        this.nrRollUpRows = null;\r\n        this.reset();\r\n    };\r\n\r\n    CaptionScreen.prototype = {\r\n\r\n        reset : function() {\r\n            for (var i = 0 ; i < NR_ROWS ; i++) {\r\n                this.rows[i].clear();\r\n            }\r\n            this.currRow = NR_ROWS - 1;\r\n        },\r\n\r\n        equals : function(other) {\r\n            var equal = true;\r\n            for (var i = 0 ; i < NR_ROWS ; i++) {\r\n                if (!this.rows[i].equals(other.rows[i])) {\r\n                    equal = false;\r\n                    break;\r\n                }\r\n            }\r\n            return equal;\r\n        },\r\n\r\n        copy : function(other) {\r\n            for (var i = 0 ; i < NR_ROWS ; i++) {\r\n                this.rows[i].copy(other.rows[i]);\r\n            }\r\n        },\r\n\r\n        isEmpty : function() {\r\n            var empty = true;\r\n            for (var i = 0 ; i < NR_ROWS ; i++) {\r\n                if (!this.rows[i].isEmpty()) {\r\n                    empty = false;\r\n                    break;\r\n                }\r\n            }\r\n            return empty;\r\n        },\r\n\r\n        backSpace : function() {\r\n            var row = this.rows[this.currRow]; \r\n            row.backSpace();\r\n        },\r\n\r\n        clearToEndOfRow : function() {\r\n            var row = this.rows[this.currRow];\r\n            row.clearToEndOfRow();\r\n        },\r\n\r\n        /**\r\n         * Insert a character (without styling) in the current row.\r\n         */\r\n        insertChar : function(char) {\r\n            var row = this.rows[this.currRow];\r\n            row.insertChar(char);\r\n        },\r\n\r\n        setPen : function(styles) {\r\n            var row = this.rows[this.currRow];\r\n            row.setPenStyles(styles);\r\n        },\r\n\r\n        moveCursor : function(relPos) {\r\n            var row = this.rows[this.currRow];\r\n            row.moveCursor(relPos); \r\n        },\r\n\r\n        setCursor : function(absPos) {\r\n            logger.log(\"INFO\", \"setCursor: \" + absPos);\r\n            var row = this.rows[this.currRow];\r\n            row.setCursor(absPos);\r\n        },\r\n\r\n        setPAC : function(pacData) {\r\n            logger.log(\"INFO\", \"pacData = \" + JSON.stringify(pacData));\r\n            var newRow = pacData.row - 1;\r\n            if (this.nrRollUpRows  && newRow < this.nrRollUpRows - 1) {\r\n                    newRow = this.nrRollUpRows-1;\r\n            }\r\n            this.currRow = newRow;\r\n            var row = this.rows[this.currRow];\r\n            if (pacData.indent !== null) {\r\n                var indent = pacData.indent;\r\n                var prevPos = Math.max(indent-1, 0);\r\n                row.setCursor(pacData.indent);\r\n                pacData.color = row.chars[prevPos].penState.foreground;\r\n            }\r\n            var styles = {foreground : pacData.color, underline : pacData.underline, italics : pacData.italics, background : 'black', flash : false};\r\n            this.setPen(styles);\r\n        },\r\n\r\n        /**\r\n         * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\r\n         */\r\n        setBkgData : function(bkgData) {\r\n\r\n            logger.log(\"INFO\", \"bkgData = \" + JSON.stringify(bkgData));\r\n            this.backSpace();\r\n            this.setPen(bkgData);\r\n            this.insertChar(0x20); //Space\r\n        },\r\n\r\n        setRollUpRows : function(nrRows) {\r\n            this.nrRollUpRows = nrRows;\r\n        },\r\n\r\n        rollUp : function() {\r\n            if (this.nrRollUpRows === null) {\r\n                logger.log(\"DEBUG\", \"roll_up but nrRollUpRows not set yet\");\r\n                return; //Not properly setup\r\n            }\r\n            logger.log(\"TEXT\", this.getDisplayText());\r\n            var topRowIndex = this.currRow + 1 - this.nrRollUpRows;\r\n            var topRow = this.rows.splice(topRowIndex, 1)[0];\r\n            topRow.clear();\r\n            this.rows.splice(this.currRow, 0, topRow);\r\n            logger.log(\"INFO\", \"Rolling up\");\r\n            //logger.log(\"TEXT\", this.get_display_text())\r\n        },\r\n\r\n       /**\r\n        * Get all non-empty rows with as unicode text. \r\n        */        \r\n        getDisplayText : function(asOneRow) {\r\n            asOneRow = asOneRow || false;\r\n            var displayText = [];\r\n            var text = \"\";\r\n            var rowNr = -1;\r\n            for (var i = 0 ; i < NR_ROWS ; i++) {\r\n                var rowText = this.rows[i].getTextString();\r\n                if (rowText) {\r\n                    rowNr = i+1;\r\n                    if (asOneRow) {\r\n                        displayText.push(\"Row \" + rowNr + ': \"' + rowText + '\"');\r\n                    } else {\r\n                        displayText.push(rowText.trim());\r\n                    }\r\n                }\r\n            }\r\n            if (displayText.length > 0) {\r\n                if (asOneRow) {\r\n                    text = \"[\" + displayText.join(\" | \") + \"]\";\r\n                } else {\r\n                    text = displayText.join(\"\\n\");\r\n                }\r\n            }\r\n            return text;\r\n        },\r\n\r\n        getTextAndFormat : function() {\r\n            return this.rows;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle a CEA-608 channel and send decoded data to outputFilter\r\n     * @constructor\r\n     * @param {Number} channelNumber (1 or 2)\r\n     * @param {CueHandler} outputFilter Output from channel1 newCue(startTime, endTime, captionScreen)\r\n    */\r\n    var Cea608Channel = function(channelNumber, outputFilter) {\r\n\r\n        this.chNr = channelNumber;\r\n        this.outputFilter = outputFilter;\r\n        this.mode = null;\r\n        this.verbose = 0;\r\n        this.displayedMemory = new CaptionScreen();\r\n        this.nonDisplayedMemory = new CaptionScreen();\r\n        this.lastOutputScreen = new CaptionScreen();\r\n        this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\r\n        this.writeScreen = this.displayedMemory;\r\n        this.mode = null;\r\n        this.cueStartTime = null; // Keeps track of where a cue started.\r\n    };\r\n\r\n    Cea608Channel.prototype = {\r\n        \r\n        modes : [\"MODE_ROLL-UP\", \"MODE_POP-ON\", \"MODE_PAINT-ON\", \"MODE_TEXT\"],\r\n        \r\n        reset : function() {\r\n            this.mode = null;\r\n            this.displayedMemory.reset();\r\n            this.nonDisplayedMemory.reset();\r\n            this.lastOutputScreen.reset();\r\n            this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\r\n            this.writeScreen = this.displayedMemory;\r\n            this.mode = null;\r\n            this.cueStartTime = null;\r\n            this.lastCueEndTime = null;\r\n        },\r\n\r\n        getHandler : function() {\r\n            return this.outputFilter;\r\n        },\r\n\r\n        setHandler : function(newHandler) {\r\n            this.outputFilter = newHandler;\r\n        },\r\n\r\n        setPAC : function(pacData) {\r\n            this.writeScreen.setPAC(pacData);\r\n        },\r\n\r\n        setBkgData : function(bkgData) {\r\n            this.writeScreen.setBkgData(bkgData);\r\n        },\r\n\r\n        setMode : function(newMode) {\r\n            if (newMode === this.mode) {\r\n                return;\r\n            }\r\n            this.mode = newMode;\r\n            logger.log(\"INFO\", \"MODE=\" + newMode);\r\n            if (this.mode == \"MODE_POP-ON\") {\r\n                this.writeScreen = this.nonDisplayedMemory;\r\n            } else {\r\n                this.writeScreen = this.displayedMemory;\r\n                this.writeScreen.reset();\r\n            }\r\n            if (this.mode !== \"MODE_ROLL-UP\") {\r\n                this.displayedMemory.nrRollUpRows = null;\r\n                this.nonDisplayedMemory.nrRollUpRows = null;\r\n            }\r\n            this.mode = newMode;\r\n        },\r\n\r\n        insertChars : function(chars) {\r\n            for (var i = 0 ; i < chars.length ; i++) {\r\n                this.writeScreen.insertChar(chars[i]);\r\n            }\r\n            var screen = this.writeScreen === this.displayedMemory ? \"DISP\" : \"NON_DISP\";\r\n            logger.log(\"INFO\", screen + \": \" + this.writeScreen.getDisplayText(true));\r\n            if (this.mode === \"MODE_PAINT-ON\" || this.mode === \"MODE_ROLL-UP\") {\r\n                logger.log(\"TEXT\", \"DISPLAYED: \" + this.displayedMemory.getDisplayText(true));\r\n                this.outputDataUpdate();\r\n            }\r\n        },\r\n\r\n        cc_RCL: function() { // Resume Caption Loading (switch mode to Pop On)\r\n            logger.log(\"INFO\", \"RCL - Resume Caption Loading\");\r\n            this.setMode(\"MODE_POP-ON\");\r\n        },\r\n        cc_BS: function() { // BackSpace\r\n            logger.log(\"INFO\", \"BS - BackSpace\");\r\n            if (this.mode === \"MODE_TEXT\") {\r\n                return;\r\n            }\r\n            this.writeScreen.backSpace();\r\n            if (this.writeScreen === this.displayedMemory) {\r\n                this.outputDataUpdate();\r\n            }\r\n        },\r\n        cc_AOF : function() { // Reserved (formerly Alarm Off)\r\n            return;\r\n        },\r\n        cc_AON: function() { // Reserved (formerly Alarm On)\r\n            return;\r\n        },\r\n        cc_DER: function() { // Delete to End of Row\r\n            logger.log(\"INFO\", \"DER- Delete to End of Row\");\r\n            this.writeScreen.clearToEndOfRow();\r\n            this.outputDataUpdate();\r\n        },\r\n        cc_RU: function(nrRows) { //Roll-Up Captions-2,3,or 4 Rows\r\n            logger.log(\"INFO\", \"RU(\" + nrRows +\") - Roll Up\");\r\n            this.writeScreen = this.displayedMemory;\r\n            this.setMode(\"MODE_ROLL-UP\");\r\n            this.writeScreen.setRollUpRows(nrRows);\r\n        },\r\n        cc_FON: function() { //Flash On\r\n            logger.log(\"INFO\", \"FON - Flash On\");\r\n            this.writeScreen.setPen({flash : true});\r\n        },\r\n        cc_RDC: function() { // Resume Direct Captioning (switch mode to PaintOn)\r\n            logger.log(\"INFO\", \"RDC - Resume Direct Captioning\");\r\n            this.setMode(\"MODE_PAINT-ON\");\r\n        },\r\n        cc_TR: function() { // Text Restart in text mode (not supported, however)\r\n            logger.log(\"INFO\", \"TR\");\r\n            this.setMode(\"MODE_TEXT\");\r\n        },\r\n        cc_RTD: function() { // Resume Text Display in Text mode (not supported, however)\r\n            logger.log(\"INFO\", \"RTD\");\r\n            this.setMode(\"MODE_TEXT\");\r\n        },\r\n        cc_EDM: function() { // Erase Displayed Memory\r\n            logger.log(\"INFO\", \"EDM - Erase Displayed Memory\");\r\n            this.displayedMemory.reset();\r\n            this.outputDataUpdate();\r\n        },\r\n        cc_CR: function() { // Carriage Return\r\n            logger.log(\"CR - Carriage Return\");\r\n            this.writeScreen.rollUp();\r\n            this.outputDataUpdate();\r\n        },\r\n        cc_ENM: function() { //Erase Non-Displayed Memory\r\n            logger.log(\"INFO\", \"ENM - Erase Non-displayed Memory\");\r\n            this.nonDisplayedMemory.reset();\r\n        },\r\n        cc_EOC: function() { //End of Caption (Flip Memories)\r\n            logger.log(\"INFO\", \"EOC - End Of Caption\");\r\n            if (this.mode === \"MODE_POP-ON\") {\r\n                var tmp = this.displayedMemory;\r\n                this.displayedMemory = this.nonDisplayedMemory;\r\n                this.nonDisplayedMemory = tmp;\r\n                this.writeScreen = this.nonDisplayedMemory;\r\n                logger.log(\"TEXT\", \"DISP: \" + this.displayedMemory.getDisplayText());\r\n            }\r\n            this.outputDataUpdate();\r\n        },\r\n        cc_TO: function(nrCols) { // Tab Offset 1,2, or 3 columns\r\n            logger.log(\"INFO\", \"TO(\" + nrCols + \") - Tab Offset\");\r\n            this.writeScreen.moveCursor(nrCols);\r\n        },\r\n        cc_MIDROW: function(secondByte) { // Parse MIDROW command\r\n            var styles = {flash : false};\r\n            styles.underline = secondByte % 2 === 1;\r\n            styles.italics = secondByte >= 0x2e;\r\n            if (!styles.italics) {\r\n                var colorIndex = Math.floor(secondByte/2) - 0x10;\r\n                var colors = [\"white\", \"green\", \"blue\", \"cyan\", \"red\", \"yellow\", \"magenta\"];\r\n                styles.foreground = colors[colorIndex];\r\n            } else {\r\n                styles.foreground = \"white\";\r\n            }\r\n            logger.log(\"INFO\", \"MIDROW: \" + JSON.stringify(styles));\r\n            this.writeScreen.setPen(styles);\r\n        },\r\n\r\n        outputDataUpdate: function() {\r\n            var t = logger.time;\r\n            if (t === null) {\r\n                return;\r\n            }\r\n            if (this.outputFilter) {\r\n                if (this.outputFilter.updateData) {\r\n                    this.outputFilter.updateData(t, this.displayedMemory);\r\n                }\r\n                if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) { // Start of a new cue\r\n                    this.cueStartTime = t;\r\n                } else {\r\n                    if (!this.displayedMemory.equals(this.lastOutputScreen)) { \r\n                        if (this.outputFilter.newCue) {\r\n                            this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen);\r\n                        }\r\n                        this.cueStartTime = this.displayedMemory.isEmpty() ? null : t;\r\n                    }\r\n                }\r\n                this.lastOutputScreen.copy(this.displayedMemory);\r\n            }\r\n        },\r\n\r\n        cueSplitAtTime : function(t) {\r\n            if (this.outputFilter) {\r\n                if (!this.displayedMemory.isEmpty()) {\r\n                    if (this.outputFilter.newCue) {\r\n                        this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory);\r\n                    }\r\n                    this.cueStartTime = t;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Parse CEA-608 data and send decoded data to out1 and out2.\r\n     * @constructor\r\n     * @param {Number} field  CEA-608 field (1 or 2)\r\n     * @param {CueHandler} out1 Output from channel1 newCue(startTime, endTime, captionScreen)\r\n     * @param {CueHandler} out2 Output from channel2 newCue(startTime, endTime, captionScreen)\r\n     */\r\n    var Cea608Parser = function(field, out1, out2) {\r\n        this.field = field || 1;\r\n        this.outputs = [out1, out2];\r\n        this.channels = [new Cea608Channel(1, out1), new Cea608Channel(2, out2)];\r\n        this.currChNr = -1; // Will be 1 or 2\r\n        this.lastCmdA = null; // First byte of last command\r\n        this.lastCmdB = null; // Second byte of last command\r\n        this.bufferedData = [];\r\n        this.startTime = null;\r\n        this.lastTime = null;\r\n        this.dataCounters = {'padding' : 0, 'char' : 0, 'cmd' : 0, 'other' : 0};\r\n    };\r\n\r\n    Cea608Parser.prototype = {\r\n        \r\n        getHandler : function(index) {\r\n            return this.channels[index].getHandler();\r\n        },\r\n        \r\n        setHandler : function(index, newHandler) {\r\n            this.channels[index].setHandler(newHandler);\r\n        },\r\n\r\n        /**\r\n         * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\r\n         */\r\n        addData : function(t, byteList) {\r\n            var cmdFound, a, b, \r\n            charsFound = false;\r\n            \r\n            this.lastTime = t;\r\n            logger.setTime(t);\r\n\r\n            for (var i = 0 ; i < byteList.length ; i+=2) {\r\n                a = byteList[i] & 0x7f;\r\n                b = byteList[i+1] & 0x7f;\r\n                if (a === 0 && b === 0) {\r\n                    this.dataCounters.padding += 2;\r\n                    continue;\r\n                } else {\r\n                    logger.log(\"DATA\", \"[\" + numArrayToHexArray([byteList[i], byteList[i+1]]) +\"] -> (\" + numArrayToHexArray([a, b]) + \")\");\r\n                }\r\n                cmdFound = this.parseCmd(a, b);\r\n                if (!cmdFound) {\r\n                    cmdFound = this.parseMidrow(a, b);\r\n                }\r\n                if (!cmdFound) {\r\n                    cmdFound = this.parsePAC(a, b);\r\n                }\r\n                if (!cmdFound) {\r\n                    cmdFound = this.parseBackgroundAttributes(a, b);\r\n                }\r\n                if (!cmdFound) {\r\n                    charsFound = this.parseChars(a, b);\r\n                    if (charsFound) {\r\n                        if (this.currChNr && this.currChNr >=0) {\r\n                            var channel = this.channels[this.currChNr-1];\r\n                            channel.insertChars(charsFound);\r\n                        } else {\r\n                            logger.log(\"WARNING\", \"No channel found yet. TEXT-MODE?\");\r\n                        }\r\n                    }\r\n                }\r\n                if (cmdFound) {\r\n                    this.dataCounters.cmd += 2;\r\n                } else if (charsFound) {\r\n                    this.dataCounters.char += 2;\r\n                } else {\r\n                    this.dataCounters.other += 2;\r\n                    logger.log(\"WARNING\", \"Couldn't parse cleaned data \" + numArrayToHexArray([a, b]) +\r\n                                \" orig: \" + numArrayToHexArray([byteList[i], byteList[i+1]]));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Parse Command.\r\n         * @returns {Boolean} Tells if a command was found\r\n         */\r\n        parseCmd: function(a, b) {\r\n            var chNr = null;\r\n\r\n            var cond1 = (a === 0x14 || a === 0x1C) && (0x20 <= b && b <= 0x2F);\r\n            var cond2 = (a === 0x17 || a === 0x1F) && (0x21 <= b && b <= 0x23);\r\n            if (!(cond1 || cond2)) {\r\n                return false;\r\n            }\r\n                 \r\n            if (a === this.lastCmdA && b === this.lastCmdB) {\r\n                this.lastCmdA = null;\r\n                this.lastCmdB = null; // Repeated commands are dropped (once)\r\n                logger.log(\"DEBUG\", \"Repeated command (\" + numArrayToHexArray([a, b]) + \") is dropped\");\r\n                return true;\r\n            }\r\n\r\n            if (a === 0x14 || a === 0x17) {\r\n                chNr = 1;\r\n            } else {\r\n                chNr = 2; // (a === 0x1C || a=== 0x1f)\r\n            }\r\n\r\n            var channel = this.channels[chNr - 1];\r\n\r\n            if (a === 0x14 || a === 0x1C) {\r\n                if (b === 0x20) {\r\n                    channel.cc_RCL();\r\n                } else if (b === 0x21) {\r\n                    channel.cc_BS();\r\n                } else if (b === 0x22) {\r\n                    channel.cc_AOF();\r\n                } else if (b === 0x23) {\r\n                    channel.cc_AON();\r\n                } else if (b === 0x24) {\r\n                    channel.cc_DER();\r\n                } else if (b === 0x25) {\r\n                    channel.cc_RU(2);\r\n                } else if (b === 0x26) {\r\n                    channel.cc_RU(3);\r\n                } else if (b === 0x27) {\r\n                    channel.cc_RU(4);\r\n                } else if (b === 0x28) {\r\n                    channel.cc_FON();\r\n                } else if (b === 0x29) {\r\n                    channel.cc_RDC();\r\n                } else if (b === 0x2A) {\r\n                    channel.cc_TR();\r\n                } else if (b === 0x2B) {\r\n                    channel.cc_RTD();\r\n                } else if (b === 0x2C) {\r\n                    channel.cc_EDM();\r\n                } else if (b === 0x2D) {\r\n                    channel.cc_CR();\r\n                } else if (b === 0x2E) {\r\n                    channel.cc_ENM();\r\n                } else if (b === 0x2F) {\r\n                    channel.cc_EOC();\r\n                }\r\n            } else { //a == 0x17 || a == 0x1F\r\n                channel.cc_TO(b - 0x20);\r\n            }\r\n            this.lastCmdA = a;\r\n            this.lastCmdB = b;\r\n            this.currChNr = chNr;\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Parse midrow styling command\r\n         * @returns {Boolean}\r\n         */\r\n        parseMidrow : function(a, b) {\r\n            var chNr = null;\r\n                \r\n            if ( ((a === 0x11) || (a === 0x19)) && 0x20 <= b && b <= 0x2f) {\r\n                if (a === 0x11) {\r\n                    chNr = 1;\r\n                } else  {\r\n                    chNr = 2;\r\n                }\r\n                if (chNr !== this.currChNr) {\r\n                    logger.log(\"ERROR\", \"Mismatch channel in midrow parsing\");\r\n                    return false;\r\n                }\r\n                var channel = this.channels[chNr-1];\r\n                channel.cc_MIDROW(b);\r\n                logger.log(\"DEBUG\", \"MIDROW (\" + numArrayToHexArray([a, b]) + \")\");\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Parse Preable Access Codes (Table 53).\r\n         * @returns {Boolean} Tells if PAC found\r\n         */\r\n        parsePAC : function(a, b) {\r\n\r\n           var chNr = null;\r\n           var row = null;\r\n            \r\n            var case1 = ((0x11 <= a  && a <= 0x17) || (0x19 <= a && a <= 0x1F)) && (0x40 <= b && b <= 0x7F);\r\n            var case2 = (a === 0x10 || a === 0x18) && (0x40 <= b && b <= 0x5F);\r\n            if (! (case1 || case2)) {\r\n                return false;\r\n            }\r\n\r\n            if (a === this.lastCmdA && b === this.lastCmdB) {\r\n                this.lastCmdA = null;\r\n                this.lastCmdB = null;\r\n                return true; // Repeated commands are dropped (once)\r\n            }\r\n\r\n            chNr = (a <= 0x17) ? 1 : 2;\r\n\r\n            if (0x40 <= b && b <= 0x5F) {\r\n                row = (chNr === 1) ? rowsLowCh1[a] : rowsLowCh2[a];\r\n            } else { // 0x60 <= b <= 0x7F\r\n                row = (chNr === 1) ? rowsHighCh1[a] : rowsHighCh2[a];\r\n            }\r\n            var pacData = this.interpretPAC(row, b);\r\n            var channel = this.channels[chNr-1];\r\n            channel.setPAC(pacData);\r\n            this.lastCmdA = a;\r\n            this.lastCmdB = b;\r\n            this.currChNr = chNr;\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Interpret the second byte of the pac, and return the information.\r\n         * @returns {Object} pacData with style parameters.\r\n         */\r\n        interpretPAC : function (row, byte) {\r\n            var pacIndex = byte;\r\n            var pacData = {color : null, italics : false, indent : null, underline : false, row : row};\r\n            \r\n            if (byte > 0x5F) {\r\n                pacIndex = byte - 0x60;\r\n            } else {\r\n                pacIndex = byte - 0x40;\r\n            }\r\n            pacData.underline = (pacIndex & 1) === 1;\r\n            if (pacIndex <= 0xd) {\r\n                pacData.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(pacIndex/2)];\r\n            } else if (pacIndex <= 0xf) {\r\n                pacData.italics = true;\r\n                pacData.color = 'white';\r\n            } else {\r\n                pacData.indent = (Math.floor((pacIndex-0x10)/2))*4;\r\n            }\r\n            return pacData; // Note that row has zero offset. The spec uses 1.\r\n        },\r\n\r\n        /**\r\n         * Parse characters.\r\n         * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\r\n         */\r\n        parseChars : function(a, b) {\r\n\r\n           var  channelNr = null,\r\n                charCodes = null,\r\n                charCode1 = null,\r\n                charCode2 = null;\r\n\r\n            if (a >= 0x19) {\r\n                channelNr = 2;\r\n                charCode1 = a - 8;\r\n            } else {\r\n                channelNr = 1;\r\n                charCode1 = a;\r\n            }\r\n            if (0x11 <= charCode1 && charCode1 <= 0x13) {\r\n                // Special character\r\n                var oneCode = b;\r\n                if (charCode1 === 0x11) {\r\n                    oneCode = b + 0x50;\r\n                } else if (charCode1 === 0x12) {\r\n                    oneCode = b + 0x70;\r\n                } else {\r\n                    oneCode = b + 0x90;\r\n                }\r\n                logger.log(\"INFO\", \"Special char '\" + getCharForByte(oneCode) + \"' in channel \" + channelNr);\r\n                charCodes = [oneCode];\r\n            } else if (0x20 <= a && a <= 0x7f) {\r\n                charCodes = (b === 0) ? [a] : [a, b];\r\n            }\r\n            if (charCodes) {\r\n                var hexCodes = numArrayToHexArray(charCodes);\r\n                logger.log(\"DEBUG\", \"Char codes =  \" + hexCodes.join(\",\"));\r\n                this.lastCmdA = null;\r\n                this.lastCmdB = null;\r\n            }\r\n            return charCodes;\r\n        },\r\n        \r\n        /**\r\n        * Parse extended background attributes as well as new foreground color black.\r\n        * @returns{Boolean} Tells if background attributes are found\r\n        */\r\n        parseBackgroundAttributes : function(a, b) {\r\n           var  bkgData,\r\n                index,\r\n                chNr,\r\n                channel;\r\n\r\n            var case1 = (a === 0x10 || a === 0x18) && (0x20 <= b && b <= 0x2f);\r\n            var case2 = (a === 0x17 || a === 0x1f) && (0x2d <=b && b <= 0x2f);\r\n            if (!(case1 || case2)) {\r\n                return false;\r\n            }\r\n            bkgData = {};\r\n            if (a  === 0x10 || a === 0x18) {\r\n                index = Math.floor((b-0x20)/2);\r\n                bkgData.background = backgroundColors[index];\r\n                if (b % 2 === 1) {\r\n                    bkgData.background = bkgData.background + \"_semi\";\r\n                }\r\n            } else if (b === 0x2d) {\r\n                bkgData.background = \"transparent\";\r\n            } else {\r\n                bkgData.foreground = \"black\";\r\n                if (b === 0x2f) {\r\n                    bkgData.underline = true;\r\n                }\r\n            }\r\n            chNr = (a < 0x18) ? 1 : 2;\r\n            channel = this.channels[chNr-1];\r\n            channel.setBkgData(bkgData);\r\n            this.lastCmdA = null;\r\n            this.lastCmdB = null;\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reset state of parser and its channels.\r\n         */\r\n        reset : function() {\r\n            for (var i=0 ; i < this.channels.length ; i++) {\r\n                if (this.channels[i]) {\r\n                    this.channels[i].reset();\r\n                }\r\n            }\r\n            this.lastCmdA = null;\r\n            this.lastCmdB = null;\r\n        },\r\n\r\n        /**\r\n         * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\r\n         */\r\n        cueSplitAtTime : function(t) {\r\n            for (var i=0 ; i < this.channels.length ; i++) {\r\n                if (this.channels[i]) {\r\n                    this.channels[i].cueSplitAtTime(t);\r\n                }\r\n            }\r\n        },\r\n    };\r\n\r\n    /**\r\n     * Find ranges corresponding to SEA CEA-608 NALUS in sizeprepended NALU array.\r\n     * @param {raw} dataView of binary data\r\n     * @param {startPos} start position in raw\r\n     * @param {size} total size of data in raw to consider\r\n     * @returns \r\n     */\r\n    var findCea608Nalus = function(raw, startPos, size) {\r\n        var nalSize = 0,\r\n            cursor = startPos,\r\n            nalType = 0,\r\n            cea608NaluRanges = [],\r\n            // Check SEI data according to ANSI-SCTE 128\r\n            isCEA608SEI = function (payloadType, payloadSize, raw, pos) {\r\n                if (payloadType !== 4 || payloadSize < 8) {\r\n                    return null;\r\n                }\r\n                var countryCode = raw.getUint8(pos);\r\n                var providerCode = raw.getUint16(pos + 1);\r\n                var userIdentifier = raw.getUint32(pos + 3);\r\n                var userDataTypeCode = raw.getUint8(pos + 7);\r\n                return countryCode == 0xB5 && providerCode == 0x31 && userIdentifier == 0x47413934 && userDataTypeCode == 0x3;\r\n            };\r\n        while (cursor < startPos + size) {\r\n            nalSize = raw.getUint32(cursor);\r\n            nalType = raw.getUint8(cursor + 4) & 0x1F;\r\n            //console.log(time + \"  NAL \" + nalType);\r\n            if (nalType === 6) {\r\n                // SEI NAL Unit. The NAL header is the first byte\r\n                //console.log(\"SEI NALU of size \" + nalSize + \" at time \" + time);\r\n                var pos = cursor + 5;\r\n                var payloadType = -1;\r\n                while (pos < cursor + 4 + nalSize - 1) { // The last byte should be rbsp_trailing_bits\r\n                    payloadType = 0;\r\n                    var b = 0xFF;\r\n                    while (b === 0xFF) {\r\n                        b = raw.getUint8(pos);\r\n                        payloadType += b;\r\n                        pos++;\r\n                    }\r\n                    var payloadSize = 0;\r\n                    b = 0xFF;\r\n                    while (b === 0xFF) {\r\n                        b = raw.getUint8(pos);\r\n                        payloadSize += b;\r\n                        pos++;\r\n                    }\r\n                    if (isCEA608SEI(payloadType, payloadSize, raw, pos)) {\r\n                        //console.log(\"CEA608 SEI \" + time + \" \" + payloadSize);\r\n                        cea608NaluRanges.push([pos, payloadSize]);\r\n                    }\r\n                    pos += payloadSize;\r\n                }\r\n            }\r\n            cursor += nalSize + 4;\r\n        }\r\n        return cea608NaluRanges;\r\n    };\r\n    \r\n    var extractCea608DataFromRange = function(raw, cea608Range) {\r\n        var pos = cea608Range[0];\r\n        var fieldData = [[], []];\r\n\r\n        pos += 8; // Skip the identifier up to userDataTypeCode\r\n        var ccCount = raw.getUint8(pos) & 0x1f;\r\n        pos += 2; // Advance 1 and skip reserved byte\r\n          \r\n        for (var i = 0; i < ccCount; i++) {\r\n            var byte = raw.getUint8(pos);\r\n            var ccValid = byte & 0x4;\r\n            var ccType = byte & 0x3;\r\n            pos++;\r\n            var ccData1 = raw.getUint8(pos); // Keep parity bit\r\n            pos++;\r\n            var ccData2 = raw.getUint8(pos); // Keep parity bit\r\n            pos++;\r\n            if (ccValid && ((ccData1 & 0x7f) + (ccData2 & 0x7f) !== 0)) { //Check validity and non-empty data\r\n                if (ccType === 0) {\r\n                    fieldData[0].push(ccData1);\r\n                    fieldData[0].push(ccData2);\r\n                } else if (ccType === 1) {\r\n                    fieldData[1].push(ccData1);\r\n                    fieldData[1].push(ccData2);\r\n                }\r\n            }\r\n        }\r\n        return fieldData;\r\n    };\r\n\r\n    exports.logger = logger;\r\n    exports.PenState = PenState;\r\n    exports.CaptionScreen = CaptionScreen;  \r\n    exports.Cea608Parser = Cea608Parser;\r\n    exports.findCea608Nalus = findCea608Nalus;\r\n    exports.extractCea608DataFromRange = extractCea608DataFromRange;\r\n\r\n}(typeof exports === 'undefined' ? this.cea608parser = {} : exports));\r\n","/*\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * author Digital Primates\r\n * copyright dash-if 2012\r\n */\r\n\r\n/*\r\n * var parent,\r\n *     child,\r\n *     properties = [\r\n                    {\r\n                        name: 'profiles',\r\n                        merge: false\r\n                    }\r\n                ];\r\n *\r\n * parent = {};\r\n * parent.name = \"ParentNode\";\r\n * parent.isRoor = false;\r\n * parent.isArray = false;\r\n * parent.parent = null;\r\n * parent.children = [];\r\n * parent.properties = properties;\r\n *\r\n * child = {};\r\n * child.name = \"ChildNode\";\r\n * child.isRoor = false;\r\n * child.isArray = true;\r\n * child.parent = parent;\r\n * child.children = null;\r\n * child.properties = properties;\r\n * parent.children.push(child);\r\n *\r\n */\r\n\r\nfunction ObjectIron(map) {\r\n\r\n    var lookup,\r\n        len,\r\n        i;\r\n\r\n    // create a list of top level items to search for\r\n    lookup = [];\r\n    for (i = 0, len = map.length; i < len; i += 1) {\r\n        if (map[i].isRoot) {\r\n            lookup.push(\"root\");\r\n        } else {\r\n            lookup.push(map[i].name);\r\n        }\r\n    }\r\n\r\n    var mergeValues = function (parentItem, childItem) {\r\n            var name,\r\n                parentValue,\r\n                childValue;\r\n\r\n            if (parentItem === null || childItem === null) {\r\n                return;\r\n            }\r\n\r\n            for (name in parentItem) {\r\n                if (parentItem.hasOwnProperty(name)) {\r\n                    if (!childItem.hasOwnProperty(name)) {\r\n                        childItem[name] = parentItem[name];\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        mapProperties = function (properties, parent, child) {\r\n            var i,\r\n                len,\r\n                property,\r\n                parentValue,\r\n                childValue;\r\n\r\n            if (properties === null || properties.length === 0) {\r\n                return;\r\n            }\r\n\r\n            for (i = 0, len = properties.length; i < len; i += 1) {\r\n                property = properties[i];\r\n\r\n                if (parent.hasOwnProperty(property.name)) {\r\n                    if (child.hasOwnProperty(property.name)) {\r\n                        // check to see if we should merge\r\n                        if (property.merge) {\r\n                           parentValue = parent[property.name];\r\n                           childValue = child[property.name];\r\n\r\n                            // complex objects; merge properties\r\n                            if (typeof parentValue === 'object' && typeof childValue === 'object') {\r\n                                mergeValues(parentValue, childValue);\r\n                            }\r\n                            // simple objects; merge them together\r\n                            else {\r\n                                if (property.mergeFunction != null) {\r\n                                    child[property.name] = property.mergeFunction(parentValue, childValue);\r\n                                } else {\r\n                                    child[property.name] = parentValue + childValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // just add the property\r\n                        child[property.name] = parent[property.name];\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        mapItem = function (obj, node) {\r\n            var item = obj,\r\n                i,\r\n                len,\r\n                v,\r\n                len2,\r\n                array,\r\n                childItem,\r\n                childNode,\r\n                property;\r\n\r\n            if (item.children === null || item.children.length === 0) {\r\n                return;\r\n            }\r\n\r\n            for (i = 0, len = item.children.length; i < len; i += 1) {\r\n                childItem = item.children[i];\r\n\r\n                if (node.hasOwnProperty(childItem.name)) {\r\n                    if (childItem.isArray) {\r\n                        array = node[childItem.name + \"_asArray\"];\r\n                        for (v = 0, len2 = array.length; v < len2; v += 1) {\r\n                            childNode = array[v];\r\n                            mapProperties(item.properties, node, childNode);\r\n                            mapItem(childItem, childNode);\r\n                        }\r\n                    } else {\r\n                        childNode = node[childItem.name];\r\n                        mapProperties(item.properties, node, childNode);\r\n                        mapItem(childItem, childNode);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        performMapping = function (source) {\r\n            var i,\r\n                len,\r\n                pi,\r\n                pp,\r\n                item,\r\n                node,\r\n                array;\r\n\r\n            if (source === null) {\r\n                return source;\r\n            }\r\n\r\n            if (typeof source !== 'object') {\r\n                return source;\r\n            }\r\n\r\n            // first look to see if anything cares about the root node\r\n            for (i = 0, len = lookup.length; i < len; i += 1) {\r\n                if (lookup[i] === \"root\") {\r\n                    item = map[i];\r\n                    node = source;\r\n                    mapItem(item, node);\r\n                }\r\n            }\r\n\r\n            // iterate over the objects and look for any of the items we care about\r\n            for (pp in source) {\r\n                if (source.hasOwnProperty(pp) && pp != \"__children\") {\r\n                    pi = lookup.indexOf(pp);\r\n                    if (pi !== -1) {\r\n                        item = map[pi];\r\n\r\n                        if (item.isArray) {\r\n                            array = source[pp + \"_asArray\"];\r\n                            for (i = 0, len = array.length; i < len; i += 1) {\r\n                                node = array[i];\r\n                                mapItem(item, node);\r\n                            }\r\n                        } else {\r\n                            node = source[pp];\r\n                            mapItem(item, node);\r\n                        }\r\n                    }\r\n                    // now check this to see if he has any of the properties we care about\r\n                    performMapping(source[pp]);\r\n                }\r\n            }\r\n\r\n            return source;\r\n        };\r\n\r\n    return {\r\n        run: performMapping\r\n    };\r\n}\r\n\r\nexport default ObjectIron;","/*\r\n Copyright 2011 Abdulla Abdurakhmanov\r\n Original sources are available at https://code.google.com/p/x2js/\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/*\r\n Modified to keep track of children nodes in order in attribute __children.\r\n*/\r\n\r\nfunction X2JS(matchers, attrPrefix, ignoreRoot) {\r\n    if (attrPrefix === null || attrPrefix === undefined) {\r\n        attrPrefix = \"_\";\r\n    }\r\n    \r\n    if (ignoreRoot === null || ignoreRoot === undefined) {\r\n        ignoreRoot = false;\r\n    }\r\n    \r\n\tvar VERSION = \"1.0.11\";\r\n\tvar escapeMode = false;\r\n\r\n\tvar DOMNodeTypes = {\r\n\t\tELEMENT_NODE \t   : 1,\r\n\t\tTEXT_NODE    \t   : 3,\r\n\t\tCDATA_SECTION_NODE : 4,\r\n\t\tCOMMENT_NODE       : 8,\r\n\t\tDOCUMENT_NODE \t   : 9\r\n\t};\r\n\t\r\n\tfunction getNodeLocalName( node ) {\r\n\t\tvar nodeLocalName = node.localName;\t\t\t\r\n\t\tif(nodeLocalName == null) // Yeah, this is IE!! \r\n\t\t\tnodeLocalName = node.baseName;\r\n\t\tif(nodeLocalName == null || nodeLocalName==\"\") // ==\"\" is IE too\r\n\t\t\tnodeLocalName = node.nodeName;\r\n\t\treturn nodeLocalName;\r\n\t}\r\n\t\r\n\tfunction getNodePrefix(node) {\r\n\t\treturn node.prefix;\r\n\t}\r\n\t\t\r\n\tfunction escapeXmlChars(str) {\r\n\t\tif(typeof(str) == \"string\")\r\n\t\t\treturn str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\\//g, '&#x2F;');\r\n\t\telse\r\n\t\t\treturn str;\r\n\t}\r\n\r\n\tfunction unescapeXmlChars(str) {\r\n\t\treturn str.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\").replace(/&#x2F;/g, '\\/')\r\n\t}\t\r\n\r\n\tfunction parseDOMChildren( node ) {\r\n\t\tif(node.nodeType == DOMNodeTypes.DOCUMENT_NODE) {\r\n\t\t\tvar result,\r\n\t\t\t    child = node.firstChild,\r\n\t\t\t    i,\r\n\t\t\t    len; \r\n\t\t\t\r\n\t\t\t// get the first node that isn't a comment\r\n\t\t\tfor(i = 0, len = node.childNodes.length; i < len; i += 1) {\r\n\t\t\t   if (node.childNodes[i].nodeType !== DOMNodeTypes.COMMENT_NODE) {\r\n\t\t\t       child = node.childNodes[i];\r\n\t\t\t       break;\r\n\t\t\t   } \r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( ignoreRoot ) {\r\n\t\t\t    result = parseDOMChildren(child);\r\n\t\t\t} else {\r\n\t\t\t    result = {};\r\n\t\t\t    var childName = getNodeLocalName(child);\r\n                result[childName] = parseDOMChildren(child);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\telse\r\n\t\tif(node.nodeType == DOMNodeTypes.ELEMENT_NODE) {\r\n\t\t\tvar result = new Object;\r\n\t\t\tresult.__cnt=0;\r\n\r\n            var children = [];\r\n\t\t\t\r\n\t\t\tvar nodeChildren = node.childNodes;\r\n\t\t\t\r\n\t\t\t// Children nodes\r\n\t\t\tfor(var cidx=0; cidx <nodeChildren.length; cidx++) {\r\n\t\t\t\tvar child = nodeChildren.item(cidx); // nodeChildren[cidx];\r\n\t\t\t\tvar childName = getNodeLocalName(child);\r\n\t\t\t\t\r\n\t\t\t\tresult.__cnt++;\r\n\t\t\t\tif(result[childName] == null) {\r\n                    var c = parseDOMChildren(child);\r\n                    if (childName != \"#text\" || /[^\\s]/.test(c)) {\r\n                        var o = {};\r\n                        o[childName] = c;\r\n                        children.push(o);\r\n                    }\r\n\t\t\t\t\tresult[childName] = c;\r\n\t\t\t\t\tresult[childName+\"_asArray\"] = new Array(1);\r\n\t\t\t\t\tresult[childName+\"_asArray\"][0] = result[childName];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(result[childName] != null) {\r\n\t\t\t\t\t\tif( !(result[childName] instanceof Array)) {\r\n\t\t\t\t\t\t\tvar tmpObj = result[childName];\r\n\t\t\t\t\t\t\tresult[childName] = new Array();\r\n\t\t\t\t\t\t\tresult[childName][0] = tmpObj;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tresult[childName+\"_asArray\"] = result[childName];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar aridx = 0;\r\n\t\t\t\t\twhile(result[childName][aridx]!=null) aridx++;\r\n\r\n                    var c = parseDOMChildren(child);\r\n\t\t\t\t\tif (childName != \"#text\" || /[^\\s]/.test(c)) { // Don't add white-space text nodes\r\n                        var o = {};\r\n                        o[childName] = c;\r\n                        children.push( o );\r\n                    }\r\n\t\t\t\t\t(result[childName])[aridx] = c;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\r\n            result.__children = children;\r\n\t\t\t\r\n\t\t\t// Attributes\r\n\t\t\tfor(var aidx=0; aidx <node.attributes.length; aidx++) {\r\n\t\t\t\tvar attr = node.attributes.item(aidx); // [aidx];\r\n\t\t\t\tresult.__cnt++;\r\n\t\t\t\t\r\n\t\t\t\tvar value2 = attr.value;\r\n\t\t\t\tfor(var m=0, ml=matchers.length; m < ml; m++) {\r\n\t\t\t\t    var matchobj = matchers[m];\r\n\t\t\t\t    if (matchobj.test.call(this, attr))\r\n\t\t\t\t        value2 = matchobj.converter.call(this, attr.value);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresult[attrPrefix+attr.name]=value2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Node namespace prefix\r\n\t\t\tvar nodePrefix = getNodePrefix(node);\r\n\t\t\tif(nodePrefix!=null && nodePrefix!=\"\") {\r\n\t\t\t\tresult.__cnt++;\r\n\t\t\t\tresult.__prefix=nodePrefix;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( result.__cnt == 1 && result[\"#text\"]!=null  ) {\r\n\t\t\t\tresult = result[\"#text\"];\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif(result[\"#text\"]!=null) {\r\n\t\t\t\tresult.__text = result[\"#text\"];\r\n\t\t\t\tif(escapeMode)\r\n\t\t\t\t\tresult.__text = unescapeXmlChars(result.__text)\r\n\t\t\t\tdelete result[\"#text\"];\r\n\t\t\t\tdelete result[\"#text_asArray\"];\r\n\t\t\t}\r\n\t\t\tif(result[\"#cdata-section\"]!=null) {\r\n\t\t\t\tresult.__cdata = result[\"#cdata-section\"];\r\n\t\t\t\tdelete result[\"#cdata-section\"];\r\n\t\t\t\tdelete result[\"#cdata-section_asArray\"];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(result.__text!=null || result.__cdata!=null) {\r\n\t\t\t\tresult.toString = function() {\r\n\t\t\t\t\treturn (this.__text!=null? this.__text:'')+( this.__cdata!=null ? this.__cdata:'');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\telse\r\n\t\tif(node.nodeType == DOMNodeTypes.TEXT_NODE || node.nodeType == DOMNodeTypes.CDATA_SECTION_NODE) {\r\n\t\t\treturn node.nodeValue;\r\n\t\t}\t\r\n\t\telse\r\n\t\tif(node.nodeType == DOMNodeTypes.COMMENT_NODE) {\r\n\t\t    return null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction startTag(jsonObj, element, attrList, closed) {\r\n\t\tvar resultStr = \"<\"+ ( (jsonObj!=null && jsonObj.__prefix!=null)? (jsonObj.__prefix+\":\"):\"\") + element;\r\n\t\tif(attrList!=null) {\r\n\t\t\tfor(var aidx = 0; aidx < attrList.length; aidx++) {\r\n\t\t\t\tvar attrName = attrList[aidx];\r\n\t\t\t\tvar attrVal = jsonObj[attrName];\r\n\t\t\t\tresultStr+=\" \"+attrName.substr(1)+\"='\"+attrVal+\"'\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!closed)\r\n\t\t\tresultStr+=\">\";\r\n\t\telse\r\n\t\t\tresultStr+=\"/>\";\r\n\t\treturn resultStr;\r\n\t}\r\n\t\r\n\tfunction endTag(jsonObj,elementName) {\r\n\t\treturn \"</\"+ (jsonObj.__prefix!=null? (jsonObj.__prefix+\":\"):\"\")+elementName+\">\";\r\n\t}\r\n\t\r\n\tfunction endsWith(str, suffix) {\r\n\t    return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n\t}\r\n\t\r\n\tfunction jsonXmlSpecialElem ( jsonObj, jsonObjField ) {\r\n\t\tif(endsWith(jsonObjField.toString(),(\"_asArray\")) \r\n\t\t\t\t|| jsonObjField.toString().indexOf(\"_\")==0 \r\n\t\t\t\t|| (jsonObj[jsonObjField] instanceof Function) )\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\tfunction jsonXmlElemCount ( jsonObj ) {\r\n\t\tvar elementsCnt = 0;\r\n\t\tif(jsonObj instanceof Object ) {\r\n\t\t\tfor( var it in jsonObj  ) {\r\n\t\t\t\tif(jsonXmlSpecialElem ( jsonObj, it) )\r\n\t\t\t\t\tcontinue;\t\t\t\r\n\t\t\t\telementsCnt++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elementsCnt;\r\n\t}\r\n\t\r\n\tfunction parseJSONAttributes ( jsonObj ) {\r\n\t\tvar attrList = [];\r\n\t\tif(jsonObj instanceof Object ) {\r\n\t\t\tfor( var ait in jsonObj  ) {\r\n\t\t\t\tif(ait.toString().indexOf(\"__\")== -1 && ait.toString().indexOf(\"_\")==0) {\r\n\t\t\t\t\tattrList.push(ait);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn attrList;\r\n\t}\r\n\t\r\n\tfunction parseJSONTextAttrs ( jsonTxtObj ) {\r\n\t\tvar result =\"\";\r\n\t\t\r\n\t\tif(jsonTxtObj.__cdata!=null) {\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tresult+=\"<![CDATA[\"+jsonTxtObj.__cdata+\"]]>\";\t\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif(jsonTxtObj.__text!=null) {\t\t\t\r\n\t\t\tif(escapeMode)\r\n\t\t\t\tresult+=escapeXmlChars(jsonTxtObj.__text);\r\n\t\t\telse\r\n\t\t\t\tresult+=jsonTxtObj.__text;\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\t\r\n\tfunction parseJSONTextObject ( jsonTxtObj ) {\r\n\t\tvar result =\"\";\r\n\r\n\t\tif( jsonTxtObj instanceof Object ) {\r\n\t\t\tresult+=parseJSONTextAttrs ( jsonTxtObj )\r\n\t\t}\r\n\t\telse\r\n\t\t\tif(jsonTxtObj!=null) {\r\n\t\t\t\tif(escapeMode)\r\n\t\t\t\t\tresult+=escapeXmlChars(jsonTxtObj);\r\n\t\t\t\telse\r\n\t\t\t\t\tresult+=jsonTxtObj;\r\n\t\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tfunction parseJSONArray ( jsonArrRoot, jsonArrObj, attrList ) {\r\n\t\tvar result = \"\"; \r\n\t\tif(jsonArrRoot.length == 0) {\r\n\t\t\tresult+=startTag(jsonArrRoot, jsonArrObj, attrList, true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor(var arIdx = 0; arIdx < jsonArrRoot.length; arIdx++) {\r\n\t\t\t\tresult+=startTag(jsonArrRoot[arIdx], jsonArrObj, parseJSONAttributes(jsonArrRoot[arIdx]), false);\r\n\t\t\t\tresult+=parseJSONObject(jsonArrRoot[arIdx]);\r\n\t\t\t\tresult+=endTag(jsonArrRoot[arIdx],jsonArrObj);\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tfunction parseJSONObject ( jsonObj ) {\r\n\t\tvar result = \"\";\t\r\n\r\n\t\tvar elementsCnt = jsonXmlElemCount ( jsonObj );\r\n\t\t\r\n\t\tif(elementsCnt > 0) {\r\n\t\t\tfor( var it in jsonObj ) {\r\n\t\t\t\t\r\n\t\t\t\tif(jsonXmlSpecialElem ( jsonObj, it) )\r\n\t\t\t\t\tcontinue;\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvar subObj = jsonObj[it];\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvar attrList = parseJSONAttributes( subObj )\r\n\t\t\t\t\r\n\t\t\t\tif(subObj == null || subObj == undefined) {\r\n\t\t\t\t\tresult+=startTag(subObj, it, attrList, true)\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\tif(subObj instanceof Object) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(subObj instanceof Array) {\t\t\t\t\t\r\n\t\t\t\t\t\tresult+=parseJSONArray( subObj, it, attrList )\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvar subObjElementsCnt = jsonXmlElemCount ( subObj );\r\n\t\t\t\t\t\tif(subObjElementsCnt > 0 || subObj.__text!=null || subObj.__cdata!=null) {\r\n\t\t\t\t\t\t\tresult+=startTag(subObj, it, attrList, false);\r\n\t\t\t\t\t\t\tresult+=parseJSONObject(subObj);\r\n\t\t\t\t\t\t\tresult+=endTag(subObj,it);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tresult+=startTag(subObj, it, attrList, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tresult+=startTag(subObj, it, attrList, false);\r\n\t\t\t\t\tresult+=parseJSONTextObject(subObj);\r\n\t\t\t\t\tresult+=endTag(subObj,it);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult+=parseJSONTextObject(jsonObj);\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tthis.parseXmlString = function(xmlDocStr) {\r\n\t\tvar xmlDoc,\r\n\t\t\tparser,\r\n\t\t\tns;\r\n\r\n\t\tif (window.DOMParser) {\r\n\t\t\tparser = new window.DOMParser();\r\n\r\n\t\t\ttry {\r\n\t\t\t\tns = parser.parseFromString('<', 'text/xml').getElementsByTagName(\"parsererror\")[0].namespaceURI;\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// IE11 will definitely throw SyntaxError here\r\n\t\t\t\t// ns will be undefined\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txmlDoc = parser.parseFromString( xmlDocStr, \"text/xml\" );\r\n\r\n\t\t\t\tif (ns) {\r\n\t\t\t\t\tif(xmlDoc.getElementsByTagNameNS(ns, 'parsererror').length) {\r\n\t\t\t\t\t\txmlDoc = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// IE11 may throw SyntaxError here if xmlDocStr is\r\n\t\t\t\t// not well formed. xmlDoc will be undefined\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// IE :(\r\n\t\t\tif(xmlDocStr.indexOf(\"<?\")==0) {\r\n\t\t\t\txmlDocStr = xmlDocStr.substr( xmlDocStr.indexOf(\"?>\") + 2 );\r\n\t\t\t}\r\n\t\t\txmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");\r\n\t\t\txmlDoc.async=\"false\";\r\n\t\t\txmlDoc.loadXML(xmlDocStr);\r\n\t\t}\r\n\t\treturn xmlDoc;\r\n\t}\r\n\r\n\tthis.xml2json = function (xmlDoc) {\r\n\t\treturn parseDOMChildren ( xmlDoc );\r\n\t}\r\n\t\r\n\tthis.xml_str2json = function (xmlDocStr) {\r\n\t\tvar xmlDoc = this.parseXmlString(xmlDocStr);\t\r\n\t\treturn xmlDoc ? this.xml2json(xmlDoc) : undefined;\r\n\t}\r\n\r\n\tthis.json2xml_str = function (jsonObj) {\r\n\t\treturn parseJSONObject ( jsonObj );\r\n\t}\r\n\r\n\tthis.json2xml = function (jsonObj) {\r\n\t\tvar xmlDocStr = this.json2xml_str (jsonObj);\r\n\t\treturn this.parseXmlString(xmlDocStr);\r\n\t}\r\n\t\r\n\tthis.getVersion = function () {\r\n\t\treturn VERSION;\r\n\t}\t\t\r\n\t\r\n\tthis.escapeMode = function(enabled) {\r\n\t\tescapeMode = enabled;\r\n\t}\r\n}\r\nexport default X2JS;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MediaPlayer from './src/streaming/MediaPlayer.js';\r\nimport Protection from './src/streaming/protection/Protection.js';\r\nimport MetricsReporting from './src/streaming/metrics/MetricsReporting.js';\r\nimport MediaPlayerFactory from './src/streaming/MediaPlayerFactory.js';\r\n\r\n\r\n// Shove both of these into the global scope\r\nvar context = window || global;\r\n\r\nvar dashjs = context.dashjs;\r\nif (!dashjs) {\r\n    dashjs = context.dashjs = {};\r\n}\r\n\r\ndashjs.MediaPlayer = MediaPlayer;\r\ndashjs.Protection = Protection;\r\ndashjs.MetricsReporting = MetricsReporting;\r\ndashjs.MediaPlayerFactory = MediaPlayerFactory;\r\n\r\nexport default dashjs;\r\nexport { MediaPlayer, Protection, MetricsReporting, MediaPlayerFactory };","/*! codem-isoboxer v0.2.2 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */\nvar ISOBoxer = {};\n\nISOBoxer.parseBuffer = function(arrayBuffer) {\n  return new ISOFile(arrayBuffer).parse();\n};\n\nISOBoxer.Utils = {};\nISOBoxer.Utils.dataViewToString = function(dataView, encoding) {\n  var impliedEncoding = encoding || 'utf-8'\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder(impliedEncoding).decode(dataView);\n  }\n  var a = [];\n  var i = 0;\n  \n  if (impliedEncoding === 'utf-8') {\n    /* The following algorithm is essentially a rewrite of the UTF8.decode at \n    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/\n    */\n  \n    while (i < dataView.byteLength) {\n      var c = dataView.getUint8(i++);\n      if (c < 0x80) {\n        // 1-byte character (7 bits)\n      } else if (c < 0xe0) {\n        // 2-byte character (11 bits)\n        c = (c & 0x1f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else if (c < 0xf0) {\n        // 3-byte character (16 bits)\n        c = (c & 0xf) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else {\n        // 4-byte character (21 bits)\n        c = (c & 0x7) << 18;\n        c |= (dataView.getUint8(i++) & 0x3f) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      }\n      a.push(String.fromCharCode(c));\n    }\n  } else { // Just map byte-by-byte (probably wrong)\n    while (i < dataView.byteLength) {\n      a.push(String.fromCharCode(dataView.getUint8(i++)));\n    }\n  }\n  return a.join('');  \n};\n\nif (typeof exports !== 'undefined') {\n  exports.parseBuffer = ISOBoxer.parseBuffer;\n  exports.Utils       = ISOBoxer.Utils;\n};\nISOBoxer.Cursor = function(initialOffset) {\n  this.offset = (typeof initialOffset == 'undefined' ? 0 : initialOffset);\n};\nvar ISOFile = function(arrayBuffer) {\n  this._raw = new DataView(arrayBuffer);\n  this._cursor = new ISOBoxer.Cursor();\n  this.boxes = [];\n}\n\nISOFile.prototype.fetch = function(type) {\n  var result = this.fetchAll(type, true);\n  return (result.length ? result[0] : null);\n}\n\nISOFile.prototype.fetchAll = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n}\n\nISOFile.prototype.parse = function() {\n  this._cursor.offset = 0;\n  this.boxes = [];\n  while (this._cursor.offset < this._raw.byteLength) {\n    var box = ISOBox.parse(this);\n\n    // Box could not be parsed\n    if (typeof box.type === 'undefined') break;\n\n    this.boxes.push(box);\n  }\n  return this;\n}\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n};\nvar ISOBox = function() {\n  this._cursor = new ISOBoxer.Cursor();\n}\n\nISOBox.parse = function(parent) {\n  var newBox = new ISOBox();\n  newBox._offset = parent._cursor.offset;\n  newBox._root = (parent._root ? parent._root : parent);\n  newBox._raw = parent._raw;\n  newBox._parent = parent;\n  newBox._parseBox();\n  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;\n  return newBox;\n}\n\nISOBox.prototype._readInt = function(size) {\n  var result = null;\n  switch(size) {\n  case 8:\n    result = this._raw.getInt8(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 16:\n    result = this._raw.getInt16(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 32:\n    result = this._raw.getInt32(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getInt32(this._cursor.offset - this._raw.byteOffset);\n    var s2 = this._raw.getInt32(this._cursor.offset - this._raw.byteOffset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;        \n}\n\nISOBox.prototype._readUint = function(size) {\n  var result = null;\n  switch(size) {\n  case 8:\n    result = this._raw.getUint8(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 16:\n    result = this._raw.getUint16(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 24:\n    var s1 = this._raw.getUint16(this._cursor.offset - this._raw.byteOffset);\n    var s2 = this._raw.getUint8(this._cursor.offset - this._raw.byteOffset + 2);\n    result = (s1 << 8) + s2;\n    break;\n  case 32:\n    result = this._raw.getUint32(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getUint32(this._cursor.offset - this._raw.byteOffset);\n    var s2 = this._raw.getUint32(this._cursor.offset - this._raw.byteOffset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;        \n}\n\nISOBox.prototype._readString = function(length) {\n  var str = '';\n  for (var c = 0; c < length; c++) {\n    var char = this._readUint(8);\n    str += String.fromCharCode(char);\n  }\n  return str;    \n}\n\nISOBox.prototype._readTerminatedString = function() {\n  var str = '';\n  while (true) {\n    var char = this._readUint(8);\n    if (char == 0) break;\n    str += String.fromCharCode(char);\n  }\n  return str;\n}\n\nISOBox.prototype._readTemplate = function(size) {\n  var pre = this._readUint(size / 2);\n  var post = this._readUint(size / 2);\n  return pre + (post / Math.pow(2, size / 2));\n}\n\nISOBox.prototype._parseBox = function() {\n  this._cursor.offset = this._offset;\n  \n  // return immediately if there are not enough bytes to read the header\n  if (this._offset + 8 > this._raw.buffer.byteLength) {\n    this._root._incomplete = true;\n    return;\n  }\n  \n  this.size = this._readUint(32);\n  this.type = this._readString(4);\n\n  if (this.size == 1)      { this.largesize = this._readUint(64); }\n  if (this.type == 'uuid') { this.usertype = this._readString(16); }\n\n  switch(this.size) {\n  case 0:\n    this._raw = new DataView(this._raw.buffer, this._offset, (this._raw.byteLength - this._cursor.offset));\n    break;\n  case 1:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);      \n    }\n    break;\n  default:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.size);      \n    }\n  }\n\n  // additional parsing\n  if (!this._incomplete && this._boxParsers[this.type]) this._boxParsers[this.type].call(this);    \n}\n\nISOBox.prototype._parseFullBox = function() {\n  this.version = this._readUint(8);\n  this.flags = this._readUint(24);\n}\n\nISOBox.prototype._boxParsers = {};;\n// Simple container boxes, all from ISO/IEC 14496-12:2012 except vttc which is from 14496-30.\n[\n  'moov', 'trak', 'tref', 'mdia', 'minf', 'stbl', 'edts', 'dinf',\n  'mvex', 'moof', 'traf', 'mfra', 'udta', 'meco', 'strk', 'vttc'\n].forEach(function(boxType) {\n  ISOBox.prototype._boxParsers[boxType] = function() {\n    this.boxes = [];\n    while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n      this.boxes.push(ISOBox.parse(this));\n    }  \n  }  \n})\n;\n// ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box\nISOBox.prototype._boxParsers['elst'] = function() {\n  this._parseFullBox();\n  this.entry_count = this._readUint(32);\n  this.entries = [];\n  \n  for (var i=1; i <= this.entry_count; i++) {\n    var entry = {};\n    if (this.version == 1) {\n      entry.segment_duration  = this._readUint(64);\n      entry.media_time        = this._readInt(64);\n    } else {\n      entry.segment_duration  = this._readUint(32);\n      entry.media_time        = this._readInt(32);\n    }\n    entry.media_rate_integer  = this._readInt(16);\n    entry.media_rate_fraction = this._readInt(16);\n    this.entries.push(entry);\n  }\n};\n// ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box\nISOBox.prototype._boxParsers['emsg'] = function() {\n  this._parseFullBox();\n  this.scheme_id_uri           = this._readTerminatedString();\n  this.value                   = this._readTerminatedString();\n  this.timescale               = this._readUint(32);\n  this.presentation_time_delta = this._readUint(32);\n  this.event_duration          = this._readUint(32);\n  this.id                      = this._readUint(32);\n  this.message_data            = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n};\n// ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box\nISOBox.prototype._boxParsers['free'] = ISOBox.prototype._boxParsers['skip'] = function() {\n  this.data = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n};\n// ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box\nISOBox.prototype._boxParsers['ftyp'] = ISOBox.prototype._boxParsers['styp'] = function() {\n  this.major_brand = this._readString(4);\n  this.minor_versions = this._readUint(32);\n  this.compatible_brands = [];\n  \n  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n    this.compatible_brands.push(this._readString(4));\n  }\n};\n// ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box\nISOBox.prototype._boxParsers['hdlr'] = function() {\n  this._parseFullBox();\n  this.pre_defined = this._readUint(32);\n  this.handler_type = this._readString(4);\n  this.reserved = [this._readUint(32), this._readUint(32), this._readUint(32)]\n  this.name = this._readTerminatedString()\n};\n// ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box\nISOBox.prototype._boxParsers['mdat'] = function() {\n  this.data = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n};\n// ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box\nISOBox.prototype._boxParsers['mdhd'] = function() {\n  this._parseFullBox();\n  if (this.version == 1) {\n    this.creation_time = this._readUint(64);\n    this.modification_time = this._readUint(64);\n    this.timescale = this._readUint(32);\n    this.duration = this._readUint(64);\n  } else {\n    this.creation_time = this._readUint(32);\n    this.modification_time = this._readUint(32);\n    this.timescale = this._readUint(32);\n    this.duration = this._readUint(32);\n  }\n  var language = this._readUint(16);\n  this.pad = (language >> 15);\n  this.language = String.fromCharCode(\n    ((language >> 10) & 0x1F) + 0x60,\n    ((language >> 5) & 0x1F) + 0x60,\n    (language & 0x1F) + 0x60\n  );\n  this.pre_defined = this._readUint(16);\n};\n// ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box\nISOBox.prototype._boxParsers['mfhd'] = function() {\n  this._parseFullBox();\n  this.sequence_number = this._readUint(32);\n};\n// ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box\nISOBox.prototype._boxParsers['mvhd'] = function() {\n  this._parseFullBox();\n  \n  if (this.version == 1) {\n    this.creation_time     = this._readUint(64);\n    this.modification_time = this._readUint(64);\n    this.timescale         = this._readUint(32);\n    this.duration          = this._readUint(64);\n  } else {\n    this.creation_time     = this._readUint(32);\n    this.modification_time = this._readUint(32);\n    this.timescale         = this._readUint(32);\n    this.duration          = this._readUint(32);      \n  }\n  \n  this.rate      = this._readTemplate(32);\n  this.volume    = this._readTemplate(16);\n  this.reserved1 = this._readUint(16);\n  this.reserved2 = [ this._readUint(32), this._readUint(32) ];\n  this.matrix = [];\n  for (var i=0; i<9; i++) {\n    this.matrix.push(this._readTemplate(32));\n  }\n  this.pre_defined = [];\n  for (var i=0; i<6; i++) {\n    this.pre_defined.push(this._readUint(32));\n  }\n  this.next_track_ID = this._readUint(32);\n};\n// ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.\nISOBox.prototype._boxParsers['payl'] = function() {\n  var cue_text_raw = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n  this.cue_text = ISOBoxer.Utils.dataViewToString(cue_text_raw);\n}\n;\n// ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box\nISOBox.prototype._boxParsers['sidx'] = function() {\n  this._parseFullBox();\n  this.reference_ID = this._readUint(32);\n  this.timescale = this._readUint(32);\n  if (this.version == 0) {\n    this.earliest_presentation_time = this._readUint(32);\n    this.first_offset = this._readUint(32);\n  } else {\n    this.earliest_presentation_time = this._readUint(64);\n    this.first_offset = this._readUint(64);    \n  }\n  this.reserved = this._readUint(16);\n  this.reference_count = this._readUint(16);\n  this.references = [];\n  for (var i=0; i<this.reference_count; i++) {\n    var ref = {};\n    var reference = this._readUint(32);\n    ref.reference_type = (reference >> 31) & 0x1;\n    ref.referenced_size = reference & 0x7FFFFFFF;\n    ref.subsegment_duration = this._readUint(32);\n    var sap = this._readUint(32);\n    ref.starts_with_SAP = (sap >> 31) & 0x1;\n    ref.SAP_type = (sap >> 28) & 0x7;\n    ref.SAP_delta_time = sap & 0xFFFFFFF;\n    this.references.push(ref);\n  }\n};\n// ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box\nISOBox.prototype._boxParsers['ssix'] = function() {\n  this._parseFullBox();\n  this.subsegment_count = this._readUint(32);\n  this.subsegments = [];\n\n  for (var i=0; i<this.subsegment_count; i++) {\n    var subsegment = {};\n    subsegment.ranges_count = this._readUint(32);\n    subsegment.ranges = [];\n    \n    for (var j=0; j<subsegment.ranges_count; j++) {\n      var range = {};\n      range.level = this._readUint(8);\n      range.range_size = this._readUint(24);\n      subsegment.ranges.push(range);\n    }\n    this.subsegments.push(subsegment);\n  }\n};\n// ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time\nISOBox.prototype._boxParsers['tfdt'] = function() {\n  this._parseFullBox();\n  if (this.version == 1) {\n    this.baseMediaDecodeTime = this._readUint(64);\n  } else {\n    this.baseMediaDecodeTime = this._readUint(32);    \n  }\n};\n// ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box\nISOBox.prototype._boxParsers['tfhd'] = function() {\n  this._parseFullBox();\n  this.track_ID = this._readUint(32);\n  if (this.flags & 0x1) this.base_data_offset = this._readUint(64);\n  if (this.flags & 0x2) this.sample_description_offset = this._readUint(32);\n  if (this.flags & 0x8) this.default_sample_duration = this._readUint(32);\n  if (this.flags & 0x10) this.default_sample_size = this._readUint(32);\n  if (this.flags & 0x20) this.default_sample_flags = this._readUint(32);\n};\n// ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box\nISOBox.prototype._boxParsers['tkhd'] = function() {\n  this._parseFullBox();\n  \n  if (this.version == 1) {\n    this.creation_time     = this._readUint(64);\n    this.modification_time = this._readUint(64);\n    this.track_ID          = this._readUint(32);\n    this.reserved1         = this._readUint(32);\n    this.duration          = this._readUint(64);\n  } else {\n    this.creation_time     = this._readUint(32);\n    this.modification_time = this._readUint(32);\n    this.track_ID          = this._readUint(32);\n    this.reserved1         = this._readUint(32);\n    this.duration          = this._readUint(32);\n  }\n  \n  this.reserved2 = [\n    this._readUint(32),\n    this._readUint(32)\n  ];\n  this.layer = this._readUint(16);\n  this.alternate_group = this._readUint(16);\n  this.volume = this._readTemplate(16);\n  this.reserved3 = this._readUint(16);\n  this.matrix = [];\n  for (var i=0; i<9; i++) {\n    this.matrix.push(this._readTemplate(32));\n  }\n  this.width = this._readUint(32);\n  this.height = this._readUint(32);\n};\n// ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n// These defaults are not set explicitly here, but are left to resolve for the user.\nISOBox.prototype._boxParsers['trun'] = function() {\n  this._parseFullBox();\n  this.sample_count = this._readUint(32);\n  if (this.flags & 0x1) this.data_offset = this._readInt(32);\n  if (this.flags & 0x4) this.first_sample_flags = this._readUint(32);\n  this.samples = [];\n  for (var i=0; i<this.sample_count; i++) {\n    var sample = {};\n    if (this.flags & 0x100) sample.sample_duration = this._readUint(32);\n    if (this.flags & 0x200) sample.sample_size = this._readUint(32);\n    if (this.flags & 0x400) sample.sample_flags = this._readUint(32);\n    if (this.flags & 0x800) {\n      if (this.version == 0) {\n        sample.sample_composition_time_offset = this._readUint(32);\n      } else {\n        sample.sample_composition_time_offset = this._readInt(32);\n      }\n    }\n    this.samples.push(sample);\n  }\n};\n// ISO/IEC 14496-30:2014 - WebVTT Source Label Box\nISOBox.prototype._boxParsers['vlab'] = function() {\n  var source_label_raw = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n  this.source_label = ISOBoxer.Utils.dataViewToString(source_label_raw);\n}\n;\n// ISO/IEC 14496-30:2014 - WebVTT Configuration Box\nISOBox.prototype._boxParsers['vttC'] = function() {\n  var config_raw = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n  this.config = ISOBoxer.Utils.dataViewToString(config_raw);\n}\n;\n// ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box\nISOBox.prototype._boxParsers['vtte'] = function() {\n  // Nothing should happen here.\n}\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from './EventBus.js';\r\nimport Events from './events/Events.js';\r\nimport FactoryMaker from './FactoryMaker.js';\r\n\r\n/**\r\n * @module Debug\r\n */\r\nfunction Debug() {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        logToBrowserConsole,\r\n        showLogTimestamp,\r\n        startTime;\r\n\r\n    function setup() {\r\n        logToBrowserConsole = true;\r\n        showLogTimestamp = true;\r\n        startTime = new Date().getTime();\r\n    }\r\n\r\n    /**\r\n     * Prepends a timestamp in milliseconds to each log message.\r\n     * @param {boolean} value Set to true if you want to see a timestamp in each log message.\r\n     * @default false\r\n     * @memberof module:Debug\r\n     * @instance\r\n     */\r\n    function setLogTimestampVisible(value) {\r\n        showLogTimestamp = value;\r\n    }\r\n    /**\r\n     * Toggles logging to the browser's javascript console.  If you set to false you will still receive a log event with the same message.\r\n     * @param {boolean} value Set to false if you want to turn off logging to the browser's console.\r\n     * @default true\r\n     * @memberof module:Debug\r\n     * @instance\r\n     */\r\n    function setLogToBrowserConsole(value) {\r\n        logToBrowserConsole = value;\r\n    }\r\n    /**\r\n     * Use this method to get the state of logToBrowserConsole.\r\n     * @returns {boolean} The current value of logToBrowserConsole\r\n     * @memberof module:Debug\r\n     * @instance\r\n     */\r\n    function getLogToBrowserConsole() {\r\n        return logToBrowserConsole;\r\n    }\r\n    /**\r\n     * This method will allow you send log messages to either the browser's console and/or dispatch an event to capture at the media player level.\r\n     * @param arguments The message you want to log. The Arguments object is supported for this method so you can send in comma separated logging items.\r\n     * @memberof module:Debug\r\n     * @instance\r\n     */\r\n    function log() {\r\n\r\n        var message = '';\r\n        var logTime = null;\r\n\r\n        if (showLogTimestamp) {\r\n            logTime = new Date().getTime();\r\n            message += '[' + (logTime - startTime) + ']';\r\n        }\r\n\r\n        if (message.length > 0) {\r\n            message += ' ';\r\n        }\r\n\r\n        Array.apply(null, arguments).forEach(function (item) {\r\n            message += item + ' ';\r\n        });\r\n\r\n        if (logToBrowserConsole) {\r\n            console.log(message);\r\n        }\r\n\r\n        eventBus.trigger(Events.LOG, {message: message});\r\n    }\r\n\r\n    instance = {\r\n        log: log,\r\n        setLogTimestampVisible: setLogTimestampVisible,\r\n        setLogToBrowserConsole: setLogToBrowserConsole,\r\n        getLogToBrowserConsole: getLogToBrowserConsole,\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nDebug.__dashjs_factory_name = 'Debug';\r\nexport default FactoryMaker.getSingletonFactory(Debug);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from './FactoryMaker.js';\r\n\r\nfunction EventBus() {\r\n\r\n    let instance;\r\n    let handlers = {};\r\n\r\n\r\n    function on(type, listener, scope) {\r\n        if (!type) {\r\n            throw new Error('event type cannot be null or undefined');\r\n        }\r\n\r\n        if (!listener || typeof (listener) !== 'function') {\r\n            throw new Error('listener must be a function: ' + listener);\r\n        }\r\n\r\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\r\n\r\n        var handler = {\r\n            callback: listener,\r\n            scope: scope\r\n        };\r\n\r\n        handlers[type] = handlers[type] || [];\r\n        handlers[type].push(handler);\r\n    }\r\n\r\n    function off(type, listener, scope) {\r\n        if (!type || !listener || !handlers[type]) return;\r\n\r\n        var idx = getHandlerIdx(type, listener, scope);\r\n\r\n        if (idx < 0) return;\r\n\r\n        handlers[type].splice(idx, 1);\r\n    }\r\n\r\n    function trigger(type, args) {\r\n        if (!type || !handlers[type]) return;\r\n\r\n        args = args || {};\r\n\r\n        if (args.hasOwnProperty('type')) {\r\n            throw new Error('\\'type\\' is a reserved word for event dispatching');\r\n        }\r\n\r\n        args.type = type;\r\n\r\n        handlers[type].forEach(function (handler) {\r\n            handler.callback.call(handler.scope, args);\r\n        });\r\n    }\r\n\r\n    function reset() {\r\n        handlers = {};\r\n    }\r\n\r\n    function getHandlerIdx(type, listener, scope) {\r\n        var handlersForType = handlers[type];\r\n        var result = -1;\r\n\r\n        if (!handlersForType || handlersForType.length === 0) return result;\r\n\r\n        for (var i = 0; i < handlersForType.length; i++) {\r\n            if (handlersForType[i].callback === listener && (!scope || scope === handlersForType[i].scope)) return i;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    instance = {\r\n        on: on,\r\n        off: off,\r\n        trigger: trigger,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nEventBus.__dashjs_factory_name = 'EventBus';\r\nexport default FactoryMaker.getSingletonFactory(EventBus);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @Module FactoryMaker\r\n */\r\nlet FactoryMaker = (function () {\r\n\r\n    let instance;\r\n    let extensions = [];\r\n    let singletonContexts = [];\r\n\r\n    function extend(name, childInstance, override, context) {\r\n        let extensionContext = getExtensionContext(context);\r\n        if (!extensionContext[name] && childInstance) {\r\n            extensionContext[name] = {instance: childInstance, override: override};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use this method from your extended object.  this.factory is injected into your object.\r\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\r\n     * will return the video model for use in the extended object.\r\n     *\r\n     * @param context {Object} injected into extended object as this.context\r\n     * @param className {String} string name found in all dash.js objects\r\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\r\n     * @returns {*} Context aware instance of specified singleton name.\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function getSingletonInstance(context, className) {\r\n        for (let i in singletonContexts) {\r\n            let obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                return obj.instance;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\r\n     *\r\n     * @param context\r\n     * @param className\r\n     * @param instance\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function setSingletonInstance(context, className, instance) {\r\n        for (let i in singletonContexts) {\r\n            let obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                singletonContexts[i].instance = instance;\r\n                return;\r\n            }\r\n        }\r\n        singletonContexts.push({ name: className, context: context, instance: instance });\r\n    }\r\n\r\n    function getClassFactory(classConstructor) {\r\n        return function (context) {\r\n            if (context === undefined) {\r\n                context = {};\r\n            }\r\n            return {\r\n                create: function () {\r\n                    return merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    function getSingletonFactory(classConstructor) {\r\n        return function (context) {\r\n            let instance;\r\n            if (context === undefined) {\r\n                context = {};\r\n            }\r\n            return {\r\n                getInstance: function () {\r\n                    // If we don't have an instance yet check for one on the context\r\n                    if (!instance) {\r\n                        instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\r\n                    }\r\n                    // If there's no instance on the context then create one\r\n                    if (!instance) {\r\n                        instance = merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\r\n                        singletonContexts.push({ name: classConstructor.__dashjs_factory_name, context: context, instance: instance });\r\n                    }\r\n                    return instance;\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    function merge(name, classConstructor, context, args) {\r\n        let extensionContext = getExtensionContext(context);\r\n        let extensionObject = extensionContext[name];\r\n        if (extensionObject) {\r\n            let extension = extensionObject.instance;\r\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\r\n                extension = extension.apply({ context: context, factory: instance, parent: classConstructor}, args);\r\n                for (const prop in extension) {\r\n                    if (classConstructor.hasOwnProperty(prop)) {\r\n                        classConstructor[prop] = extension[prop];\r\n                    }\r\n                }\r\n            } else { //replace parent object completely with new object. Same as dijon.\r\n                return extension.apply({ context: context, factory: instance}, args);\r\n            }\r\n        }\r\n        return classConstructor;\r\n    }\r\n\r\n    function getExtensionContext(context) {\r\n        let extensionContext;\r\n        extensions.forEach(function (obj) {\r\n            if (obj === context) {\r\n                extensionContext = obj;\r\n            }\r\n        });\r\n        if (!extensionContext) {\r\n            extensionContext = extensions.push(context);\r\n        }\r\n        return extensionContext;\r\n    }\r\n\r\n    instance = {\r\n        extend: extend,\r\n        getSingletonInstance: getSingletonInstance,\r\n        setSingletonInstance: setSingletonInstance,\r\n        getSingletonFactory: getSingletonFactory,\r\n        getClassFactory: getClassFactory\r\n    };\r\n\r\n    return instance;\r\n\r\n}());\r\n\r\nexport default FactoryMaker;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from './EventsBase.js';\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass CoreEvents extends EventsBase {\r\n    constructor () {\r\n        super();\r\n        this.AST_IN_FUTURE = 'astinfuture';\r\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\r\n        this.BUFFER_CLEARED = 'bufferCleared';\r\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\r\n        this.BYTES_APPENDED = 'bytesAppended';\r\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\r\n        this.CHUNK_APPENDED = 'chunkAppended';\r\n        this.CURRENT_TRACK_CHANGED = 'currenttrackchanged';\r\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\r\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\r\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\r\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\r\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\r\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\r\n        this.INIT_REQUESTED = 'initRequested';\r\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\r\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\r\n        this.LOADING_COMPLETED = 'loadingCompleted';\r\n        this.LOADING_PROGRESS = 'loadingProgress';\r\n        this.MANIFEST_UPDATED = 'manifestUpdated';\r\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\r\n        this.QUALITY_CHANGED = 'qualityChanged';\r\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\r\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\r\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\r\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\r\n        this.SOURCEBUFFER_APPEND_COMPLETED = 'sourceBufferAppendCompleted';\r\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\r\n        this.STREAMS_COMPOSED = 'streamsComposed';\r\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\r\n        this.STREAM_COMPLETED = 'streamCompleted';\r\n        this.STREAM_INITIALIZED = 'streaminitialized';\r\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\r\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\r\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\r\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\r\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\r\n        this.XLINK_ALL_ELEMENTS_LOADED = 'xlinkAllElementsLoaded';\r\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\r\n        this.XLINK_READY = 'xlinkReady';\r\n    }\r\n}\r\n\r\nexport default CoreEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nimport CoreEvents from './CoreEvents.js';\r\nclass Events extends CoreEvents {\r\n}\r\nlet events = new Events();\r\nexport default events;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport TrackInfo from '../streaming/vo/TrackInfo.js';\r\nimport MediaInfo from '../streaming/vo/MediaInfo.js';\r\nimport StreamInfo from '../streaming/vo/StreamInfo.js';\r\nimport ManifestInfo from '../streaming/vo/ManifestInfo.js';\r\nimport Event from './vo/Event.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\nimport cea608parser from '../../externals/cea608-parser.js';\r\n\r\nconst METRIC_LIST = {\r\n    //TODO need to refactor all that reference to be able to export like all other const on factory object.\r\n    TCP_CONNECTION: 'TcpList',\r\n    HTTP_REQUEST: 'HttpList',\r\n    TRACK_SWITCH: 'RepSwitchList',\r\n    BUFFER_LEVEL: 'BufferLevel',\r\n    BUFFER_STATE: 'BufferState',\r\n    DVR_INFO: 'DVRInfo',\r\n    DROPPED_FRAMES: 'DroppedFrames',\r\n    SCHEDULING_INFO: 'SchedulingInfo',\r\n    REQUESTS_QUEUE: 'RequestsQueue',\r\n    MANIFEST_UPDATE: 'ManifestUpdate',\r\n    MANIFEST_UPDATE_STREAM_INFO: 'ManifestUpdatePeriodInfo',\r\n    MANIFEST_UPDATE_TRACK_INFO: 'ManifestUpdateRepresentationInfo',\r\n    PLAY_LIST: 'PlayList',\r\n    DVB_ERRORS: 'DVBErrors'\r\n};\r\n\r\nfunction DashAdapter() {\r\n\r\n    //let context = this.context;\r\n\r\n    let instance,\r\n        dashManifestModel,\r\n        periods,\r\n        adaptations;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.dashManifestModel) {\r\n            dashManifestModel = config.dashManifestModel;\r\n        }\r\n    }\r\n\r\n    function initialize() {\r\n        periods = [];\r\n        adaptations = {};\r\n    }\r\n\r\n\r\n    function getRepresentationForTrackInfo(trackInfo, representationController) {\r\n        return representationController.getRepresentationForQuality(trackInfo.quality);\r\n    }\r\n\r\n    function getAdaptationForMediaInfo(mediaInfo) {\r\n        return adaptations[mediaInfo.streamInfo.id][mediaInfo.index];\r\n    }\r\n\r\n    function getPeriodForStreamInfo(streamInfo) {\r\n        var ln = periods.length;\r\n\r\n        for (let i = 0; i < ln; i++) {\r\n            let period = periods[i];\r\n\r\n            if (streamInfo.id === period.id) return period;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function convertRepresentationToTrackInfo(manifest, representation) {\r\n        var trackInfo = new TrackInfo();\r\n        var a = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\r\n        var r = dashManifestModel.getRepresentationFor(representation.index, a);\r\n\r\n        trackInfo.id = representation.id;\r\n        trackInfo.quality = representation.index;\r\n        trackInfo.bandwidth = dashManifestModel.getBandwidth(r);\r\n        trackInfo.DVRWindow = representation.segmentAvailabilityRange;\r\n        trackInfo.fragmentDuration = representation.segmentDuration || (representation.segments && representation.segments.length > 0 ? representation.segments[0].duration : NaN);\r\n        trackInfo.MSETimeOffset = representation.MSETimeOffset;\r\n        trackInfo.useCalculatedLiveEdgeTime = representation.useCalculatedLiveEdgeTime;\r\n        trackInfo.mediaInfo = convertAdaptationToMediaInfo(manifest, representation.adaptation);\r\n\r\n        return trackInfo;\r\n    }\r\n\r\n    function convertAdaptationToMediaInfo(manifest, adaptation) {\r\n        var mediaInfo = new MediaInfo();\r\n        var a = adaptation.period.mpd.manifest.Period_asArray[adaptation.period.index].AdaptationSet_asArray[adaptation.index];\r\n        var viewpoint;\r\n\r\n        mediaInfo.id = adaptation.id;\r\n        mediaInfo.index = adaptation.index;\r\n        mediaInfo.type = adaptation.type;\r\n        mediaInfo.streamInfo = convertPeriodToStreamInfo(manifest, adaptation.period);\r\n        mediaInfo.representationCount = dashManifestModel.getRepresentationCount(a);\r\n        mediaInfo.lang = dashManifestModel.getLanguageForAdaptation(a);\r\n        viewpoint = dashManifestModel.getViewpointForAdaptation(a);\r\n        mediaInfo.viewpoint = viewpoint ? viewpoint.value : undefined;\r\n        mediaInfo.accessibility = dashManifestModel.getAccessibilityForAdaptation(a).map(function (accessibility) {\r\n            let accessibilityValue = accessibility.value;\r\n            let accessibilityData = accessibilityValue;\r\n            if (accessibility.schemeIdUri && (accessibility.schemeIdUri.search('cea-608') >= 0) && typeof (cea608parser) !== 'undefined') {\r\n                if (accessibilityValue) {\r\n                    accessibilityData = 'cea-608:' + accessibilityValue;\r\n                } else {\r\n                    accessibilityData = 'cea-608';\r\n                }\r\n                mediaInfo.embeddedCaptions = true;\r\n            }\r\n            return accessibilityData;\r\n        });\r\n        mediaInfo.audioChannelConfiguration =  dashManifestModel.getAudioChannelConfigurationForAdaptation(a).map(function (audioChannelConfiguration) {\r\n            return audioChannelConfiguration.value;\r\n        });\r\n        mediaInfo.roles = dashManifestModel.getRolesForAdaptation(a).map(function (role) {\r\n            return role.value;\r\n        });\r\n        mediaInfo.codec = dashManifestModel.getCodec(a);\r\n        mediaInfo.mimeType = dashManifestModel.getMimeType(a);\r\n        mediaInfo.contentProtection = dashManifestModel.getContentProtectionData(a);\r\n        mediaInfo.bitrateList = dashManifestModel.getBitrateListForAdaptation(a);\r\n\r\n        if (mediaInfo.contentProtection) {\r\n            mediaInfo.contentProtection.forEach(function (item) {\r\n                item.KID = dashManifestModel.getKID(item);\r\n            });\r\n        }\r\n\r\n        mediaInfo.isText = dashManifestModel.getIsTextTrack(mediaInfo.mimeType);\r\n\r\n        return mediaInfo;\r\n    }\r\n\r\n    function convertVideoInfoToEmbeddedTextInfo(mediaInfo, channel, lang) {\r\n        mediaInfo.id = channel; // CC1, CC2, CC3, or CC4\r\n        mediaInfo.index = 100 + parseInt(channel.substring(2, 3));\r\n        mediaInfo.type = 'embeddedText';\r\n        mediaInfo.codec = 'cea-608-in-SEI';\r\n        mediaInfo.isText = true;\r\n        mediaInfo.isEmbedded = true;\r\n        mediaInfo.lang = channel + ' ' + lang;\r\n        mediaInfo.roles = ['caption'];\r\n    }\r\n\r\n    function convertPeriodToStreamInfo(manifest, period) {\r\n        let streamInfo = new StreamInfo();\r\n        const THRESHOLD = 1;\r\n\r\n        streamInfo.id = period.id;\r\n        streamInfo.index = period.index;\r\n        streamInfo.start = period.start;\r\n        streamInfo.duration = period.duration;\r\n        streamInfo.manifestInfo = convertMpdToManifestInfo(manifest, period.mpd);\r\n        streamInfo.isLast = manifest.Period_asArray.length === 1 || Math.abs((streamInfo.start + streamInfo.duration) - streamInfo.manifestInfo.duration) < THRESHOLD;\r\n        streamInfo.isFirst = manifest.Period_asArray.length === 1 || dashManifestModel.getRegularPeriods(manifest, dashManifestModel.getMpd(manifest))[0].id === period.id;\r\n\r\n        return streamInfo;\r\n    }\r\n\r\n    function convertMpdToManifestInfo(manifest, mpd) {\r\n        var manifestInfo = new ManifestInfo();\r\n\r\n        manifestInfo.DVRWindowSize = mpd.timeShiftBufferDepth;\r\n        manifestInfo.loadedTime = mpd.manifest.loadedTime;\r\n        manifestInfo.availableFrom = mpd.availabilityStartTime;\r\n        manifestInfo.minBufferTime = mpd.manifest.minBufferTime;\r\n        manifestInfo.maxFragmentDuration = mpd.maxSegmentDuration;\r\n        manifestInfo.duration = dashManifestModel.getDuration(manifest);\r\n        manifestInfo.isDynamic = dashManifestModel.getIsDynamic(manifest);\r\n\r\n        return manifestInfo;\r\n    }\r\n\r\n    function getMediaInfoForType(manifest, streamInfo, type) {\r\n        var periodInfo = getPeriodForStreamInfo(streamInfo);\r\n        var periodId = periodInfo.id;\r\n        var data = dashManifestModel.getAdaptationForType(manifest, streamInfo.index, type);\r\n        var idx;\r\n\r\n        if (!data) return null;\r\n\r\n        idx = dashManifestModel.getIndexForAdaptation(data, manifest, streamInfo.index);\r\n\r\n        adaptations[periodId] = adaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(manifest, periodInfo);\r\n\r\n        return convertAdaptationToMediaInfo(manifest, adaptations[periodId][idx]);\r\n    }\r\n\r\n    function getAllMediaInfoForType(manifest, streamInfo, type) {\r\n        var periodInfo = getPeriodForStreamInfo(streamInfo);\r\n        var periodId = periodInfo.id;\r\n        var adaptationsForType = dashManifestModel.getAdaptationsForType(manifest, streamInfo.index, type !== 'embeddedText' ? type : 'video');\r\n\r\n        var mediaArr = [];\r\n\r\n        var data,\r\n            media,\r\n            idx,\r\n            i,\r\n            j,\r\n            ln;\r\n\r\n        if (!adaptationsForType) return mediaArr;\r\n\r\n        adaptations[periodId] = adaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(manifest, periodInfo);\r\n\r\n        for (i = 0, ln = adaptationsForType.length; i < ln; i++) {\r\n            data = adaptationsForType[i];\r\n            idx = dashManifestModel.getIndexForAdaptation(data, manifest, streamInfo.index);\r\n            media = convertAdaptationToMediaInfo(manifest, adaptations[periodId][idx]);\r\n\r\n            if (type === 'embeddedText') {\r\n                var accessibilityLength = media.accessibility.length;\r\n                for (j = 0; j < accessibilityLength; j++) {\r\n                    if (!media) {\r\n                        continue;\r\n                    }\r\n                    var accessibility = media.accessibility[j];\r\n                    if (accessibility.indexOf('cea-608:') === 0) {\r\n                        var value = accessibility.substring(8);\r\n                        var parts = value.split(';');\r\n                        if (parts[0].substring(0, 2) === 'CC') {\r\n                            for (j = 0; j < parts.length; j++) {\r\n                                if (!media) {\r\n                                    media = convertAdaptationToMediaInfo.call(this, manifest, adaptations[periodId][idx]);\r\n                                }\r\n                                convertVideoInfoToEmbeddedTextInfo(media, parts[j].substring(0, 3), parts[j].substring(4));\r\n                                mediaArr.push(media);\r\n                                media = null;\r\n                            }\r\n                        } else {\r\n                            for (j = 0; j < parts.length; j++) { // Only languages for CC1, CC2, ...\r\n                                if (!media) {\r\n                                    media = convertAdaptationToMediaInfo.call(this, manifest, adaptations[periodId][idx]);\r\n                                }\r\n                                convertVideoInfoToEmbeddedTextInfo(media, 'CC' + (j + 1), parts[j]);\r\n                                mediaArr.push(media);\r\n                                media = null;\r\n                            }\r\n                        }\r\n                    } else if (accessibility.indexOf('cea-608') === 0) { // Nothing known. We interpret it as CC1=eng\r\n                        convertVideoInfoToEmbeddedTextInfo(media, 'CC1', 'eng');\r\n                        mediaArr.push(media);\r\n                        media = null;\r\n                    }\r\n                }\r\n            }\r\n            if (media && type !== 'embeddedText') {\r\n                mediaArr.push(media);\r\n            }\r\n        }\r\n\r\n        return mediaArr;\r\n    }\r\n\r\n    function getStreamsInfo(manifest) {\r\n        var streams = [];\r\n        var mpd,\r\n            ln,\r\n            i;\r\n\r\n        if (!manifest) return null;\r\n\r\n        mpd = dashManifestModel.getMpd(manifest);\r\n        periods = dashManifestModel.getRegularPeriods(manifest, mpd);\r\n        mpd.checkTime = dashManifestModel.getCheckTime(manifest, periods[0]);\r\n        adaptations = {};\r\n        ln = periods.length;\r\n\r\n        for (i = 0; i < ln; i++) {\r\n            streams.push(convertPeriodToStreamInfo(manifest, periods[i]));\r\n        }\r\n\r\n        return streams;\r\n    }\r\n\r\n    function getManifestInfo(manifest) {\r\n        var mpd = dashManifestModel.getMpd(manifest);\r\n\r\n        return convertMpdToManifestInfo(manifest, mpd);\r\n    }\r\n\r\n    function getInitRequest(streamProcessor, quality) {\r\n        var representation = streamProcessor.getRepresentationController().getRepresentationForQuality(quality);\r\n        return streamProcessor.getIndexHandler().getInitRequest(representation);\r\n    }\r\n\r\n    function getNextFragmentRequest(streamProcessor, trackInfo) {\r\n        var representation = getRepresentationForTrackInfo(trackInfo, streamProcessor.getRepresentationController());\r\n        return streamProcessor.getIndexHandler().getNextSegmentRequest(representation);\r\n    }\r\n\r\n    function getFragmentRequestForTime(streamProcessor, trackInfo, time, options) {\r\n        var representation = getRepresentationForTrackInfo(trackInfo, streamProcessor.getRepresentationController());\r\n        return streamProcessor.getIndexHandler().getSegmentRequestForTime(representation, time, options);\r\n    }\r\n\r\n    function generateFragmentRequestForTime(streamProcessor, trackInfo, time) {\r\n        var representation = getRepresentationForTrackInfo(trackInfo, streamProcessor.getRepresentationController());\r\n        return streamProcessor.getIndexHandler().generateSegmentRequestForTime(representation, time);\r\n    }\r\n\r\n    function getIndexHandlerTime(streamProcessor) {\r\n        return streamProcessor.getIndexHandler().getCurrentTime();\r\n    }\r\n\r\n    function setIndexHandlerTime(streamProcessor, value) {\r\n        return streamProcessor.getIndexHandler().setCurrentTime(value);\r\n    }\r\n\r\n    function updateData(manifest, streamProcessor) {\r\n        var periodInfo = getPeriodForStreamInfo(streamProcessor.getStreamInfo());\r\n        var mediaInfo = streamProcessor.getMediaInfo();\r\n        var adaptation = getAdaptationForMediaInfo(mediaInfo);\r\n        var type = streamProcessor.getType();\r\n\r\n        var id,\r\n            data;\r\n\r\n        id = mediaInfo.id;\r\n        data = id ? dashManifestModel.getAdaptationForId(id, manifest, periodInfo.index) : dashManifestModel.getAdaptationForIndex(mediaInfo.index, manifest, periodInfo.index);\r\n        streamProcessor.getRepresentationController().updateData(data, adaptation, type);\r\n    }\r\n\r\n    function getRepresentationInfoForQuality(manifest, representationController, quality) {\r\n        var representation = representationController.getRepresentationForQuality(quality);\r\n        return representation ? convertRepresentationToTrackInfo(manifest, representation) : null;\r\n    }\r\n\r\n    function getCurrentRepresentationInfo(manifest, representationController) {\r\n        var representation = representationController.getCurrentRepresentation();\r\n        return representation ? convertRepresentationToTrackInfo(manifest, representation) : null;\r\n    }\r\n\r\n    function getEvent(eventBox, eventStreams, startTime) {\r\n        var event = new Event();\r\n        var schemeIdUri = eventBox.scheme_id_uri;\r\n        var value = eventBox.value;\r\n        var timescale = eventBox.timescale;\r\n        var presentationTimeDelta = eventBox.presentation_time_delta;\r\n        var duration = eventBox.event_duration;\r\n        var id = eventBox.id;\r\n        var messageData = eventBox.message_data;\r\n        var presentationTime = startTime * timescale + presentationTimeDelta;\r\n\r\n        if (!eventStreams[schemeIdUri]) return null;\r\n\r\n        event.eventStream = eventStreams[schemeIdUri];\r\n        event.eventStream.value = value;\r\n        event.eventStream.timescale = timescale;\r\n        event.duration = duration;\r\n        event.id = id;\r\n        event.presentationTime = presentationTime;\r\n        event.messageData = messageData;\r\n        event.presentationTimeDelta = presentationTimeDelta;\r\n\r\n        return event;\r\n    }\r\n\r\n    function getEventsFor(manifest, info, streamProcessor) {\r\n        var events = [];\r\n\r\n        if (info instanceof StreamInfo) {\r\n            events = dashManifestModel.getEventsForPeriod(manifest, getPeriodForStreamInfo(info));\r\n        } else if (info instanceof MediaInfo) {\r\n            events = dashManifestModel.getEventStreamForAdaptationSet(manifest, getAdaptationForMediaInfo(info));\r\n        } else if (info instanceof TrackInfo) {\r\n            events = dashManifestModel.getEventStreamForRepresentation(manifest, getRepresentationForTrackInfo(info, streamProcessor.getRepresentationController()));\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n    function reset() {\r\n        periods = [];\r\n        adaptations = {};\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        convertDataToTrack: convertRepresentationToTrackInfo,\r\n        convertDataToMedia: convertAdaptationToMediaInfo,\r\n        convertDataToStream: convertPeriodToStreamInfo,\r\n        getDataForTrack: getRepresentationForTrackInfo,\r\n        getDataForMedia: getAdaptationForMediaInfo,\r\n        getDataForStream: getPeriodForStreamInfo,\r\n        getStreamsInfo: getStreamsInfo,\r\n        getManifestInfo: getManifestInfo,\r\n        getMediaInfoForType: getMediaInfoForType,\r\n        getAllMediaInfoForType: getAllMediaInfoForType,\r\n        getCurrentRepresentationInfo: getCurrentRepresentationInfo,\r\n        getRepresentationInfoForQuality: getRepresentationInfoForQuality,\r\n        updateData: updateData,\r\n        getInitRequest: getInitRequest,\r\n        getNextFragmentRequest: getNextFragmentRequest,\r\n        getFragmentRequestForTime: getFragmentRequestForTime,\r\n        generateFragmentRequestForTime: generateFragmentRequestForTime,\r\n        getIndexHandlerTime: getIndexHandlerTime,\r\n        setIndexHandlerTime: setIndexHandlerTime,\r\n        getEventsFor: getEventsFor,\r\n        getEvent: getEvent,\r\n        setConfig: setConfig,\r\n        reset: reset,\r\n        metricsList: METRIC_LIST\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDashAdapter.__dashjs_factory_name = 'DashAdapter';\r\nexport default FactoryMaker.getSingletonFactory(DashAdapter);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FragmentRequest from '../streaming/vo/FragmentRequest.js';\r\nimport Error from '../streaming/vo/Error.js';\r\nimport HTTPRequest from '../streaming/vo/metrics/HTTPRequest.js';\r\nimport Events from '../core/events/Events.js';\r\nimport EventBus from '../core/EventBus.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\nimport Debug from '../core/Debug.js';\r\nimport URLUtils from '../streaming/utils/URLUtils.js';\r\n\r\nimport {replaceTokenForTemplate, getTimeBasedSegment, getSegmentByIndex} from './utils/SegmentsUtils.js';\r\nimport SegmentsGetter from './utils/SegmentsGetter.js';\r\n\r\nconst SEGMENTS_UNAVAILABLE_ERROR_CODE = 1;\r\n\r\nfunction DashHandler(config) {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n    const urlUtils = URLUtils(context).getInstance();\r\n\r\n    let segmentBaseLoader = config.segmentBaseLoader;\r\n    let timelineConverter = config.timelineConverter;\r\n    let dashMetrics = config.dashMetrics;\r\n    let metricsModel = config.metricsModel;\r\n    const baseURLController = config.baseURLController;\r\n\r\n    let instance,\r\n        index,\r\n        requestedTime,\r\n        isDynamic,\r\n        type,\r\n        currentTime,\r\n        earliestTime,\r\n        streamProcessor,\r\n        segmentsGetter;\r\n\r\n    function setup() {\r\n        index = -1;\r\n        currentTime = 0;\r\n        earliestTime = NaN;\r\n        eventBus.on(Events.INITIALIZATION_LOADED, onInitializationLoaded, instance);\r\n        eventBus.on(Events.SEGMENTS_LOADED, onSegmentsLoaded, instance);\r\n    }\r\n\r\n    function initialize(StreamProcessor) {\r\n        streamProcessor = StreamProcessor;\r\n        type = streamProcessor.getType();\r\n        isDynamic = streamProcessor.isDynamic();\r\n\r\n        segmentsGetter = SegmentsGetter(context).create(config, isDynamic);\r\n    }\r\n\r\n    function getStreamProcessor() {\r\n        return streamProcessor;\r\n    }\r\n\r\n    function setCurrentTime(value) {\r\n        currentTime = value;\r\n    }\r\n\r\n    function getCurrentTime() {\r\n        return currentTime;\r\n    }\r\n\r\n    function getCurrentIndex() {\r\n        return index;\r\n    }\r\n\r\n    function getEarliestTime() {\r\n        return earliestTime;\r\n    }\r\n\r\n    function reset() {\r\n        segmentsGetter = null;\r\n        currentTime = 0;\r\n        earliestTime = NaN;\r\n        requestedTime = NaN;\r\n        index = -1;\r\n        isDynamic = null;\r\n        type = null;\r\n        streamProcessor = null;\r\n        eventBus.off(Events.INITIALIZATION_LOADED, onInitializationLoaded, instance);\r\n        eventBus.off(Events.SEGMENTS_LOADED, onSegmentsLoaded, instance);\r\n    }\r\n\r\n    function unescapeDollarsInTemplate(url) {\r\n        return url.split('$$').join('$');\r\n    }\r\n\r\n    function replaceIDForTemplate(url, value) {\r\n        if (value === null || url.indexOf('$RepresentationID$') === -1) { return url; }\r\n        var v = value.toString();\r\n        return url.split('$RepresentationID$').join(v);\r\n    }\r\n\r\n    function setRequestUrl(request, destination, representation) {\r\n        var baseURL = baseURLController.resolve(representation.path);\r\n        var url;\r\n        var serviceLocation;\r\n\r\n        if (!baseURL || (destination === baseURL.url) || (!urlUtils.isRelative(destination))) {\r\n            url = destination;\r\n        } else {\r\n            url = baseURL.url;\r\n            serviceLocation = baseURL.serviceLocation;\r\n\r\n            if (destination) {\r\n                url += destination;\r\n            }\r\n        }\r\n\r\n        if (urlUtils.isRelative(url)) {\r\n            return false;\r\n        }\r\n\r\n        request.url = url;\r\n        request.serviceLocation = serviceLocation;\r\n\r\n        return true;\r\n    }\r\n\r\n    function generateInitRequest(representation, mediaType) {\r\n        var request = new FragmentRequest();\r\n        var period,\r\n            presentationStartTime;\r\n\r\n        period = representation.adaptation.period;\r\n\r\n        request.mediaType = mediaType;\r\n        request.type = HTTPRequest.INIT_SEGMENT_TYPE;\r\n        request.range = representation.range;\r\n        presentationStartTime = period.start;\r\n        request.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationStartTime, representation.adaptation.period.mpd, isDynamic);\r\n        request.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationStartTime + period.duration, period.mpd, isDynamic);\r\n        request.quality = representation.index;\r\n        request.mediaInfo = streamProcessor.getMediaInfo();\r\n\r\n        if (setRequestUrl(request, representation.initialization, representation)) {\r\n            return request;\r\n        }\r\n    }\r\n\r\n    function getInitRequest(representation) {\r\n        var request;\r\n\r\n        if (!representation) return null;\r\n\r\n        request = generateInitRequest(representation, type);\r\n\r\n        //log(\"Got an initialization.\");\r\n\r\n        return request;\r\n    }\r\n\r\n    function isMediaFinished(representation) {\r\n        var period = representation.adaptation.period;\r\n        var segmentInfoType = representation.segmentInfoType;\r\n\r\n        var isFinished = false;\r\n\r\n        var sDuration,\r\n            seg,\r\n            fTime;\r\n\r\n        if (index < 0) {\r\n            isFinished = false;\r\n        } else if (isDynamic || index < representation.availableSegmentsNumber) {\r\n            seg = getSegmentByIndex(index, representation);\r\n\r\n            if (seg) {\r\n                fTime = seg.presentationStartTime - period.start;\r\n                sDuration = representation.adaptation.period.duration;\r\n                log(representation.segmentInfoType + ': ' + fTime + ' / ' + sDuration);\r\n                isFinished = segmentInfoType === 'SegmentTimeline' && isDynamic ? false : (fTime >= sDuration);\r\n            }\r\n        } else {\r\n            isFinished = true;\r\n        }\r\n\r\n        return isFinished;\r\n    }\r\n\r\n    function updateSegments(representation) {\r\n        return segmentsGetter.getSegments(representation, requestedTime, index, onSegmentListUpdated);\r\n    }\r\n\r\n    function onSegmentListUpdated(representation, segments) {\r\n\r\n        representation.segments = segments;\r\n\r\n        if (segments && segments.length > 0) {\r\n            earliestTime = isNaN(earliestTime) ? segments[0].presentationStartTime : Math.min(segments[0].presentationStartTime,  earliestTime);\r\n        }\r\n\r\n        if (isDynamic && isNaN(timelineConverter.getExpectedLiveEdge())) {\r\n            let lastIdx = segments.length - 1;\r\n            let lastSegment = segments[lastIdx];\r\n            let liveEdge = lastSegment.presentationStartTime;\r\n            let metrics = metricsModel.getMetricsFor('stream');\r\n            // the last segment is supposed to be a live edge\r\n            timelineConverter.setExpectedLiveEdge(liveEdge);\r\n            metricsModel.updateManifestUpdateInfo(dashMetrics.getCurrentManifestUpdate(metrics), {presentationStartTime: liveEdge});\r\n        }\r\n    }\r\n\r\n    function updateSegmentList(representation) {\r\n\r\n        if (!representation) {\r\n            throw new Error('no representation');\r\n        }\r\n\r\n        representation.segments = null;\r\n\r\n        updateSegments(representation);\r\n\r\n        return representation;\r\n    }\r\n\r\n    function updateRepresentation(representation, keepIdx) {\r\n        var hasInitialization = representation.initialization;\r\n        var hasSegments = representation.segmentInfoType !== 'BaseURL' && representation.segmentInfoType !== 'SegmentBase';\r\n        var error;\r\n\r\n        if (!representation.segmentDuration && !representation.segments) {\r\n            updateSegmentList(representation);\r\n        }\r\n\r\n        representation.segmentAvailabilityRange = null;\r\n        representation.segmentAvailabilityRange = timelineConverter.calcSegmentAvailabilityRange(representation, isDynamic);\r\n\r\n        if ((representation.segmentAvailabilityRange.end < representation.segmentAvailabilityRange.start) && !representation.useCalculatedLiveEdgeTime) {\r\n            error = new Error(SEGMENTS_UNAVAILABLE_ERROR_CODE, 'no segments are available yet', {availabilityDelay: representation.segmentAvailabilityRange.start - representation.segmentAvailabilityRange.end});\r\n            eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: representation, error: error});\r\n            return;\r\n        }\r\n\r\n        if (!keepIdx) index = -1;\r\n\r\n        if (representation.segmentDuration) {\r\n            updateSegmentList(representation);\r\n        }\r\n\r\n        if (!hasInitialization) {\r\n            segmentBaseLoader.loadInitialization(representation);\r\n        }\r\n\r\n        if (!hasSegments) {\r\n            segmentBaseLoader.loadSegments(representation, type, representation.indexRange);\r\n        }\r\n\r\n        if (hasInitialization && hasSegments) {\r\n            eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: representation});\r\n        }\r\n    }\r\n\r\n    function getIndexForSegments(time, representation, timeThreshold) {\r\n        var segments = representation.segments;\r\n        var ln = segments ? segments.length : null;\r\n\r\n        var idx = -1;\r\n        var epsilon,\r\n            frag,\r\n            ft,\r\n            fd,\r\n            i;\r\n\r\n        if (segments && ln > 0) {\r\n            for (i = 0; i < ln; i++) {\r\n                frag = segments[i];\r\n                ft = frag.presentationStartTime;\r\n                fd = frag.duration;\r\n                epsilon = (timeThreshold === undefined || timeThreshold === null) ? fd / 2 : timeThreshold;\r\n                if ((time + epsilon) >= ft &&\r\n                    (time - epsilon) < (ft + fd)) {\r\n                    idx = frag.availabilityIdx;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return idx;\r\n    }\r\n\r\n    function getRequestForSegment(segment) {\r\n        if (segment === null || segment === undefined) {\r\n            return null;\r\n        }\r\n\r\n        var request = new FragmentRequest();\r\n        var representation = segment.representation;\r\n        var bandwidth = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\r\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].bandwidth;\r\n        var url = segment.media;\r\n\r\n        url = replaceTokenForTemplate(url, 'Number', segment.replacementNumber);\r\n        url = replaceTokenForTemplate(url, 'Time', segment.replacementTime);\r\n        url = replaceTokenForTemplate(url, 'Bandwidth', bandwidth);\r\n        url = replaceIDForTemplate(url, representation.id);\r\n        url = unescapeDollarsInTemplate(url);\r\n\r\n        request.mediaType = type;\r\n        request.type = HTTPRequest.MEDIA_SEGMENT_TYPE;\r\n        request.range = segment.mediaRange;\r\n        request.startTime = segment.presentationStartTime;\r\n        request.duration = segment.duration;\r\n        request.timescale = representation.timescale;\r\n        request.availabilityStartTime = segment.availabilityStartTime;\r\n        request.availabilityEndTime = segment.availabilityEndTime;\r\n        request.wallStartTime = segment.wallStartTime;\r\n        request.quality = representation.index;\r\n        request.index = segment.availabilityIdx;\r\n        request.mediaInfo = streamProcessor.getMediaInfo();\r\n        request.adaptationIndex = representation.adaptation.index;\r\n\r\n        if (setRequestUrl(request, url, representation)) {\r\n            return request;\r\n        }\r\n    }\r\n\r\n    function getSegmentRequestForTime(representation, time, options) {\r\n        var request,\r\n            segment,\r\n            finished;\r\n\r\n        var idx = index;\r\n\r\n        var keepIdx = options ? options.keepIdx : false;\r\n        var timeThreshold = options ? options.timeThreshold : null;\r\n        var ignoreIsFinished = (options && options.ignoreIsFinished) ? true : false;\r\n\r\n        if (!representation) {\r\n            return null;\r\n        }\r\n\r\n        if (requestedTime !== time) { // When playing at live edge with 0 delay we may loop back with same time and index until it is available. Reduces verboseness of logs.\r\n            requestedTime = time;\r\n            log('Getting the request for ' + type + ' time : ' + time);\r\n        }\r\n\r\n        index = getIndexForSegments(time, representation, timeThreshold);\r\n        //Index may be -1 if getSegments needs to update.  So after getSegments is called and updated then try to get index again.\r\n        updateSegments(representation);\r\n        if (index < 0) {\r\n            index = getIndexForSegments(time, representation, timeThreshold);\r\n        }\r\n\r\n        if (index > 0) {\r\n            log('Index for ' + type + ' time ' + time + ' is ' + index );\r\n        }\r\n\r\n        finished = !ignoreIsFinished ? isMediaFinished(representation) : false;\r\n        if (finished) {\r\n            request = new FragmentRequest();\r\n            request.action = FragmentRequest.ACTION_COMPLETE;\r\n            request.index = index;\r\n            request.mediaType = type;\r\n            request.mediaInfo = streamProcessor.getMediaInfo();\r\n            log('Signal complete.', request);\r\n\r\n        } else {\r\n            segment = getSegmentByIndex(index, representation);\r\n            request = getRequestForSegment(segment);\r\n        }\r\n\r\n        if (keepIdx && idx >= 0) {\r\n            index = representation.segmentInfoType === 'SegmentTimeline' && isDynamic ? index : idx;\r\n        }\r\n\r\n        return request;\r\n    }\r\n\r\n    function generateSegmentRequestForTime(representation, time) {\r\n        var step = (representation.segmentAvailabilityRange.end - representation.segmentAvailabilityRange.start) / 2;\r\n\r\n        representation.segments = null;\r\n        representation.segmentAvailabilityRange = {start: time - step, end: time + step};\r\n        return getSegmentRequestForTime(representation, time, {keepIdx: false, ignoreIsFinished: true});\r\n    }\r\n\r\n    function getNextSegmentRequest(representation) {\r\n        var request,\r\n            segment,\r\n            finished;\r\n\r\n        if (!representation || index === -1) {\r\n            return null;\r\n        }\r\n\r\n        requestedTime = null;\r\n        index++;\r\n\r\n        log('Getting the next request at index: ' + index);\r\n\r\n        finished = isMediaFinished(representation);\r\n        if (finished) {\r\n            request = new FragmentRequest();\r\n            request.action = FragmentRequest.ACTION_COMPLETE;\r\n            request.index = index;\r\n            request.mediaType = type;\r\n            request.mediaInfo = streamProcessor.getMediaInfo();\r\n            log('Signal complete.');\r\n        } else {\r\n            updateSegments(representation);\r\n            segment = getSegmentByIndex(index, representation);\r\n            request = getRequestForSegment(segment);\r\n            if (!segment && isDynamic) {\r\n                /*\r\n                 Sometimes when playing dynamic streams with 0 fragment delay at live edge we ask for\r\n                 an index before it is available so we decrement index back and send null request\r\n                 which triggers the validate loop to rerun and the next time the segment should be\r\n                 available.\r\n                 */\r\n                index-- ;\r\n            }\r\n        }\r\n\r\n        return request;\r\n    }\r\n\r\n    function onInitializationLoaded(e) {\r\n        var representation = e.representation;\r\n        //log(\"Got an initialization.\");\r\n        if (!representation.segments) return;\r\n\r\n        eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: representation});\r\n    }\r\n\r\n    function onSegmentsLoaded(e) {\r\n        if (e.error || (type !== e.mediaType)) return;\r\n\r\n        var fragments = e.segments;\r\n        var representation = e.representation;\r\n        var segments = [];\r\n        var count = 0;\r\n\r\n        var i,\r\n            len,\r\n            s,\r\n            seg;\r\n\r\n        for (i = 0, len = fragments.length; i < len; i++) {\r\n            s = fragments[i];\r\n\r\n            seg = getTimeBasedSegment(\r\n                timelineConverter,\r\n                isDynamic,\r\n                representation,\r\n                s.startTime,\r\n                s.duration,\r\n                s.timescale,\r\n                s.media,\r\n                s.mediaRange,\r\n                count);\r\n\r\n            segments.push(seg);\r\n            seg = null;\r\n            count++;\r\n        }\r\n\r\n        representation.segmentAvailabilityRange = {start: segments[0].presentationStartTime, end: segments[len - 1].presentationStartTime};\r\n        representation.availableSegmentsNumber = len;\r\n\r\n        onSegmentListUpdated(representation, segments);\r\n\r\n        if (!representation.initialization) return;\r\n\r\n        eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: representation});\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        getStreamProcessor: getStreamProcessor,\r\n        getInitRequest: getInitRequest,\r\n        getSegmentRequestForTime: getSegmentRequestForTime,\r\n        getNextSegmentRequest: getNextSegmentRequest,\r\n        generateSegmentRequestForTime: generateSegmentRequestForTime,\r\n        updateRepresentation: updateRepresentation,\r\n        setCurrentTime: setCurrentTime,\r\n        getCurrentTime: getCurrentTime,\r\n        getCurrentIndex: getCurrentIndex,\r\n        getEarliestTime: getEarliestTime,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nDashHandler.__dashjs_factory_name = 'DashHandler';\r\nlet factory = FactoryMaker.getClassFactory(DashHandler);\r\nfactory.SEGMENTS_UNAVAILABLE_ERROR_CODE = SEGMENTS_UNAVAILABLE_ERROR_CODE;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport HTTPRequest from '../streaming/vo/metrics/HTTPRequest.js';\r\nimport AbrController from '../streaming/controllers/AbrController.js';\r\nimport ManifestModel from '../streaming/models/ManifestModel.js';\r\nimport DashManifestModel from './models/DashManifestModel.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\n\r\n/**\r\n * @Module DashMetrics\r\n */\r\nfunction DashMetrics() {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n    let manifestModel = ManifestModel(context).getInstance();//TODO Need to pass this in not bake in\r\n\r\n    function getBandwidthForRepresentation(representationId, periodId) {\r\n        var representation;\r\n        var manifest = manifestModel.getValue();\r\n        var period = manifest.Period_asArray[periodId];\r\n\r\n        representation = findRepresentation(period, representationId);\r\n\r\n        if (representation === null) {\r\n            return null;\r\n        }\r\n\r\n        return representation.bandwidth;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param representationId\r\n     * @param periodIdx\r\n     * @returns {*}\r\n     */\r\n    function getIndexForRepresentation(representationId, periodIdx) {\r\n        var representationIndex;\r\n        var manifest = manifestModel.getValue();\r\n        var period = manifest.Period_asArray[periodIdx];\r\n\r\n        representationIndex = findRepresentationIndex(period, representationId);\r\n        return representationIndex;\r\n    }\r\n\r\n    /**\r\n     * This method returns the current max index based on what is defined in the MPD.\r\n     *\r\n     * @param bufferType - String 'audio' or 'video',\r\n     * @param periodIdx - Make sure this is the period index not id\r\n     * @return int\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getMaxIndexForBufferType(bufferType, periodIdx) {\r\n        var maxIndex;\r\n        var manifest = manifestModel.getValue();\r\n        var period = manifest.Period_asArray[periodIdx];\r\n\r\n        maxIndex = findMaxBufferIndex(period, bufferType);\r\n        return maxIndex;\r\n    }\r\n\r\n    /**\r\n     * This method returns the current max index correlated to the max allowed bitrate\r\n     * explicitly set via the MediaPlayer's API setMaxAllowedBitrateFor.\r\n     *\r\n     * @param bufferType - String 'audio' or 'video',\r\n     * @param periodId - Make sure this is the period id not index.\r\n     * @return int\r\n     * @see {@link module:MediaPlayer#setMaxAllowedBitrateFor setMaxAllowedBitrateFor()}\r\n     * @see {@link DashMetrics#getMaxIndexForBufferType getMaxIndexForBufferType()}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getMaxAllowedIndexForBufferType(bufferType, periodId) {\r\n        var idx = 0;\r\n        var abrController = AbrController(context).getInstance();\r\n\r\n        if (abrController) {\r\n            idx = abrController.getTopQualityIndexFor(bufferType, periodId);\r\n        }\r\n\r\n        return idx;\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @returns {*}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getCurrentRepresentationSwitch(metrics) {\r\n        if (metrics === null) {\r\n            return null;\r\n        }\r\n\r\n        var repSwitch = metrics.RepSwitchList;\r\n        var repSwitchLength,\r\n            repSwitchLastIndex,\r\n            currentRepSwitch;\r\n\r\n        if (repSwitch === null || repSwitch.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        repSwitchLength = repSwitch.length;\r\n        repSwitchLastIndex = repSwitchLength - 1;\r\n\r\n        currentRepSwitch = repSwitch[repSwitchLastIndex];\r\n        return currentRepSwitch;\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @returns {*}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getLatestBufferLevelVO(metrics) {\r\n        if (metrics === null) {\r\n            return null;\r\n        }\r\n\r\n        var bufferLevel = metrics.BufferLevel;\r\n        if (bufferLevel === null || bufferLevel.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        return bufferLevel[bufferLevel.length - 1];\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @returns {number}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getCurrentBufferLevel(metrics) {\r\n        if (metrics === null) {\r\n            return 0;\r\n        }\r\n\r\n        var bufferLevel = metrics.BufferLevel;\r\n        if (bufferLevel === null || bufferLevel.length <= 0) {\r\n            return 0;\r\n        }\r\n\r\n        return bufferLevel[bufferLevel.length - 1].level / 1000;\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @returns {null|*|vo}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getRequestsQueue(metrics) {\r\n        return metrics.RequestsQueue;\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @returns {*}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getCurrentHttpRequest(metrics) {\r\n        if (metrics === null) {\r\n            return null;\r\n        }\r\n\r\n        var httpList = metrics.HttpList;\r\n        var currentHttpList = null;\r\n\r\n        var httpListLength,\r\n            httpListLastIndex;\r\n\r\n        if (httpList === null || httpList.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        httpListLength = httpList.length;\r\n        httpListLastIndex = httpListLength - 1;\r\n\r\n        while (httpListLastIndex >= 0) {\r\n            if (httpList[httpListLastIndex].responsecode) {\r\n                currentHttpList = httpList[httpListLastIndex];\r\n                break;\r\n            }\r\n            httpListLastIndex--;\r\n        }\r\n        return currentHttpList;\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @returns {*}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getHttpRequests(metrics) {\r\n        if (metrics === null) {\r\n            return [];\r\n        }\r\n\r\n        return !!metrics.HttpList ? metrics.HttpList : [];\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @returns {*}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getCurrentDroppedFrames(metrics) {\r\n        if (metrics === null) { return null; }\r\n\r\n        var droppedFrames = metrics.DroppedFrames;\r\n        var droppedFramesLength,\r\n            droppedFramesLastIndex,\r\n            currentDroppedFrames;\r\n\r\n        if (droppedFrames === null || droppedFrames.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        droppedFramesLength = droppedFrames.length;\r\n        droppedFramesLastIndex = droppedFramesLength - 1;\r\n        currentDroppedFrames = droppedFrames[droppedFramesLastIndex];\r\n\r\n        return currentDroppedFrames;\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @returns {*}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getCurrentSchedulingInfo(metrics) {\r\n        if (metrics === null) return null;\r\n\r\n        var schedulingInfo = metrics.SchedulingInfo;\r\n        var ln,\r\n            lastIdx,\r\n            currentSchedulingInfo;\r\n\r\n        if (schedulingInfo === null || schedulingInfo.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        ln = schedulingInfo.length;\r\n        lastIdx = ln - 1;\r\n\r\n        currentSchedulingInfo = schedulingInfo[lastIdx];\r\n\r\n        return currentSchedulingInfo;\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @returns {*}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getCurrentManifestUpdate(metrics) {\r\n        if (metrics === null) return null;\r\n\r\n        var manifestUpdate = metrics.ManifestUpdate;\r\n        var ln,\r\n            lastIdx,\r\n            currentManifestUpdate;\r\n\r\n        if (manifestUpdate === null || manifestUpdate.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        ln = manifestUpdate.length;\r\n        lastIdx = ln - 1;\r\n\r\n        currentManifestUpdate = manifestUpdate[lastIdx];\r\n\r\n        return currentManifestUpdate;\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @returns {*}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getCurrentDVRInfo(metrics) {\r\n\r\n        if (metrics === null) {\r\n            return null;\r\n        }\r\n\r\n        var dvrInfo = metrics.DVRInfo;\r\n        var dvrInfoLastIndex,\r\n            currentDVRInfo;\r\n\r\n        if (dvrInfo === null || dvrInfo.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        dvrInfoLastIndex = dvrInfo.length - 1;\r\n        currentDVRInfo = dvrInfo[dvrInfoLastIndex];\r\n\r\n        return currentDVRInfo;\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @param id\r\n     * @returns {*}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getLatestMPDRequestHeaderValueByID(metrics, id) {\r\n        var headers = {};\r\n        var httpRequestList,\r\n            httpRequest,\r\n            i;\r\n\r\n        if (metrics === null) {\r\n            return null;\r\n        }\r\n\r\n        httpRequestList = getHttpRequests(metrics);\r\n\r\n        for (i = httpRequestList.length - 1; i >= 0; i--) {\r\n            httpRequest = httpRequestList[i];\r\n\r\n            if (httpRequest.type === HTTPRequest.MPD_TYPE) {\r\n                headers = parseResponseHeaders(httpRequest._responseHeaders);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return headers[id] === undefined ? null :  headers[id];\r\n    }\r\n\r\n    /**\r\n     * @param metrics\r\n     * @param id\r\n     * @returns {*}\r\n     * @memberof module:DashMetrics\r\n     * @instance\r\n     */\r\n    function getLatestFragmentRequestHeaderValueByID(metrics, id) {\r\n\r\n        if (metrics === null) return null;\r\n\r\n        var httpRequest = getCurrentHttpRequest(metrics);\r\n        var headers;\r\n\r\n        if (httpRequest === null || httpRequest._responseHeaders === null) return null;\r\n\r\n        headers = parseResponseHeaders(httpRequest._responseHeaders);\r\n        return headers[id] === undefined ? null :  headers[id];\r\n    }\r\n\r\n    function parseResponseHeaders(headerStr) {\r\n        var headers = {};\r\n        if (!headerStr) {\r\n            return headers;\r\n        }\r\n        var headerPairs = headerStr.split('\\u000d\\u000a');\r\n        for (var i = 0, ilen = headerPairs.length; i < ilen; i++) {\r\n            var headerPair = headerPairs[i];\r\n            var index = headerPair.indexOf('\\u003a\\u0020');\r\n            if (index > 0) {\r\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    function findRepresentationIndex(period, representationId) {\r\n        var adaptationSet,\r\n            adaptationSetArray,\r\n            representation,\r\n            representationArray,\r\n            adaptationSetArrayIndex,\r\n            representationArrayIndex;\r\n\r\n        adaptationSetArray = period.AdaptationSet_asArray;\r\n        for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\r\n            adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\r\n            representationArray = adaptationSet.Representation_asArray;\r\n            for (representationArrayIndex = 0; representationArrayIndex < representationArray.length; representationArrayIndex = representationArrayIndex + 1) {\r\n                representation = representationArray[representationArrayIndex];\r\n                if (representationId === representation.id) {\r\n                    return representationArrayIndex;\r\n                }\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function findRepresentation(period, representationId) {\r\n        var adaptationSet,\r\n            adaptationSetArray,\r\n            representation,\r\n            representationArray,\r\n            adaptationSetArrayIndex,\r\n            representationArrayIndex;\r\n\r\n        adaptationSetArray = period.AdaptationSet_asArray;\r\n        for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\r\n            adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\r\n            representationArray = adaptationSet.Representation_asArray;\r\n            for (representationArrayIndex = 0; representationArrayIndex < representationArray.length; representationArrayIndex = representationArrayIndex + 1) {\r\n                representation = representationArray[representationArrayIndex];\r\n                if (representationId === representation.id) {\r\n                    return representation;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function adaptationIsType(adaptation, bufferType) {\r\n        return DashManifestModel(context).getInstance().getIsTypeOf(adaptation, bufferType);\r\n    }\r\n\r\n    function findMaxBufferIndex(period, bufferType) {\r\n        var adaptationSet,\r\n            adaptationSetArray,\r\n            representationArray,\r\n            adaptationSetArrayIndex;\r\n\r\n        if (!period || !bufferType) return -1;\r\n\r\n        adaptationSetArray = period.AdaptationSet_asArray;\r\n        for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\r\n            adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\r\n            representationArray = adaptationSet.Representation_asArray;\r\n            if (adaptationIsType(adaptationSet, bufferType)) {\r\n                return representationArray.length;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    instance = {\r\n        getBandwidthForRepresentation: getBandwidthForRepresentation,\r\n        getIndexForRepresentation: getIndexForRepresentation,\r\n        getMaxIndexForBufferType: getMaxIndexForBufferType,\r\n        getMaxAllowedIndexForBufferType: getMaxAllowedIndexForBufferType,\r\n        getCurrentRepresentationSwitch: getCurrentRepresentationSwitch,\r\n        getLatestBufferLevelVO: getLatestBufferLevelVO,\r\n        getCurrentBufferLevel: getCurrentBufferLevel,\r\n        getCurrentHttpRequest: getCurrentHttpRequest,\r\n        getHttpRequests: getHttpRequests,\r\n        getCurrentDroppedFrames: getCurrentDroppedFrames,\r\n        getCurrentSchedulingInfo: getCurrentSchedulingInfo,\r\n        getCurrentDVRInfo: getCurrentDVRInfo,\r\n        getCurrentManifestUpdate: getCurrentManifestUpdate,\r\n        getLatestFragmentRequestHeaderValueByID: getLatestFragmentRequestHeaderValueByID,\r\n        getLatestMPDRequestHeaderValueByID: getLatestMPDRequestHeaderValueByID,\r\n        getRequestsQueue: getRequestsQueue\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDashMetrics.__dashjs_factory_name = 'DashMetrics';\r\nexport default FactoryMaker.getSingletonFactory(DashMetrics);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ErrorHandler from '../streaming/utils/ErrorHandler.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\nimport Debug from '../core/Debug.js';\r\nimport ObjectIron from '../../externals/objectiron.js';\r\nimport X2JS from '../../externals/xml2json.js';\r\n\r\nfunction DashParser(/*config*/) {\r\n\r\n    const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\r\n    const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\r\n    const SECONDS_IN_DAY = 24 * 60 * 60;\r\n    const SECONDS_IN_HOUR = 60 * 60;\r\n    const SECONDS_IN_MIN = 60;\r\n    const MINUTES_IN_HOUR = 60;\r\n    const MILLISECONDS_IN_SECONDS = 1000;\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n\r\n    let instance,\r\n        durationRegex,\r\n        datetimeRegex,\r\n        numericRegex,\r\n        httpOrHttpsRegex,\r\n        originRegex,\r\n        matchers;\r\n\r\n    function setup() {\r\n\r\n        durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\r\n        datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+-])([0-9]{2})([0-9]{2}))?/;\r\n        numericRegex = /^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/;\r\n        httpOrHttpsRegex = /^https?:\\/\\//i;\r\n        originRegex = /^(https?:\\/\\/[^\\/]+)\\/?/i;\r\n        //TODO-Refactor clean this up and move into its own util or somewhere else.\r\n        matchers = [\r\n            {\r\n                type: 'duration',\r\n                test: function (attr) {\r\n\r\n                    var attributeList = [\r\n                        'minBufferTime', 'mediaPresentationDuration',\r\n                        'minimumUpdatePeriod', 'timeShiftBufferDepth', 'maxSegmentDuration',\r\n                        'maxSubsegmentDuration', 'suggestedPresentationDelay', 'start',\r\n                        'starttime', 'duration'\r\n                    ];\r\n                    var len = attributeList.length;\r\n\r\n                    for (var i = 0; i < len; i++) {\r\n                        if (attr.nodeName === attributeList[i]) {\r\n                            return durationRegex.test(attr.value);\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                converter: function (str) {\r\n                    //str = \"P10Y10M10DT10H10M10.1S\";\r\n                    var match = durationRegex.exec(str);\r\n                    var result = (parseFloat(match[2] || 0) * SECONDS_IN_YEAR +\r\n                        parseFloat(match[4] || 0) * SECONDS_IN_MONTH +\r\n                        parseFloat(match[6] || 0) * SECONDS_IN_DAY +\r\n                        parseFloat(match[8] || 0) * SECONDS_IN_HOUR +\r\n                        parseFloat(match[10] || 0) * SECONDS_IN_MIN +\r\n                        parseFloat(match[12] || 0));\r\n\r\n                    if (match[1] !== undefined) {\r\n                        result = -result;\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            },\r\n            {\r\n                type: 'datetime',\r\n                test: function (attr) {\r\n                    return datetimeRegex.test(attr.value);\r\n                },\r\n                converter: function (str) {\r\n                    var match = datetimeRegex.exec(str);\r\n                    var utcDate;\r\n                    // If the string does not contain a timezone offset different browsers can interpret it either\r\n                    // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\r\n                    // all browsers\r\n                    utcDate = Date.UTC(\r\n                        parseInt(match[1], 10),\r\n                        parseInt(match[2], 10) - 1, // months start from zero\r\n                        parseInt(match[3], 10),\r\n                        parseInt(match[4], 10),\r\n                        parseInt(match[5], 10),\r\n                        (match[6] && parseInt(match[6], 10) || 0),\r\n                        (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0);\r\n                    // If the date has timezone offset take it into account as well\r\n                    if (match[9] && match[10]) {\r\n                        var timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\r\n                        utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\r\n                    }\r\n\r\n                    return new Date(utcDate);\r\n                }\r\n            },\r\n            {\r\n                type: 'numeric',\r\n                test: function (attr) {\r\n                    return numericRegex.test(attr.value);\r\n                },\r\n                converter: function (str) {\r\n                    return parseFloat(str);\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n\r\n\r\n    function getCommonValuesMap() {\r\n        var adaptationSet,\r\n            representation,\r\n            subRepresentation,\r\n            common;\r\n\r\n        common = [\r\n            {\r\n                name: 'profiles',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'width',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'height',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'sar',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'frameRate',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'audioSamplingRate',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'mimeType',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'segmentProfiles',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'codecs',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'maximumSAPPeriod',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'startsWithSap',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'maxPlayoutRate',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'codingDependency',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'scanType',\r\n                merge: false\r\n            },\r\n            {\r\n                name: 'FramePacking',\r\n                merge: true\r\n            },\r\n            {\r\n                name: 'AudioChannelConfiguration',\r\n                merge: true\r\n            },\r\n            {\r\n                name: 'ContentProtection',\r\n                merge: true\r\n            }\r\n        ];\r\n\r\n        adaptationSet = {};\r\n        adaptationSet.name = 'AdaptationSet';\r\n        adaptationSet.isRoot = false;\r\n        adaptationSet.isArray = true;\r\n        adaptationSet.parent = null;\r\n        adaptationSet.children = [];\r\n        adaptationSet.properties = common;\r\n\r\n        representation = {};\r\n        representation.name = 'Representation';\r\n        representation.isRoot = false;\r\n        representation.isArray = true;\r\n        representation.parent = adaptationSet;\r\n        representation.children = [];\r\n        representation.properties = common;\r\n        adaptationSet.children.push(representation);\r\n\r\n        subRepresentation = {};\r\n        subRepresentation.name = 'SubRepresentation';\r\n        subRepresentation.isRoot = false;\r\n        subRepresentation.isArray = true;\r\n        subRepresentation.parent = representation;\r\n        subRepresentation.children = [];\r\n        subRepresentation.properties = common;\r\n        representation.children.push(subRepresentation);\r\n\r\n        return adaptationSet;\r\n    }\r\n\r\n    function getSegmentValuesMap() {\r\n        var period,\r\n            adaptationSet,\r\n            representation,\r\n            common;\r\n\r\n        common = [\r\n            {\r\n                name: 'SegmentBase',\r\n                merge: true\r\n            },\r\n            {\r\n                name: 'SegmentTemplate',\r\n                merge: true\r\n            },\r\n            {\r\n                name: 'SegmentList',\r\n                merge: true\r\n            }\r\n        ];\r\n\r\n        period = {};\r\n        period.name = 'Period';\r\n        period.isRoot = false;\r\n        period.isArray = true;\r\n        period.parent = null;\r\n        period.children = [];\r\n        period.properties = common;\r\n\r\n        adaptationSet = {};\r\n        adaptationSet.name = 'AdaptationSet';\r\n        adaptationSet.isRoot = false;\r\n        adaptationSet.isArray = true;\r\n        adaptationSet.parent = period;\r\n        adaptationSet.children = [];\r\n        adaptationSet.properties = common;\r\n        period.children.push(adaptationSet);\r\n\r\n        representation = {};\r\n        representation.name = 'Representation';\r\n        representation.isRoot = false;\r\n        representation.isArray = true;\r\n        representation.parent = adaptationSet;\r\n        representation.children = [];\r\n        representation.properties = common;\r\n        adaptationSet.children.push(representation);\r\n\r\n        return period;\r\n    }\r\n\r\n    function getDashMap() {\r\n        var result = [];\r\n\r\n        result.push(getCommonValuesMap());\r\n        result.push(getSegmentValuesMap());\r\n\r\n        return result;\r\n    }\r\n\r\n    function parse(data, xlinkController) {\r\n\r\n        var converter = new X2JS(matchers, '', true);\r\n        var iron = new ObjectIron(getDashMap());\r\n        var start = new Date();\r\n\r\n        var manifest;\r\n        var json = null;\r\n        var ironed = null;\r\n\r\n        try {\r\n            //log(\"Converting from XML.\");\r\n            manifest = converter.xml_str2json(data);\r\n\r\n            if (!manifest) {\r\n                throw 'parser error';\r\n            }\r\n\r\n            json = new Date();\r\n\r\n            if (manifest.hasOwnProperty('Location')) {\r\n                // for now, do not support multiple Locations -\r\n                // just set Location to the first Location.\r\n                manifest.Location = manifest.Location_asArray[0];\r\n            }\r\n\r\n            //log(\"Flatten manifest properties.\");\r\n            iron.run(manifest);\r\n            ironed = new Date();\r\n\r\n            xlinkController.setMatchers(matchers);\r\n            xlinkController.setIron(iron);\r\n\r\n            log('Parsing complete: ( xml2json: ' + (json.getTime() - start.getTime()) + 'ms, objectiron: ' + (ironed.getTime() - json.getTime()) + 'ms, total: ' + ((ironed.getTime() - start.getTime()) / 1000) + 's)');\r\n        } catch (err) {\r\n            ErrorHandler(context).getInstance().manifestError('parsing the manifest failed', 'parse', data);\r\n            return null;\r\n        }\r\n        return manifest;\r\n    }\r\n\r\n    instance = {\r\n        parse: parse\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nDashParser.__dashjs_factory_name = 'DashParser';\r\nexport default FactoryMaker.getClassFactory(DashParser);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport RequestModifier from '../streaming/utils/RequestModifier.js';\r\nimport Segment from './vo/Segment.js';\r\nimport Error from '../streaming/vo/Error.js';\r\nimport ErrorHandler from '../streaming/utils/ErrorHandler.js';\r\nimport Events from '../core/events/Events.js';\r\nimport EventBus from '../core/EventBus.js';\r\nimport BoxParser from '../streaming/utils/BoxParser.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\nimport Debug from '../core/Debug.js';\r\n\r\nfunction SegmentBaseLoader() {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        errHandler,\r\n        boxParser,\r\n        requestModifier,\r\n        baseURLController;\r\n\r\n    function initialize() {\r\n        errHandler = ErrorHandler(context).getInstance();\r\n        boxParser = BoxParser(context).getInstance();\r\n        requestModifier = RequestModifier(context).getInstance();\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (config.baseURLController) {\r\n            baseURLController = config.baseURLController;\r\n        }\r\n    }\r\n\r\n    function loadInitialization(representation, loadingInfo) {\r\n        var needFailureReport = true;\r\n        var initRange = null;\r\n        var isoFile = null;\r\n        var request = new XMLHttpRequest();\r\n        var baseUrl = baseURLController.resolve(representation.path);\r\n        var info = loadingInfo || {\r\n            url: baseUrl ? baseUrl.url : undefined,\r\n            range: {\r\n                start: 0,\r\n                end: 1500\r\n            },\r\n            searching: false,\r\n            bytesLoaded: 0,\r\n            bytesToLoad: 1500,\r\n            request: request\r\n        };\r\n\r\n        log('Start searching for initialization.');\r\n\r\n        request.onload = function () {\r\n            if (request.status < 200 || request.status > 299) return;\r\n\r\n            needFailureReport = false;\r\n\r\n            info.bytesLoaded = info.range.end;\r\n            isoFile = boxParser.parse(request.response);\r\n            initRange = findInitRange(isoFile);\r\n\r\n            if (initRange) {\r\n                representation.range = initRange;\r\n                representation.initialization = info.url;\r\n                eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\r\n            } else {\r\n                info.range.end = info.bytesLoaded + info.bytesToLoad;\r\n                loadInitialization(representation, info);\r\n            }\r\n\r\n        };\r\n\r\n        request.onloadend = request.onerror = function () {\r\n            if (!needFailureReport) return;\r\n            needFailureReport = false;\r\n\r\n            errHandler.downloadError('initialization', info.url, request);\r\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\r\n        };\r\n\r\n        sendRequest(request, info);\r\n        log('Perform init search: ' + info.url);\r\n    }\r\n\r\n    function loadSegments(representation, type, range, loadingInfo, callback) {\r\n        if (range && (range.start === undefined || range.end === undefined)) {\r\n            var parts = range ? range.toString().split('-') : null;\r\n            range = parts ? {start: parseFloat(parts[0]), end: parseFloat(parts[1])} : null;\r\n        }\r\n\r\n        callback = !callback ? onLoaded : callback;\r\n        var needFailureReport = true;\r\n        var isoFile = null;\r\n        var sidx = null;\r\n        var hasRange = !!range;\r\n        var request = new XMLHttpRequest();\r\n        var baseUrl = baseURLController.resolve(representation.path);\r\n        var info = {\r\n            url: baseUrl ? baseUrl.url : undefined,\r\n            range: hasRange ? range : { start: 0, end: 1500 },\r\n            searching: !hasRange,\r\n            bytesLoaded: loadingInfo ? loadingInfo.bytesLoaded : 0,\r\n            bytesToLoad: 1500,\r\n            request: request\r\n        };\r\n\r\n        request.onload = function () {\r\n            if (request.status < 200 || request.status > 299) return;\r\n\r\n            var extraBytes = info.bytesToLoad;\r\n            var loadedLength = request.response.byteLength;\r\n\r\n            needFailureReport = false;\r\n            info.bytesLoaded = info.range.end - info.range.start;\r\n            isoFile = boxParser.parse(request.response);\r\n            sidx = isoFile.getBox('sidx');\r\n\r\n            if (!sidx || !sidx.isComplete) {\r\n                if (sidx) {\r\n                    info.range.start = sidx.offset || info.range.start;\r\n                    info.range.end = info.range.start + (sidx.size || extraBytes);\r\n                } else if (loadedLength < info.bytesLoaded) {\r\n                    // if we have reached a search limit or if we have reached the end of the file we have to stop trying to find sidx\r\n                    callback(null, representation, type);\r\n                    return;\r\n                } else {\r\n                    var lastBox = isoFile.getLastBox();\r\n\r\n                    if (lastBox && lastBox.size) {\r\n                        info.range.start = lastBox.offset + lastBox.size;\r\n                        info.range.end = info.range.start + extraBytes;\r\n                    } else {\r\n                        info.range.end += extraBytes;\r\n                    }\r\n                }\r\n                loadSegments(representation, type, info.range, info, callback);\r\n            } else {\r\n                var ref = sidx.references;\r\n                var loadMultiSidx,\r\n                    segments;\r\n\r\n                if (ref !== null && ref !== undefined && ref.length > 0) {\r\n                    loadMultiSidx = (ref[0].reference_type === 1);\r\n                }\r\n\r\n                if (loadMultiSidx) {\r\n                    log('Initiate multiple SIDX load.');\r\n                    info.range.end = info.range.start + sidx.size;\r\n\r\n                    var j, len, ss, se, r;\r\n                    var segs = [];\r\n                    var count = 0;\r\n                    var offset = (sidx.offset || info.range.start) + sidx.size;\r\n                    var tmpCallback = function (result) {\r\n                        if (result) {\r\n                            segs = segs.concat(result);\r\n                            count++;\r\n\r\n                            if (count >= len) {\r\n                                callback(segs, representation, type);\r\n                            }\r\n                        } else {\r\n                            callback(null, representation, type);\r\n                        }\r\n                    };\r\n\r\n                    for (j = 0, len = ref.length; j < len; j++) {\r\n                        ss = offset;\r\n                        se = offset + ref[j].referenced_size - 1;\r\n                        offset = offset + ref[j].referenced_size;\r\n                        r = {start: ss, end: se};\r\n                        loadSegments(representation, null, r, info, tmpCallback);\r\n                    }\r\n\r\n                } else {\r\n                    log('Parsing segments from SIDX.');\r\n                    segments = getSegmentsForSidx(sidx, info);\r\n                    callback(segments, representation, type);\r\n                }\r\n            }\r\n        };\r\n\r\n        request.onloadend = request.onerror = function () {\r\n            if (!needFailureReport) return;\r\n\r\n            needFailureReport = false;\r\n            errHandler.downloadError('SIDX', info.url, request);\r\n            callback(null, representation, type);\r\n        };\r\n\r\n        sendRequest(request, info);\r\n        log('Perform SIDX load: ' + info.url);\r\n    }\r\n\r\n    function reset() {\r\n        errHandler = null;\r\n        boxParser = null;\r\n        requestModifier = null;\r\n        log = null;\r\n    }\r\n\r\n    function getSegmentsForSidx(sidx, info) {\r\n\r\n        var refs = sidx.references;\r\n        var len = refs.length;\r\n        var timescale = sidx.timescale;\r\n        var time = sidx.earliest_presentation_time;\r\n        var start = info.range.start + sidx.first_offset + sidx.size;\r\n        var segments = [];\r\n        var segment,\r\n            end,\r\n            duration,\r\n            size;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            duration = refs[i].subsegment_duration;\r\n            size = refs[i].referenced_size;\r\n\r\n            segment = new Segment();\r\n            segment.duration = duration;\r\n            segment.media = info.url;\r\n            segment.startTime = time;\r\n            segment.timescale = timescale;\r\n            end = start + size - 1;\r\n            segment.mediaRange = start + '-' + end;\r\n            segments.push(segment);\r\n            time += duration;\r\n            start += size;\r\n        }\r\n\r\n        return segments;\r\n    }\r\n\r\n    function findInitRange(isoFile) {\r\n        var ftyp = isoFile.getBox('ftyp');\r\n        var moov = isoFile.getBox('moov');\r\n\r\n        var initRange = null;\r\n        var start,\r\n            end;\r\n\r\n        log('Searching for initialization.');\r\n\r\n        if (moov && moov.isComplete) {\r\n            start = ftyp ? ftyp.offset : moov.offset;\r\n            end = moov.offset + moov.size - 1;\r\n            initRange = start + '-' + end;\r\n\r\n            log('Found the initialization.  Range: ' + initRange);\r\n        }\r\n\r\n        return initRange;\r\n    }\r\n\r\n    function sendRequest(request, info) {\r\n        if (!info.url) {\r\n            return;\r\n        }\r\n\r\n        request.open('GET', requestModifier.modifyRequestURL(info.url));\r\n        request.responseType = 'arraybuffer';\r\n        request.setRequestHeader('Range', 'bytes=' + info.range.start + '-' + info.range.end);\r\n        request = requestModifier.modifyRequestHeader(request);\r\n        request.send(null);\r\n    }\r\n\r\n    function onLoaded(segments, representation, type) {\r\n        if (segments) {\r\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: segments, representation: representation, mediaType: type});\r\n        } else {\r\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: null, representation: representation, mediaType: type, error: new Error(null, 'error loading segments', null)});\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        setConfig: setConfig,\r\n        initialize: initialize,\r\n        loadInitialization: loadInitialization,\r\n        loadSegments: loadSegments,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nSegmentBaseLoader.__dashjs_factory_name = 'SegmentBaseLoader';\r\nexport default FactoryMaker.getSingletonFactory(SegmentBaseLoader);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport DashManifestModel from '../models/DashManifestModel.js';\r\nimport DashMetrics from '../DashMetrics.js';\r\nimport TimelineConverter from '../utils/TimelineConverter.js';\r\nimport AbrController from '../../streaming/controllers/AbrController.js';\r\nimport PlaybackController from '../../streaming/controllers/PlaybackController.js';\r\nimport StreamController from '../../streaming/controllers/StreamController.js';\r\nimport ManifestModel from '../../streaming/models/ManifestModel.js';\r\nimport MetricsModel from '../../streaming/models/MetricsModel.js';\r\nimport MediaPlayerModel from '../../streaming/models/MediaPlayerModel.js';\r\nimport DOMStorage from '../../streaming/utils/DOMStorage.js';\r\nimport Error from '../../streaming/vo/Error.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction RepresentationController() {\r\n\r\n    const SEGMENTS_UPDATE_FAILED_ERROR_CODE = 1;\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        data,\r\n        dataIndex,\r\n        updating,\r\n        availableRepresentations,\r\n        currentRepresentation,\r\n        streamProcessor,\r\n        abrController,\r\n        indexHandler,\r\n        streamController,\r\n        playbackController,\r\n        manifestModel,\r\n        metricsModel,\r\n        domStorage,\r\n        timelineConverter,\r\n        dashManifestModel,\r\n        dashMetrics,\r\n        mediaPlayerModel;\r\n\r\n    function setup() {\r\n        data = null;\r\n        dataIndex = -1;\r\n        updating = true;\r\n        availableRepresentations = [];\r\n\r\n        abrController = AbrController(context).getInstance();\r\n        streamController = StreamController(context).getInstance();\r\n        playbackController = PlaybackController(context).getInstance();\r\n        manifestModel = ManifestModel(context).getInstance();\r\n        metricsModel = MetricsModel(context).getInstance();\r\n        domStorage = DOMStorage(context).getInstance();\r\n        timelineConverter = TimelineConverter(context).getInstance();\r\n        dashManifestModel = DashManifestModel(context).getInstance();\r\n        dashMetrics = DashMetrics(context).getInstance();\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n\r\n        eventBus.on(Events.QUALITY_CHANGED, onQualityChanged, instance);\r\n        eventBus.on(Events.REPRESENTATION_UPDATED, onRepresentationUpdated, instance);\r\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, instance);\r\n        eventBus.on(Events.BUFFER_LEVEL_UPDATED, onBufferLevelUpdated, instance);\r\n        eventBus.on(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, instance);\r\n    }\r\n\r\n    function setConfig(config) {\r\n        // allow the abrController created in setup to be overidden\r\n        if (config.abrController) {\r\n            abrController = config.abrController;\r\n        }\r\n    }\r\n\r\n    function initialize(StreamProcessor) {\r\n        streamProcessor = StreamProcessor;\r\n        indexHandler = streamProcessor.getIndexHandler();\r\n    }\r\n\r\n    function getStreamProcessor() {\r\n        return streamProcessor;\r\n    }\r\n\r\n    function getData() {\r\n        return data;\r\n    }\r\n\r\n    function getDataIndex() {\r\n        return dataIndex;\r\n    }\r\n\r\n    function isUpdating() {\r\n        return updating;\r\n    }\r\n\r\n    function getCurrentRepresentation() {\r\n        return currentRepresentation;\r\n    }\r\n\r\n    function reset() {\r\n\r\n        eventBus.off(Events.QUALITY_CHANGED, onQualityChanged, instance);\r\n        eventBus.off(Events.REPRESENTATION_UPDATED, onRepresentationUpdated, instance);\r\n        eventBus.off(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, instance);\r\n        eventBus.off(Events.BUFFER_LEVEL_UPDATED, onBufferLevelUpdated, instance);\r\n        eventBus.off(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, instance);\r\n\r\n        data = null;\r\n        dataIndex = -1;\r\n        updating = true;\r\n        availableRepresentations = [];\r\n        abrController = null;\r\n        streamController = null;\r\n        playbackController = null;\r\n        manifestModel = null;\r\n        metricsModel = null;\r\n        domStorage = null;\r\n        timelineConverter = null;\r\n        dashManifestModel = null;\r\n        dashMetrics = null;\r\n        mediaPlayerModel = null;\r\n\r\n    }\r\n\r\n    function updateData(dataValue, adaptation, type) {\r\n        var quality,\r\n            averageThroughput;\r\n\r\n        var bitrate = null;\r\n        var streamInfo = streamProcessor.getStreamInfo();\r\n        var maxQuality = abrController.getTopQualityIndexFor(type, streamInfo.id);\r\n\r\n        updating = true;\r\n        eventBus.trigger(Events.DATA_UPDATE_STARTED, {sender: this});\r\n\r\n        availableRepresentations = updateRepresentations(adaptation);\r\n\r\n        if (data === null && type !== 'fragmentedText') {\r\n            averageThroughput = abrController.getAverageThroughput(type);\r\n            bitrate = averageThroughput || abrController.getInitialBitrateFor(type, streamInfo);\r\n            quality = abrController.getQualityForBitrate(streamProcessor.getMediaInfo(), bitrate);\r\n        } else {\r\n            quality = abrController.getQualityFor(type, streamInfo);\r\n        }\r\n\r\n        if (quality > maxQuality) {\r\n            quality = maxQuality;\r\n        }\r\n\r\n        currentRepresentation = getRepresentationForQuality(quality);\r\n        data = dataValue;\r\n\r\n        if (type !== 'video' && type !== 'audio' && type !== 'fragmentedText') {\r\n            updating = false;\r\n            eventBus.trigger(Events.DATA_UPDATE_COMPLETED, {sender: this, data: data, currentRepresentation: currentRepresentation});\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < availableRepresentations.length; i++) {\r\n            indexHandler.updateRepresentation(availableRepresentations[i], true);\r\n        }\r\n    }\r\n\r\n    function addRepresentationSwitch() {\r\n        var now = new Date();\r\n        var currentRepresentation = getCurrentRepresentation();\r\n        var currentVideoTimeMs = playbackController.getTime() * 1000;\r\n\r\n        metricsModel.addRepresentationSwitch(currentRepresentation.adaptation.type, now, currentVideoTimeMs, currentRepresentation.id);\r\n    }\r\n\r\n    function addDVRMetric() {\r\n        var range = timelineConverter.calcSegmentAvailabilityRange(currentRepresentation, streamProcessor.isDynamic());\r\n        metricsModel.addDVRInfo(streamProcessor.getType(), playbackController.getTime(), streamProcessor.getStreamInfo().manifestInfo, range);\r\n    }\r\n\r\n    function getRepresentationForQuality(quality) {\r\n        return availableRepresentations[quality];\r\n    }\r\n\r\n    function getQualityForRepresentation(representation) {\r\n        return availableRepresentations.indexOf(representation);\r\n    }\r\n\r\n    function isAllRepresentationsUpdated() {\r\n        for (var i = 0, ln = availableRepresentations.length; i < ln; i++) {\r\n            var segmentInfoType = availableRepresentations[i].segmentInfoType;\r\n            if (availableRepresentations[i].segmentAvailabilityRange === null || availableRepresentations[i].initialization === null ||\r\n                    ((segmentInfoType === 'SegmentBase' || segmentInfoType === 'BaseURL') && !availableRepresentations[i].segments)\r\n            ) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function updateRepresentations(adaptation) {\r\n        var reps;\r\n        var manifest = manifestModel.getValue();\r\n\r\n        dataIndex = dashManifestModel.getIndexForAdaptation(data, manifest, adaptation.period.index);\r\n        reps = dashManifestModel.getRepresentationsForAdaptation(manifest, adaptation);\r\n\r\n        return reps;\r\n    }\r\n\r\n    function updateAvailabilityWindow(isDynamic) {\r\n        var rep;\r\n\r\n        for (var i = 0, ln = availableRepresentations.length; i < ln; i++) {\r\n            rep = availableRepresentations[i];\r\n            rep.segmentAvailabilityRange = timelineConverter.calcSegmentAvailabilityRange(rep, isDynamic);\r\n        }\r\n    }\r\n\r\n    function resetAvailabilityWindow() {\r\n        availableRepresentations.forEach(rep => {\r\n            rep.segmentAvailabilityRange = null;\r\n        });\r\n    }\r\n\r\n    function postponeUpdate(postponeTimePeriod) {\r\n        var delay = postponeTimePeriod;\r\n        var update = function () {\r\n            if (isUpdating()) return;\r\n\r\n            updating = true;\r\n            eventBus.trigger(Events.DATA_UPDATE_STARTED, { sender: instance });\r\n\r\n            // clear the segmentAvailabilityRange for all reps.\r\n            // this ensures all are updated before the live edge search starts\r\n            resetAvailabilityWindow();\r\n\r\n            for (var i = 0; i < availableRepresentations.length; i++) {\r\n                indexHandler.updateRepresentation(availableRepresentations[i], true);\r\n            }\r\n        };\r\n\r\n        updating = false;\r\n        eventBus.trigger(Events.AST_IN_FUTURE, { delay: delay });\r\n        setTimeout(update, delay);\r\n    }\r\n\r\n    function onRepresentationUpdated(e) {\r\n        if (e.sender.getStreamProcessor() !== streamProcessor || !isUpdating()) return;\r\n\r\n        var r = e.representation;\r\n        var streamMetrics = metricsModel.getMetricsFor('stream');\r\n        var metrics = metricsModel.getMetricsFor(getCurrentRepresentation().adaptation.type);\r\n        var manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(streamMetrics);\r\n        var alreadyAdded = false;\r\n        var postponeTimePeriod = 0;\r\n        var repInfo;\r\n        var err;\r\n        var repSwitch;\r\n\r\n        if (r.adaptation.period.mpd.manifest.type == 'dynamic')\r\n        {\r\n            let segmentAvailabilityTimePeriod = r.segmentAvailabilityRange.end - r.segmentAvailabilityRange.start;\r\n            // We must put things to sleep unless till e.g. the startTime calculation in ScheduleController.onLiveEdgeSearchCompleted fall after the segmentAvailabilityRange.start\r\n            let liveDelay = playbackController.computeLiveDelay(currentRepresentation.segmentDuration, streamProcessor.getStreamInfo().manifestInfo.DVRWindowSize);\r\n            postponeTimePeriod = (liveDelay - segmentAvailabilityTimePeriod) * 1000;\r\n        }\r\n\r\n        if (postponeTimePeriod > 0) {\r\n            addDVRMetric();\r\n            postponeUpdate(postponeTimePeriod);\r\n            err = new Error(SEGMENTS_UPDATE_FAILED_ERROR_CODE, 'Segments update failed', null);\r\n            eventBus.trigger(Events.DATA_UPDATE_COMPLETED, {sender: this, data: data, currentRepresentation: currentRepresentation, error: err});\r\n\r\n            return;\r\n        }\r\n\r\n        if (manifestUpdateInfo) {\r\n            for (var i = 0; i < manifestUpdateInfo.trackInfo.length; i++) {\r\n                repInfo = manifestUpdateInfo.trackInfo[i];\r\n                if (repInfo.index === r.index && repInfo.mediaType === streamProcessor.getType()) {\r\n                    alreadyAdded = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!alreadyAdded) {\r\n                metricsModel.addManifestUpdateRepresentationInfo(manifestUpdateInfo, r.id, r.index, r.adaptation.period.index,\r\n                        streamProcessor.getType(),r.presentationTimeOffset, r.startNumber, r.segmentInfoType);\r\n            }\r\n        }\r\n\r\n        if (isAllRepresentationsUpdated()) {\r\n            updating = false;\r\n            abrController.setPlaybackQuality(streamProcessor.getType(), streamProcessor.getStreamInfo(), getQualityForRepresentation(currentRepresentation));\r\n            metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {latency: currentRepresentation.segmentAvailabilityRange.end - playbackController.getTime()});\r\n\r\n            repSwitch = dashMetrics.getCurrentRepresentationSwitch(metrics);\r\n\r\n            if (!repSwitch) {\r\n                addRepresentationSwitch();\r\n            }\r\n\r\n            eventBus.trigger(Events.DATA_UPDATE_COMPLETED, {sender: this, data: data, currentRepresentation: currentRepresentation});\r\n        }\r\n    }\r\n\r\n    function onWallclockTimeUpdated(e) {\r\n        if (e.isDynamic) {\r\n            updateAvailabilityWindow(e.isDynamic);\r\n        }\r\n    }\r\n\r\n    function onLiveEdgeSearchCompleted(e) {\r\n        if (e.error) return;\r\n\r\n        updateAvailabilityWindow(true);\r\n        indexHandler.updateRepresentation(currentRepresentation, false);\r\n\r\n        // we need to update checkTime after we have found the live edge because its initial value\r\n        // does not take into account clientServerTimeShift\r\n        var manifest = manifestModel.getValue();\r\n        var period = currentRepresentation.adaptation.period;\r\n        var streamInfo = streamController.getActiveStreamInfo();\r\n\r\n        if (streamInfo.isLast) {\r\n            period.mpd.checkTime = dashManifestModel.getCheckTime(manifest, period);\r\n            period.duration = dashManifestModel.getEndTimeForLastPeriod(manifestModel.getValue(), period) - period.start;\r\n            streamInfo.duration = period.duration;\r\n        }\r\n    }\r\n\r\n    function onBufferLevelUpdated(e) {\r\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\r\n        addDVRMetric();\r\n    }\r\n\r\n    function onQualityChanged(e) {\r\n        if (e.mediaType !== streamProcessor.getType() || streamProcessor.getStreamInfo().id !== e.streamInfo.id) return;\r\n\r\n        if (e.oldQuality !== e.newQuality) {\r\n            currentRepresentation = getRepresentationForQuality(e.newQuality);\r\n            domStorage.setSavedBitrateSettings(e.mediaType, currentRepresentation.bandwidth);\r\n            addRepresentationSwitch();\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        setConfig: setConfig,\r\n        getData: getData,\r\n        getDataIndex: getDataIndex,\r\n        isUpdating: isUpdating,\r\n        updateData: updateData,\r\n        getStreamProcessor: getStreamProcessor,\r\n        getCurrentRepresentation: getCurrentRepresentation,\r\n        getRepresentationForQuality: getRepresentationForQuality,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nRepresentationController.__dashjs_factory_name = 'RepresentationController';\r\nexport default FactoryMaker.getClassFactory(RepresentationController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport Representation from '../vo/Representation.js';\r\nimport AdaptationSet from '../vo/AdaptationSet.js';\r\nimport Period from '../vo/Period.js';\r\nimport Mpd from '../vo/Mpd.js';\r\nimport UTCTiming from '../vo/UTCTiming.js';\r\nimport TimelineConverter from '../utils/TimelineConverter.js';\r\nimport Event from '../vo/Event.js';\r\nimport BaseURL from '../vo/BaseURL.js';\r\nimport EventStream from '../vo/EventStream.js';\r\nimport URLUtils from '../../streaming/utils/URLUtils.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction DashManifestModel() {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n    let timelineConverter = TimelineConverter(context).getInstance();//TODO Need to pass this in not bake in\r\n    const urlUtils = URLUtils(context).getInstance();\r\n\r\n    function getIsTypeOf(adaptation, type) {\r\n\r\n        var i,\r\n            len,\r\n            representation;\r\n        var result = false;\r\n        var found = false;\r\n\r\n        var col = adaptation.ContentComponent_asArray;\r\n        var mimeTypeRegEx = (type !== 'text') ? new RegExp(type) : new RegExp('(vtt|ttml)');\r\n\r\n        if ((adaptation.Representation_asArray.length > 0) &&\r\n            (adaptation.Representation_asArray[0].hasOwnProperty('codecs'))) {\r\n            var codecs = adaptation.Representation_asArray[0].codecs;\r\n            if (codecs === 'stpp' || codecs === 'wvtt') {\r\n                return type === 'fragmentedText';\r\n            }\r\n        }\r\n\r\n        if (col) {\r\n            if (col.length > 1) {\r\n                return (type == 'muxed');\r\n            } else if (col[0] && col[0].contentType === type) {\r\n                result = true;\r\n                found = true;\r\n            }\r\n        }\r\n\r\n        if (adaptation.hasOwnProperty('mimeType')) {\r\n            result = mimeTypeRegEx.test(adaptation.mimeType);\r\n            found = true;\r\n        }\r\n\r\n        // couldn't find on adaptationset, so check a representation\r\n        if (!found) {\r\n            i = 0;\r\n            len = adaptation.Representation_asArray.length;\r\n            while (!found && i < len) {\r\n                representation = adaptation.Representation_asArray[i];\r\n\r\n                if (representation.hasOwnProperty('mimeType')) {\r\n                    result = mimeTypeRegEx.test(representation.mimeType);\r\n                    found = true;\r\n                }\r\n\r\n                i++;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function getIsAudio(adaptation) {\r\n        return getIsTypeOf(adaptation, 'audio');\r\n    }\r\n\r\n    function getIsVideo(adaptation) {\r\n        return getIsTypeOf(adaptation, 'video');\r\n    }\r\n\r\n    function getIsFragmentedText(adaptation) {\r\n        return getIsTypeOf(adaptation, 'fragmentedText');\r\n    }\r\n\r\n    function getIsText(adaptation) {\r\n        return getIsTypeOf(adaptation, 'text');\r\n    }\r\n\r\n    function getIsMuxed(adaptation) {\r\n        return getIsTypeOf(adaptation, 'muxed');\r\n    }\r\n\r\n    function getIsTextTrack(type) {\r\n        return (type === 'text/vtt' || type === 'application/ttml+xml');\r\n    }\r\n\r\n    function getLanguageForAdaptation(adaptation) {\r\n        var lang = '';\r\n\r\n        if (adaptation.hasOwnProperty('lang')) {\r\n            //Filter out any other characters not allowed according to RFC5646\r\n            lang = adaptation.lang.replace(/[^A-Za-z0-9-]/g,'');\r\n        }\r\n\r\n        return lang;\r\n    }\r\n\r\n    function getViewpointForAdaptation(adaptation) {\r\n        return adaptation.hasOwnProperty('Viewpoint') ? adaptation.Viewpoint : null;\r\n    }\r\n\r\n    function getRolesForAdaptation(adaptation) {\r\n        return adaptation.hasOwnProperty('Role_asArray') ? adaptation.Role_asArray : [];\r\n    }\r\n\r\n    function getAccessibilityForAdaptation(adaptation) {\r\n        return adaptation.hasOwnProperty('Accessibility_asArray') ? adaptation.Accessibility_asArray : [];\r\n    }\r\n\r\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\r\n        return adaptation.hasOwnProperty('AudioChannelConfiguration_asArray') ? adaptation.AudioChannelConfiguration_asArray : [];\r\n    }\r\n\r\n    function getIsMain(adaptation) {\r\n        return getRolesForAdaptation(adaptation).filter(function (role) {\r\n            return role.value === 'main';\r\n        })[0];\r\n    }\r\n\r\n    function getRepresentationSortFunction() {\r\n        return (a, b) => a.bandwidth - b.bandwidth;\r\n    }\r\n\r\n    function processAdaptation(adaptation) {\r\n        if (adaptation.Representation_asArray !== undefined && adaptation.Representation_asArray !== null) {\r\n            adaptation.Representation_asArray.sort(getRepresentationSortFunction());\r\n        }\r\n\r\n        return adaptation;\r\n    }\r\n\r\n    function getAdaptationForId(id, manifest, periodIndex) {\r\n\r\n        var adaptations = manifest.Period_asArray[periodIndex].AdaptationSet_asArray;\r\n        var i,\r\n            len;\r\n\r\n        for (i = 0, len = adaptations.length; i < len; i++) {\r\n            if (adaptations[i].hasOwnProperty('id') && adaptations[i].id === id) {\r\n                return adaptations[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getAdaptationForIndex(index, manifest, periodIndex) {\r\n        var adaptations = manifest.Period_asArray[periodIndex].AdaptationSet_asArray;\r\n        return adaptations[index];\r\n    }\r\n\r\n    function getIndexForAdaptation(adaptation, manifest, periodIndex) {\r\n\r\n        var adaptations = manifest.Period_asArray[periodIndex].AdaptationSet_asArray;\r\n        var i,\r\n            len;\r\n\r\n        for (i = 0, len = adaptations.length; i < len; i++) {\r\n            if (adaptations[i] === adaptation) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function getAdaptationsForType(manifest, periodIndex, type) {\r\n\r\n        var adaptationSet = manifest.Period_asArray[periodIndex].AdaptationSet_asArray;\r\n        var i,\r\n            len;\r\n        var adaptations = [];\r\n\r\n        for (i = 0, len = adaptationSet.length; i < len; i++) {\r\n            if (getIsTypeOf(adaptationSet[i], type)) {\r\n                adaptations.push(processAdaptation(adaptationSet[i]));\r\n            }\r\n        }\r\n\r\n        return adaptations;\r\n    }\r\n\r\n    function getAdaptationForType(manifest, periodIndex, type) {\r\n        var i,\r\n            len,\r\n            adaptations;\r\n\r\n        adaptations = getAdaptationsForType(manifest, periodIndex, type);\r\n\r\n        if (!adaptations || adaptations.length === 0) return null;\r\n\r\n        for (i = 0, len = adaptations.length; i < len; i++) {\r\n            if (getIsMain(adaptations[i])) return adaptations[i];\r\n        }\r\n\r\n        return adaptations[0];\r\n    }\r\n\r\n    function getCodec(adaptation) {\r\n        var representation = adaptation.Representation_asArray[0];\r\n        return (representation.mimeType + ';codecs=\"' + representation.codecs + '\"');\r\n    }\r\n\r\n    function getMimeType(adaptation) {\r\n        return adaptation.Representation_asArray[0].mimeType;\r\n    }\r\n\r\n    function getKID(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty('cenc:default_KID')) {\r\n            return null;\r\n        }\r\n        return adaptation['cenc:default_KID'];\r\n    }\r\n\r\n    function getContentProtectionData(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty('ContentProtection_asArray') || adaptation.ContentProtection_asArray.length === 0) {\r\n            return null;\r\n        }\r\n        return adaptation.ContentProtection_asArray;\r\n    }\r\n\r\n    function getIsDynamic(manifest) {\r\n        var isDynamic = false;\r\n        if (manifest.hasOwnProperty('type')) {\r\n            isDynamic = (manifest.type === 'dynamic');\r\n        }\r\n        return isDynamic;\r\n    }\r\n\r\n    function getIsDVR(manifest) {\r\n        var isDynamic = getIsDynamic(manifest);\r\n        var containsDVR,\r\n            isDVR;\r\n\r\n        containsDVR = !isNaN(manifest.timeShiftBufferDepth);\r\n        isDVR = (isDynamic && containsDVR);\r\n\r\n        return isDVR;\r\n    }\r\n\r\n    function hasProfile(manifest, profile) {\r\n        var has = false;\r\n\r\n        if (manifest.profiles && manifest.profiles.length > 0) {\r\n            has = (manifest.profiles.indexOf(profile) !== -1);\r\n        }\r\n\r\n        return has;\r\n    }\r\n\r\n    function getIsOnDemand(manifest) {\r\n        return hasProfile(manifest, 'urn:mpeg:dash:profile:isoff-on-demand:2011');\r\n    }\r\n\r\n    function getIsDVB(manifest) {\r\n        return hasProfile(manifest, 'urn:dvb:dash:profile:dvb-dash:2014');\r\n    }\r\n\r\n    function getDuration(manifest) {\r\n        var mpdDuration;\r\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\r\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\r\n        if (manifest.hasOwnProperty('mediaPresentationDuration')) {\r\n            mpdDuration = manifest.mediaPresentationDuration;\r\n        } else {\r\n            mpdDuration = Number.MAX_VALUE;\r\n        }\r\n\r\n        return mpdDuration;\r\n    }\r\n\r\n    function getBandwidth(representation) {\r\n        return representation.bandwidth;\r\n    }\r\n\r\n    function getRefreshDelay(manifest) {\r\n        var delay = NaN;\r\n        var minDelay = 2;\r\n\r\n        if (manifest.hasOwnProperty('minimumUpdatePeriod')) {\r\n            delay = Math.max(parseFloat(manifest.minimumUpdatePeriod), minDelay);\r\n        }\r\n\r\n        return delay;\r\n    }\r\n\r\n    function getRepresentationCount(adaptation) {\r\n        return adaptation.Representation_asArray.length;\r\n    }\r\n\r\n    function getBitrateListForAdaptation(adaptation) {\r\n        if (!adaptation || !adaptation.Representation_asArray || !adaptation.Representation_asArray.length) return null;\r\n\r\n        var a = processAdaptation(adaptation);\r\n        var reps = a.Representation_asArray;\r\n        var ln = reps.length;\r\n        var bitrateList = [];\r\n\r\n        for (var i = 0; i < ln; i++) {\r\n            bitrateList.push({\r\n                bandwidth: reps[i].bandwidth,\r\n                width: reps[i].width || 0,\r\n                height: reps[i].height || 0\r\n            });\r\n        }\r\n\r\n        return bitrateList;\r\n    }\r\n\r\n    function getRepresentationFor(index, adaptation) {\r\n        return adaptation.Representation_asArray[index];\r\n    }\r\n\r\n    function getRepresentationsForAdaptation(manifest, adaptation) {\r\n        var a = processAdaptation(manifest.Period_asArray[adaptation.period.index].AdaptationSet_asArray[adaptation.index]);\r\n        var representations = [];\r\n        var representation,\r\n            initialization,\r\n            segmentInfo,\r\n            r,\r\n            s;\r\n\r\n        for (var i = 0; i < a.Representation_asArray.length; i++) {\r\n            r = a.Representation_asArray[i];\r\n            representation = new Representation();\r\n            representation.index = i;\r\n            representation.adaptation = adaptation;\r\n\r\n            if (r.hasOwnProperty('id')) {\r\n                representation.id = r.id;\r\n            }\r\n\r\n            if (r.hasOwnProperty('bandwidth')) {\r\n                representation.bandwidth = r.bandwidth;\r\n            }\r\n            if (r.hasOwnProperty('maxPlayoutRate')) {\r\n                representation.maxPlayoutRate = r.maxPlayoutRate;\r\n            }\r\n            if (r.hasOwnProperty('SegmentBase')) {\r\n                segmentInfo = r.SegmentBase;\r\n                representation.segmentInfoType = 'SegmentBase';\r\n            }\r\n            else if (r.hasOwnProperty('SegmentList')) {\r\n                segmentInfo = r.SegmentList;\r\n                representation.segmentInfoType = 'SegmentList';\r\n                representation.useCalculatedLiveEdgeTime = true;\r\n            }\r\n            else if (r.hasOwnProperty('SegmentTemplate')) {\r\n                segmentInfo = r.SegmentTemplate;\r\n\r\n                if (segmentInfo.hasOwnProperty('SegmentTimeline')) {\r\n                    representation.segmentInfoType = 'SegmentTimeline';\r\n                    s = segmentInfo.SegmentTimeline.S_asArray[segmentInfo.SegmentTimeline.S_asArray.length - 1];\r\n                    if (!s.hasOwnProperty('r') || s.r >= 0) {\r\n                        representation.useCalculatedLiveEdgeTime = true;\r\n                    }\r\n                } else {\r\n                    representation.segmentInfoType = 'SegmentTemplate';\r\n                }\r\n\r\n                if (segmentInfo.hasOwnProperty('initialization')) {\r\n                    representation.initialization = segmentInfo.initialization.split('$Bandwidth$')\r\n                        .join(r.bandwidth).split('$RepresentationID$').join(r.id);\r\n                }\r\n            } else {\r\n                segmentInfo = r.BaseURL;\r\n                representation.segmentInfoType = 'BaseURL';\r\n            }\r\n\r\n            if (segmentInfo.hasOwnProperty('Initialization')) {\r\n                initialization = segmentInfo.Initialization;\r\n                if (initialization.hasOwnProperty('sourceURL')) {\r\n                    representation.initialization = initialization.sourceURL;\r\n                } else if (initialization.hasOwnProperty('range')) {\r\n                    representation.range = initialization.range;\r\n                }\r\n            } else if (r.hasOwnProperty('mimeType') && getIsTextTrack(r.mimeType)) {\r\n                representation.range = 0;\r\n            }\r\n\r\n            if (segmentInfo.hasOwnProperty('timescale')) {\r\n                representation.timescale = segmentInfo.timescale;\r\n            }\r\n            if (segmentInfo.hasOwnProperty('duration')) {\r\n                // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\r\n                // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\r\n                // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\r\n                // exceeds @maxSegmentDuration\r\n                //representation.segmentDuration = Math.min(segmentInfo.duration / representation.timescale, adaptation.period.mpd.maxSegmentDuration);\r\n                representation.segmentDuration = segmentInfo.duration / representation.timescale;\r\n            }\r\n            if (segmentInfo.hasOwnProperty('startNumber')) {\r\n                representation.startNumber = segmentInfo.startNumber;\r\n            }\r\n            if (segmentInfo.hasOwnProperty('indexRange')) {\r\n                representation.indexRange = segmentInfo.indexRange;\r\n            }\r\n            if (segmentInfo.hasOwnProperty('presentationTimeOffset')) {\r\n                representation.presentationTimeOffset = segmentInfo.presentationTimeOffset / representation.timescale;\r\n            }\r\n\r\n            representation.MSETimeOffset = timelineConverter.calcMSETimeOffset(representation);\r\n\r\n            representation.path = [adaptation.period.index, adaptation.index, i];\r\n\r\n            representations.push(representation);\r\n        }\r\n\r\n        return representations;\r\n    }\r\n\r\n    function getAdaptationsForPeriod(manifest, period) {\r\n        var p = manifest.Period_asArray[period.index];\r\n        var adaptations = [];\r\n        var adaptationSet,\r\n            a;\r\n\r\n        for (var i = 0; i < p.AdaptationSet_asArray.length; i++) {\r\n            a = p.AdaptationSet_asArray[i];\r\n            adaptationSet = new AdaptationSet();\r\n\r\n            if (a.hasOwnProperty('id')) {\r\n                adaptationSet.id = a.id;\r\n            }\r\n\r\n            adaptationSet.index = i;\r\n            adaptationSet.period = period;\r\n\r\n            if (getIsMuxed(a)) {\r\n                adaptationSet.type = 'muxed';\r\n            } else if (getIsAudio(a)) {\r\n                adaptationSet.type = 'audio';\r\n            }else if (getIsVideo(a)) {\r\n                adaptationSet.type = 'video';\r\n            }else if (getIsFragmentedText(a)) {\r\n                adaptationSet.type = 'fragmentedText';\r\n            }else {\r\n                adaptationSet.type = 'text';\r\n            }\r\n\r\n            adaptations.push(adaptationSet);\r\n        }\r\n\r\n        return adaptations;\r\n    }\r\n\r\n    function getRegularPeriods(manifest, mpd) {\r\n        var isDynamic = getIsDynamic(manifest);\r\n        var periods = [];\r\n        var p1 = null;\r\n        var p = null;\r\n        var vo1 = null;\r\n        var vo = null;\r\n        var len,\r\n            i;\r\n\r\n        for (i = 0, len = manifest.Period_asArray.length; i < len; i++) {\r\n            p = manifest.Period_asArray[i];\r\n\r\n            // If the attribute @start is present in the Period, then the\r\n            // Period is a regular Period and the PeriodStart is equal\r\n            // to the value of this attribute.\r\n            if (p.hasOwnProperty('start')) {\r\n                vo = new Period();\r\n                vo.start = p.start;\r\n            }\r\n            // If the @start attribute is absent, but the previous Period\r\n            // element contains a @duration attribute then then this new\r\n            // Period is also a regular Period. The start time of the new\r\n            // Period PeriodStart is the sum of the start time of the previous\r\n            // Period PeriodStart and the value of the attribute @duration\r\n            // of the previous Period.\r\n            else if (p1 !== null && p.hasOwnProperty('duration') && vo1 !== null) {\r\n                vo = new Period();\r\n                vo.start = vo1.start + vo1.duration;\r\n                vo.duration = p.duration;\r\n            }\r\n            // If (i) @start attribute is absent, and (ii) the Period element\r\n            // is the first in the MPD, and (iii) the MPD@type is 'static',\r\n            // then the PeriodStart time shall be set to zero.\r\n            else if (i === 0 && !isDynamic) {\r\n                vo = new Period();\r\n                vo.start = 0;\r\n            }\r\n\r\n            // The Period extends until the PeriodStart of the next Period.\r\n            // The difference between the PeriodStart time of a Period and\r\n            // the PeriodStart time of the following Period.\r\n            if (vo1 !== null && isNaN(vo1.duration))\r\n            {\r\n                vo1.duration = vo.start - vo1.start;\r\n            }\r\n\r\n            if (vo !== null) {\r\n                vo.id = getPeriodId(p);\r\n            }\r\n\r\n            if (vo !== null && p.hasOwnProperty('duration')) {\r\n                vo.duration = p.duration;\r\n            }\r\n\r\n            if (vo !== null) {\r\n                vo.index = i;\r\n                vo.mpd = mpd;\r\n                periods.push(vo);\r\n                p1 = p;\r\n                vo1 = vo;\r\n            }\r\n\r\n            p = null;\r\n            vo = null;\r\n        }\r\n\r\n        if (periods.length === 0) {\r\n            return periods;\r\n        }\r\n\r\n        // The last Period extends until the end of the Media Presentation.\r\n        // The difference between the PeriodStart time of the last Period\r\n        // and the mpd duration\r\n        if (vo1 !== null && isNaN(vo1.duration)) {\r\n            vo1.duration = getEndTimeForLastPeriod(manifest, vo1) - vo1.start;\r\n        }\r\n\r\n        return periods;\r\n    }\r\n\r\n    function getPeriodId(p) {\r\n        if (!p) {\r\n            throw new Error('Period cannot be null or undefined');\r\n        }\r\n\r\n        var id = Period.DEFAULT_ID;\r\n\r\n        if (p.hasOwnProperty('id') && p.id !== '__proto__') {\r\n            id = p.id;\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    function getMpd(manifest) {\r\n        var mpd = new Mpd();\r\n\r\n        mpd.manifest = manifest;\r\n\r\n        if (manifest.hasOwnProperty('availabilityStartTime')) {\r\n            mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\r\n        } else {\r\n            mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\r\n        }\r\n\r\n        if (manifest.hasOwnProperty('availabilityEndTime')) {\r\n            mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\r\n        }\r\n\r\n        if (manifest.hasOwnProperty('suggestedPresentationDelay')) {\r\n            mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\r\n        }\r\n\r\n        if (manifest.hasOwnProperty('timeShiftBufferDepth')) {\r\n            mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\r\n        }\r\n\r\n        if (manifest.hasOwnProperty('maxSegmentDuration')) {\r\n            mpd.maxSegmentDuration = manifest.maxSegmentDuration;\r\n        }\r\n\r\n        return mpd;\r\n    }\r\n\r\n    function getFetchTime(manifest, period) {\r\n        // FetchTime is defined as the time at which the server processes the request for the MPD from the client.\r\n        // TODO The client typically should not use the time at which it actually successfully received the MPD, but should\r\n        // take into account delay due to MPD delivery and processing. The fetch is considered successful fetching\r\n        // either if the client obtains an updated MPD or the client verifies that the MPD has not been updated since the previous fetching.\r\n\r\n        return timelineConverter.calcPresentationTimeFromWallTime(manifest.loadedTime, period);\r\n    }\r\n\r\n    function getCheckTime(manifest, period) {\r\n        var checkTime = NaN;\r\n        var fetchTime;\r\n\r\n        // If the MPD@minimumUpdatePeriod attribute in the client is provided, then the check time is defined as the\r\n        // sum of the fetch time of this operating MPD and the value of this attribute,\r\n        // i.e. CheckTime = FetchTime + MPD@minimumUpdatePeriod.\r\n        if (manifest.hasOwnProperty('minimumUpdatePeriod')) {\r\n            fetchTime = getFetchTime(manifest, period);\r\n            checkTime = fetchTime + manifest.minimumUpdatePeriod;\r\n        }\r\n        // TODO If the MPD@minimumUpdatePeriod attribute in the client is not provided, external means are used to\r\n        // determine CheckTime, such as a priori knowledge, or HTTP cache headers, etc.\r\n\r\n        return checkTime;\r\n    }\r\n\r\n    function getEndTimeForLastPeriod(manifest, period) {\r\n        var periodEnd;\r\n        var checkTime = getCheckTime(manifest, period);\r\n\r\n        // if the MPD@mediaPresentationDuration attribute is present, then PeriodEndTime is defined as the end time of the Media Presentation.\r\n        // if the MPD@mediaPresentationDuration attribute is not present, then PeriodEndTime is defined as FetchTime + MPD@minimumUpdatePeriod\r\n\r\n        if (manifest.mediaPresentationDuration) {\r\n            periodEnd = manifest.mediaPresentationDuration;\r\n        } else if (!isNaN(checkTime)) {\r\n            // in this case the Period End Time should match CheckTime\r\n            periodEnd = checkTime;\r\n        } else {\r\n            throw new Error('Must have @mediaPresentationDuration or @minimumUpdatePeriod on MPD or an explicit @duration on the last period.');\r\n        }\r\n\r\n        return periodEnd;\r\n    }\r\n\r\n    function getEventsForPeriod(manifest, period) {\r\n\r\n        var periodArray = manifest.Period_asArray;\r\n        var eventStreams = periodArray[period.index].EventStream_asArray;\r\n        var events = [];\r\n\r\n        if (eventStreams) {\r\n            for (var i = 0; i < eventStreams.length; i++) {\r\n                var eventStream = new EventStream();\r\n                eventStream.period = period;\r\n                eventStream.timescale = 1;\r\n\r\n                if (eventStreams[i].hasOwnProperty('schemeIdUri')) {\r\n                    eventStream.schemeIdUri = eventStreams[i].schemeIdUri;\r\n                } else {\r\n                    throw 'Invalid EventStream. SchemeIdUri has to be set';\r\n                }\r\n                if (eventStreams[i].hasOwnProperty('timescale')) {\r\n                    eventStream.timescale = eventStreams[i].timescale;\r\n                }\r\n                if (eventStreams[i].hasOwnProperty('value')) {\r\n                    eventStream.value = eventStreams[i].value;\r\n                }\r\n                for (var j = 0; j < eventStreams[i].Event_asArray.length; j++) {\r\n                    var event = new Event();\r\n                    event.presentationTime = 0;\r\n                    event.eventStream = eventStream;\r\n\r\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty('presentationTime')) {\r\n                        event.presentationTime = eventStreams[i].Event_asArray[j].presentationTime;\r\n                    }\r\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty('duration')) {\r\n                        event.duration = eventStreams[i].Event_asArray[j].duration;\r\n                    }\r\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty('id')) {\r\n                        event.id = eventStreams[i].Event_asArray[j].id;\r\n                    }\r\n                    events.push(event);\r\n                }\r\n            }\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n    function getEventStreams(inbandStreams, representation) {\r\n        var eventStreams = [];\r\n\r\n        if (!inbandStreams) return eventStreams;\r\n\r\n        for (var i = 0; i < inbandStreams.length ; i++ ) {\r\n            var eventStream = new EventStream();\r\n            eventStream.timescale = 1;\r\n            eventStream.representation =  representation;\r\n\r\n            if (inbandStreams[i].hasOwnProperty('schemeIdUri')) {\r\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\r\n            } else {\r\n                throw 'Invalid EventStream. SchemeIdUri has to be set';\r\n            }\r\n            if (inbandStreams[i].hasOwnProperty('timescale')) {\r\n                eventStream.timescale = inbandStreams[i].timescale;\r\n            }\r\n            if (inbandStreams[i].hasOwnProperty('value')) {\r\n                eventStream.value = inbandStreams[i].value;\r\n            }\r\n            eventStreams.push(eventStream);\r\n        }\r\n\r\n        return eventStreams;\r\n    }\r\n\r\n    function getEventStreamForAdaptationSet(manifest, adaptation) {\r\n        var inbandStreams = manifest.Period_asArray[adaptation.period.index].\r\n            AdaptationSet_asArray[adaptation.index].InbandEventStream_asArray;\r\n\r\n        return getEventStreams(inbandStreams, null);\r\n    }\r\n\r\n    function getEventStreamForRepresentation(manifest, representation) {\r\n        var inbandStreams = manifest.Period_asArray[representation.adaptation.period.index].\r\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].InbandEventStream_asArray;\r\n\r\n        return getEventStreams(inbandStreams, representation);\r\n    }\r\n\r\n    function getUTCTimingSources(manifest) {\r\n\r\n        var isDynamic = getIsDynamic(manifest);\r\n        var hasAST = manifest.hasOwnProperty('availabilityStartTime');\r\n        var utcTimingsArray = manifest.UTCTiming_asArray;\r\n        var utcTimingEntries = [];\r\n\r\n        // do not bother synchronizing the clock unless MPD is live,\r\n        // or it is static and has availabilityStartTime attribute\r\n        if ((isDynamic || hasAST)) {\r\n            if (utcTimingsArray) {\r\n                // the order is important here - 23009-1 states that the order\r\n                // in the manifest \"indicates relative preference, first having\r\n                // the highest, and the last the lowest priority\".\r\n                utcTimingsArray.forEach(function (utcTiming) {\r\n                    var entry = new UTCTiming();\r\n\r\n                    if (utcTiming.hasOwnProperty('schemeIdUri')) {\r\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\r\n                    } else {\r\n                        // entries of type DescriptorType with no schemeIdUri\r\n                        // are meaningless. let's just ignore this entry and\r\n                        // move on.\r\n                        return;\r\n                    }\r\n\r\n                    // this is (incorrectly) interpreted as a number - schema\r\n                    // defines it as a string\r\n                    if (utcTiming.hasOwnProperty('value')) {\r\n                        entry.value = utcTiming.value.toString();\r\n                    } else {\r\n                        // without a value, there's not a lot we can do with\r\n                        // this entry. let's just ignore this one and move on\r\n                        return;\r\n                    }\r\n\r\n                    // we're not interested in the optional id or any other\r\n                    // attributes which might be attached to the entry\r\n\r\n                    utcTimingEntries.push(entry);\r\n                });\r\n            }\r\n        }\r\n\r\n        return utcTimingEntries;\r\n    }\r\n\r\n    function getBaseURLsFromElement(node) {\r\n        let baseUrls = [];\r\n        let entries = node.BaseURL_asArray || [node.baseUri] || [];\r\n        let earlyReturn = false;\r\n\r\n        entries.some(entry => {\r\n            if (entry) {\r\n                const baseUrl = new BaseURL();\r\n                let text = entry.__text || entry;\r\n\r\n                if (urlUtils.isRelative(text)) {\r\n                    // it doesn't really make sense to have relative and\r\n                    // absolute URLs at the same level, or multiple\r\n                    // relative URLs at the same level, so assume we are\r\n                    // done from this level of the MPD\r\n                    earlyReturn = true;\r\n\r\n                    // deal with the specific case where the MPD@BaseURL\r\n                    // is specified and is relative. when no MPD@BaseURL\r\n                    // entries exist, that case is handled by the\r\n                    // [node.baseUri] in the entries definition.\r\n                    if (node.baseUri) {\r\n                        text = node.baseUri + text;\r\n                    }\r\n                }\r\n\r\n                baseUrl.url = text;\r\n\r\n                // serviceLocation is optional, but we need it in order\r\n                // to blacklist correctly. if it's not available, use\r\n                // anything unique since there's no relationship to any\r\n                // other BaseURL and, in theory, the url should be\r\n                // unique so use this instead.\r\n                if (entry.hasOwnProperty('serviceLocation') &&\r\n                        entry.serviceLocation.length) {\r\n                    baseUrl.serviceLocation = entry.serviceLocation;\r\n                } else {\r\n                    baseUrl.serviceLocation = text;\r\n                }\r\n\r\n                if (entry.hasOwnProperty('dvb:priority')) {\r\n                    baseUrl.dvb_priority = entry['dvb:priority'];\r\n                }\r\n\r\n                if (entry.hasOwnProperty('dvb:weight')) {\r\n                    baseUrl.dvb_weight = entry['dvb:weight'];\r\n                }\r\n\r\n                /* NOTE: byteRange, availabilityTimeOffset,\r\n                 * availabilityTimeComplete currently unused\r\n                 */\r\n\r\n                baseUrls.push(baseUrl);\r\n\r\n                return earlyReturn;\r\n            }\r\n        });\r\n\r\n        return baseUrls;\r\n    }\r\n\r\n    instance = {\r\n        getIsTypeOf: getIsTypeOf,\r\n        getIsAudio: getIsAudio,\r\n        getIsVideo: getIsVideo,\r\n        getIsText: getIsText,\r\n        getIsMuxed: getIsMuxed,\r\n        getIsTextTrack: getIsTextTrack,\r\n        getIsFragmentedText: getIsFragmentedText,\r\n        getIsMain: getIsMain,\r\n        getLanguageForAdaptation: getLanguageForAdaptation,\r\n        getViewpointForAdaptation: getViewpointForAdaptation,\r\n        getRolesForAdaptation: getRolesForAdaptation,\r\n        getAccessibilityForAdaptation: getAccessibilityForAdaptation,\r\n        getAudioChannelConfigurationForAdaptation: getAudioChannelConfigurationForAdaptation,\r\n        processAdaptation: processAdaptation,\r\n        getAdaptationForIndex: getAdaptationForIndex,\r\n        getIndexForAdaptation: getIndexForAdaptation,\r\n        getAdaptationForId: getAdaptationForId,\r\n        getAdaptationsForType: getAdaptationsForType,\r\n        getAdaptationForType: getAdaptationForType,\r\n        getCodec: getCodec,\r\n        getMimeType: getMimeType,\r\n        getKID: getKID,\r\n        getContentProtectionData: getContentProtectionData,\r\n        getIsDynamic: getIsDynamic,\r\n        getIsDVR: getIsDVR,\r\n        getIsOnDemand: getIsOnDemand,\r\n        getIsDVB: getIsDVB,\r\n        getDuration: getDuration,\r\n        getBandwidth: getBandwidth,\r\n        getRefreshDelay: getRefreshDelay,\r\n        getRepresentationCount: getRepresentationCount,\r\n        getBitrateListForAdaptation: getBitrateListForAdaptation,\r\n        getRepresentationFor: getRepresentationFor,\r\n        getRepresentationsForAdaptation: getRepresentationsForAdaptation,\r\n        getAdaptationsForPeriod: getAdaptationsForPeriod,\r\n        getRegularPeriods: getRegularPeriods,\r\n        getPeriodId: getPeriodId,\r\n        getMpd: getMpd,\r\n        getFetchTime: getFetchTime,\r\n        getCheckTime: getCheckTime,\r\n        getEndTimeForLastPeriod: getEndTimeForLastPeriod,\r\n        getEventsForPeriod: getEventsForPeriod,\r\n        getEventStreams: getEventStreams,\r\n        getEventStreamForAdaptationSet: getEventStreamForAdaptationSet,\r\n        getEventStreamForRepresentation: getEventStreamForRepresentation,\r\n        getUTCTimingSources: getUTCTimingSources,\r\n        getBaseURLsFromElement: getBaseURLsFromElement,\r\n        getRepresentationSortFunction: getRepresentationSortFunction\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\r\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction FragmentedTextBoxParser() {\r\n\r\n    let instance,\r\n        boxParser;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.boxParser) {\r\n            boxParser = config.boxParser;\r\n        }\r\n    }\r\n\r\n    function getSamplesInfo(ab) {\r\n        var isoFile = boxParser.parse(ab);\r\n        var tfhdBox = isoFile.getBox('tfhd');\r\n        var tfdtBox = isoFile.getBox('tfdt');\r\n        var trunBox = isoFile.getBox('trun');\r\n        var moofBox = isoFile.getBox('moof');\r\n        var mfhdBox = isoFile.getBox('mfhd');\r\n\r\n        var sampleDuration,\r\n            sampleCompositionTimeOffset,\r\n            sampleCount,\r\n            sampleSize,\r\n            sampleDts,\r\n            sampleList,\r\n            sample,\r\n            i,\r\n            dataOffset,\r\n            sequenceNumber,\r\n            totalDuration;\r\n\r\n        sequenceNumber = mfhdBox.sequence_number;\r\n        sampleCount = trunBox.sample_count;\r\n        sampleDts = tfdtBox.baseMediaDecodeTime;\r\n        dataOffset = (tfhdBox.base_data_offset || 0) + (trunBox.data_offset || 0);\r\n\r\n        sampleList = [];\r\n        for (i = 0; i < sampleCount; i++) {\r\n            sample = trunBox.samples[i];\r\n            sampleDuration = (sample.sample_duration !== undefined) ? sample.sample_duration : tfhdBox.default_sample_duration;\r\n            sampleSize = (sample.sample_size !== undefined) ? sample.sample_size : tfhdBox.default_sample_size;\r\n            sampleCompositionTimeOffset = (sample.sample_composition_time_offset !== undefined) ? sample.sample_composition_time_offset : 0;\r\n\r\n            sampleList.push({'dts': sampleDts,\r\n                'cts': (sampleDts + sampleCompositionTimeOffset),\r\n                'duration': sampleDuration,\r\n                'offset': moofBox.offset + dataOffset,\r\n                'size': sampleSize});\r\n            dataOffset += sampleSize;\r\n            sampleDts += sampleDuration;\r\n        }\r\n        totalDuration = sampleDts - tfdtBox.baseMediaDecodeTime;\r\n        return {sampleList: sampleList, sequenceNumber: sequenceNumber, totalDuration: totalDuration};\r\n    }\r\n\r\n    function getMediaTimescaleFromMoov(ab) {\r\n        var isoFile = boxParser.parse(ab);\r\n        var mdhdBox = isoFile.getBox('mdhd');\r\n\r\n        return mdhdBox ? mdhdBox.timescale : NaN;\r\n    }\r\n\r\n    instance = {\r\n        getSamplesInfo: getSamplesInfo,\r\n        getMediaTimescaleFromMoov: getMediaTimescaleFromMoov,\r\n        setConfig: setConfig\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nFragmentedTextBoxParser.__dashjs_factory_name = 'FragmentedTextBoxParser';\r\nexport default FactoryMaker.getSingletonFactory(FragmentedTextBoxParser);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nimport {getIndexBasedSegment, decideSegmentListRangeForTemplate} from './SegmentsUtils.js';\r\n\r\nfunction ListSegmentsGetter(config, isDynamic) {\r\n\r\n    let timelineConverter = config.timelineConverter;\r\n\r\n    let instance;\r\n\r\n    function getSegmentsFromList(representation, requestedTime, index, availabilityUpperLimit) {\r\n        var list = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\r\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\r\n        var baseURL = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\r\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].BaseURL;\r\n        var len = list.SegmentURL_asArray.length;\r\n\r\n        var segments = [];\r\n\r\n        var periodSegIdx,\r\n            seg,\r\n            s,\r\n            range,\r\n            startIdx,\r\n            endIdx,\r\n            start;\r\n\r\n        start = representation.startNumber;\r\n\r\n        range = decideSegmentListRangeForTemplate(timelineConverter, isDynamic, representation, requestedTime, index, availabilityUpperLimit);\r\n        startIdx = Math.max(range.start, 0);\r\n        endIdx = Math.min(range.end, list.SegmentURL_asArray.length - 1);\r\n\r\n        for (periodSegIdx = startIdx; periodSegIdx <= endIdx; periodSegIdx++) {\r\n            s = list.SegmentURL_asArray[periodSegIdx];\r\n\r\n            seg = getIndexBasedSegment(timelineConverter, isDynamic, representation, periodSegIdx);\r\n            seg.replacementTime = (start + periodSegIdx - 1) * representation.segmentDuration;\r\n            seg.media = s.media ? s.media : baseURL;\r\n            seg.mediaRange = s.mediaRange;\r\n            seg.index = s.index;\r\n            seg.indexRange = s.indexRange;\r\n\r\n            segments.push(seg);\r\n            seg = null;\r\n        }\r\n\r\n        representation.availableSegmentsNumber = len;\r\n\r\n        return segments;\r\n    }\r\n\r\n    instance = {\r\n        getSegments: getSegmentsFromList\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nListSegmentsGetter.__dashjs_factory_name = 'ListSegmentsGetter';\r\nconst factory = FactoryMaker.getClassFactory(ListSegmentsGetter);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport TimelineSegmentsGetter from './TimelineSegmentsGetter.js';\r\nimport TemplateSegmentsGetter from './TemplateSegmentsGetter.js';\r\nimport ListSegmentsGetter from './ListSegmentsGetter.js';\r\n\r\nfunction SegmentsGetter(config, isDynamic) {\r\n\r\n    let context = this.context;\r\n\r\n    let instance,\r\n        timelineSegmentsGetter,\r\n        templateSegmentsGetter,\r\n        listSegmentsGetter;\r\n\r\n    function setup() {\r\n        timelineSegmentsGetter = TimelineSegmentsGetter(context).create(config, isDynamic);\r\n        templateSegmentsGetter = TemplateSegmentsGetter(context).create(config, isDynamic);\r\n        listSegmentsGetter = ListSegmentsGetter(context).create(config, isDynamic);\r\n    }\r\n\r\n    function getSegments(representation, requestedTime, index, onSegmentListUpdatedCallback, availabilityUpperLimit) {\r\n        var segments;\r\n        var type = representation.segmentInfoType;\r\n\r\n        // Already figure out the segments.\r\n        if (type === 'SegmentBase' || type === 'BaseURL' || !isSegmentListUpdateRequired(representation, index)) {\r\n            segments = representation.segments;\r\n        } else {\r\n            if (type === 'SegmentTimeline') {\r\n                segments = timelineSegmentsGetter.getSegments(representation, requestedTime, index, availabilityUpperLimit);\r\n            } else if (type === 'SegmentTemplate') {\r\n                segments = templateSegmentsGetter.getSegments(representation, requestedTime, index, availabilityUpperLimit);\r\n            } else if (type === 'SegmentList') {\r\n                segments = listSegmentsGetter.getSegments(representation, requestedTime, index, availabilityUpperLimit);\r\n            }\r\n\r\n            if (onSegmentListUpdatedCallback) {\r\n                onSegmentListUpdatedCallback(representation, segments);\r\n            }\r\n        }\r\n\r\n        return segments;\r\n    }\r\n\r\n    function isSegmentListUpdateRequired(representation, index) {\r\n        var segments = representation.segments;\r\n        var updateRequired = false;\r\n\r\n        var upperIdx,\r\n            lowerIdx;\r\n\r\n        if (!segments || segments.length === 0) {\r\n            updateRequired = true;\r\n        } else {\r\n            lowerIdx = segments[0].availabilityIdx;\r\n            upperIdx = segments[segments.length - 1].availabilityIdx;\r\n            updateRequired = (index < lowerIdx) || (index > upperIdx);\r\n        }\r\n\r\n        return updateRequired;\r\n    }\r\n\r\n    instance = {\r\n        getSegments: getSegments\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nSegmentsGetter.__dashjs_factory_name = 'SegmentsGetter';\r\nconst factory = FactoryMaker.getClassFactory(SegmentsGetter);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport Segment from './../vo/Segment.js';\r\n\r\nfunction zeroPadToLength(numStr, minStrLength) {\r\n    while (numStr.length < minStrLength) {\r\n        numStr = '0' + numStr;\r\n    }\r\n    return numStr;\r\n}\r\n\r\nfunction getNumberForSegment(segment, segmentIndex) {\r\n    return segment.representation.startNumber + segmentIndex;\r\n}\r\n\r\nexport function replaceTokenForTemplate(url, token, value) {\r\n    var formatTag = '%0';\r\n\r\n    var startPos,\r\n        endPos,\r\n        formatTagPos,\r\n        specifier,\r\n        width,\r\n        paddedValue;\r\n\r\n    var tokenLen = token.length;\r\n    var formatTagLen = formatTag.length;\r\n\r\n    // keep looping round until all instances of <token> have been\r\n    // replaced. once that has happened, startPos below will be -1\r\n    // and the completed url will be returned.\r\n    while (true) {\r\n\r\n        // check if there is a valid $<token>...$ identifier\r\n        // if not, return the url as is.\r\n        startPos = url.indexOf('$' + token);\r\n        if (startPos < 0) {\r\n            return url;\r\n        }\r\n\r\n        // the next '$' must be the end of the identifier\r\n        // if there isn't one, return the url as is.\r\n        endPos = url.indexOf('$', startPos + tokenLen);\r\n        if (endPos < 0) {\r\n            return url;\r\n        }\r\n\r\n        // now see if there is an additional format tag suffixed to\r\n        // the identifier within the enclosing '$' characters\r\n        formatTagPos = url.indexOf(formatTag, startPos + tokenLen);\r\n        if (formatTagPos > startPos && formatTagPos < endPos) {\r\n\r\n            specifier = url.charAt(endPos - 1);\r\n            width = parseInt(url.substring(formatTagPos + formatTagLen, endPos - 1), 10);\r\n\r\n            // support the minimum specifiers required by IEEE 1003.1\r\n            // (d, i , o, u, x, and X) for completeness\r\n            switch (specifier) {\r\n                // treat all int types as uint,\r\n                // hence deliberate fallthrough\r\n                case 'd':\r\n                case 'i':\r\n                case 'u':\r\n                    paddedValue = zeroPadToLength(value.toString(), width);\r\n                    break;\r\n                case 'x':\r\n                    paddedValue = zeroPadToLength(value.toString(16), width);\r\n                    break;\r\n                case 'X':\r\n                    paddedValue = zeroPadToLength(value.toString(16), width).toUpperCase();\r\n                    break;\r\n                case 'o':\r\n                    paddedValue = zeroPadToLength(value.toString(8), width);\r\n                    break;\r\n                default:\r\n                    //TODO: commented out logging to supress jshint warning -- `log` is undefined here\r\n                    //log('Unsupported/invalid IEEE 1003.1 format identifier string in URL');\r\n                    return url;\r\n            }\r\n        } else {\r\n            paddedValue = value;\r\n        }\r\n\r\n        url = url.substring(0, startPos) + paddedValue + url.substring(endPos + 1);\r\n    }\r\n}\r\n\r\nexport function getIndexBasedSegment(timelineConverter, isDynamic, representation, index) {\r\n    var seg,\r\n        duration,\r\n        presentationStartTime,\r\n        presentationEndTime;\r\n\r\n    duration = representation.segmentDuration;\r\n\r\n    /*\r\n     * From spec - If neither @duration attribute nor SegmentTimeline element is present, then the Representation\r\n     * shall contain exactly one Media Segment. The MPD start time is 0 and the MPD duration is obtained\r\n     * in the same way as for the last Media Segment in the Representation.\r\n     */\r\n    if (isNaN(duration)) {\r\n        duration = representation.adaptation.period.duration;\r\n    }\r\n\r\n    presentationStartTime = representation.adaptation.period.start + (index * duration);\r\n    presentationEndTime = presentationStartTime + duration;\r\n\r\n    seg = new Segment();\r\n\r\n    seg.representation = representation;\r\n    seg.duration = duration;\r\n    seg.presentationStartTime = presentationStartTime;\r\n\r\n    seg.mediaStartTime = timelineConverter.calcMediaTimeFromPresentationTime(seg.presentationStartTime, representation);\r\n\r\n    seg.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(seg.presentationStartTime, representation.adaptation.period.mpd, isDynamic);\r\n    seg.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationEndTime, representation.adaptation.period.mpd, isDynamic);\r\n\r\n    // at this wall clock time, the video element currentTime should be seg.presentationStartTime\r\n    seg.wallStartTime = timelineConverter.calcWallTimeForSegment(seg, isDynamic);\r\n\r\n    seg.replacementNumber = getNumberForSegment(seg, index);\r\n    seg.availabilityIdx = index;\r\n\r\n    return seg;\r\n}\r\n\r\nexport function getTimeBasedSegment(timelineConverter, isDynamic, representation, time, duration, fTimescale, url, range, index) {\r\n    var scaledTime = time / fTimescale;\r\n    var scaledDuration = Math.min(duration / fTimescale, representation.adaptation.period.mpd.maxSegmentDuration);\r\n\r\n    var presentationStartTime,\r\n        presentationEndTime,\r\n        seg;\r\n\r\n    presentationStartTime = timelineConverter.calcPresentationTimeFromMediaTime(scaledTime, representation);\r\n    presentationEndTime = presentationStartTime + scaledDuration;\r\n\r\n    seg = new Segment();\r\n\r\n    seg.representation = representation;\r\n    seg.duration = scaledDuration;\r\n    seg.mediaStartTime = scaledTime;\r\n\r\n    seg.presentationStartTime = presentationStartTime;\r\n\r\n    // For SegmentTimeline every segment is available at loadedTime\r\n    seg.availabilityStartTime = representation.adaptation.period.mpd.manifest.loadedTime;\r\n    seg.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationEndTime, representation.adaptation.period.mpd, isDynamic);\r\n\r\n    // at this wall clock time, the video element currentTime should be seg.presentationStartTime\r\n    seg.wallStartTime = timelineConverter.calcWallTimeForSegment(seg, isDynamic);\r\n\r\n    seg.replacementTime = time;\r\n\r\n    seg.replacementNumber = getNumberForSegment(seg, index);\r\n\r\n    url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\r\n    url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\r\n    seg.media = url;\r\n    seg.mediaRange = range;\r\n    seg.availabilityIdx = index;\r\n\r\n    return seg;\r\n}\r\n\r\nexport function getSegmentByIndex(index, representation) {\r\n    if (!representation || !representation.segments) return null;\r\n\r\n    var ln = representation.segments.length;\r\n    var seg,\r\n        i;\r\n\r\n    if (index < ln) {\r\n        seg = representation.segments[index];\r\n        if (seg && seg.availabilityIdx === index) {\r\n            return seg;\r\n        }\r\n    }\r\n\r\n    for (i = 0; i < ln; i++) {\r\n        seg = representation.segments[i];\r\n\r\n        if (seg && seg.availabilityIdx === index) {\r\n            return seg;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\nexport function decideSegmentListRangeForTimeline(timelineConverter, isDynamic, requestedTime, index, givenAvailabilityUpperLimit) {\r\n    var availabilityLowerLimit = 2;\r\n    var availabilityUpperLimit = givenAvailabilityUpperLimit || 10;\r\n    var firstIdx = 0;\r\n    var lastIdx = Number.POSITIVE_INFINITY;\r\n\r\n    var start,\r\n        end,\r\n        range;\r\n\r\n    if (isDynamic && !timelineConverter.isTimeSyncCompleted()) {\r\n        range = {start: firstIdx, end: lastIdx};\r\n        return range;\r\n    }\r\n\r\n    if ((!isDynamic && requestedTime) || index < 0) return null;\r\n\r\n    // segment list should not be out of the availability window range\r\n    start = Math.max(index - availabilityLowerLimit, firstIdx);\r\n    end = Math.min(index + availabilityUpperLimit, lastIdx);\r\n\r\n    range = {start: start, end: end};\r\n\r\n    return range;\r\n}\r\n\r\nexport function decideSegmentListRangeForTemplate(timelineConverter, isDynamic, representation, requestedTime, index, givenAvailabilityUpperLimit) {\r\n    var duration = representation.segmentDuration;\r\n    var minBufferTime = representation.adaptation.period.mpd.manifest.minBufferTime;\r\n    var availabilityWindow = representation.segmentAvailabilityRange;\r\n    var periodRelativeRange = {\r\n        start: timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, availabilityWindow.start),\r\n        end: timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, availabilityWindow.end)\r\n    };\r\n    var currentSegmentList = representation.segments;\r\n    var availabilityLowerLimit = 2 * duration;\r\n    var availabilityUpperLimit = givenAvailabilityUpperLimit || Math.max(2 * minBufferTime, 10 * duration);\r\n\r\n    var originAvailabilityTime = NaN;\r\n    var originSegment = null;\r\n\r\n    var start,\r\n        end,\r\n        range;\r\n\r\n    periodRelativeRange.start = Math.max(periodRelativeRange.start, 0);\r\n\r\n    if (isDynamic && !timelineConverter.isTimeSyncCompleted()) {\r\n        start = Math.floor(periodRelativeRange.start / duration);\r\n        end = Math.floor(periodRelativeRange.end / duration);\r\n        range = {start: start, end: end};\r\n        return range;\r\n    }\r\n\r\n    // if segments exist we should try to find the latest buffered time, which is the presentation time of the\r\n    // segment for the current index\r\n    if (currentSegmentList && currentSegmentList.length > 0) {\r\n        originSegment = getSegmentByIndex(index, representation);\r\n        if (originSegment) {\r\n            originAvailabilityTime = timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, originSegment.presentationStartTime);\r\n        } else {\r\n            originAvailabilityTime = index > 0 ? index * duration :\r\n                timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, requestedTime);\r\n        }\r\n\r\n    } else {\r\n        // If no segments exist, but index > 0, it means that we switch to the other representation, so\r\n        // we should proceed from this time.\r\n        // Otherwise we should start from the beginning for static mpds or from the end (live edge) for dynamic mpds\r\n        originAvailabilityTime = index > 0 ? index * duration : isDynamic ? periodRelativeRange.end : periodRelativeRange.start;\r\n    }\r\n\r\n    // segment list should not be out of the availability window range\r\n    start = Math.floor(Math.max(originAvailabilityTime - availabilityLowerLimit, periodRelativeRange.start) / duration);\r\n    end = Math.floor(Math.min(start + availabilityUpperLimit / duration, periodRelativeRange.end / duration));\r\n\r\n    range = {start: start, end: end};\r\n\r\n    return range;\r\n}\r\n\r\n\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nimport {replaceTokenForTemplate, getIndexBasedSegment, decideSegmentListRangeForTemplate} from './SegmentsUtils.js';\r\n\r\nfunction TemplateSegmentsGetter(config, isDynamic) {\r\n\r\n    let timelineConverter = config.timelineConverter;\r\n\r\n    let instance;\r\n\r\n    function getSegmentsFromTemplate(representation, requestedTime, index, availabilityUpperLimit) {\r\n        var template = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\r\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate;\r\n        var duration = representation.segmentDuration;\r\n        var availabilityWindow = representation.segmentAvailabilityRange;\r\n\r\n        var segments = [];\r\n        var url = null;\r\n        var seg = null;\r\n\r\n        var segmentRange,\r\n            periodSegIdx,\r\n            startIdx,\r\n            endIdx,\r\n            start;\r\n\r\n        start = representation.startNumber;\r\n\r\n        if (isNaN(duration) && !isDynamic) {\r\n            segmentRange = {start: start, end: start};\r\n        }\r\n        else {\r\n            segmentRange = decideSegmentListRangeForTemplate(timelineConverter, isDynamic, representation, requestedTime, index, availabilityUpperLimit);\r\n        }\r\n\r\n        startIdx = segmentRange.start;\r\n        endIdx = segmentRange.end;\r\n\r\n        for (periodSegIdx = startIdx; periodSegIdx <= endIdx; periodSegIdx++) {\r\n\r\n            seg = getIndexBasedSegment(timelineConverter, isDynamic, representation, periodSegIdx);\r\n            seg.replacementTime = (start + periodSegIdx - 1) * representation.segmentDuration;\r\n            url = template.media;\r\n            url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\r\n            url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\r\n            seg.media = url;\r\n\r\n            segments.push(seg);\r\n            seg = null;\r\n        }\r\n\r\n        if (isNaN(duration)) {\r\n            representation.availableSegmentsNumber = 1;\r\n        }\r\n        else {\r\n            representation.availableSegmentsNumber = Math.ceil((availabilityWindow.end - availabilityWindow.start) / duration);\r\n        }\r\n\r\n        return segments;\r\n    }\r\n\r\n    instance = {\r\n        getSegments: getSegmentsFromTemplate\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nTemplateSegmentsGetter.__dashjs_factory_name = 'TemplateSegmentsGetter';\r\nconst factory = FactoryMaker.getClassFactory(TemplateSegmentsGetter);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction TimelineConverter() {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        clientServerTimeShift,\r\n        isClientServerTimeSyncCompleted,\r\n        expectedLiveEdge;\r\n\r\n    function initialize() {\r\n\r\n        clientServerTimeShift = 0;\r\n        isClientServerTimeSyncCompleted = false;\r\n        expectedLiveEdge = NaN;\r\n\r\n        eventBus.on(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);\r\n        eventBus.on(Events.TIME_SYNCHRONIZATION_COMPLETED, onTimeSyncComplete, this);\r\n    }\r\n\r\n    function isTimeSyncCompleted() {\r\n        return isClientServerTimeSyncCompleted;\r\n    }\r\n\r\n    function setTimeSyncCompleted(value) {\r\n        isClientServerTimeSyncCompleted = value;\r\n    }\r\n\r\n    function getClientTimeOffset() {\r\n        return clientServerTimeShift;\r\n    }\r\n\r\n    function getExpectedLiveEdge() {\r\n        return expectedLiveEdge;\r\n    }\r\n\r\n    function setExpectedLiveEdge(value) {\r\n        expectedLiveEdge = value;\r\n    }\r\n\r\n    function calcAvailabilityTimeFromPresentationTime(presentationTime, mpd, isDynamic, calculateEnd) {\r\n        var availabilityTime = NaN;\r\n\r\n        if (calculateEnd) {\r\n            //@timeShiftBufferDepth specifies the duration of the time shifting buffer that is guaranteed\r\n            // to be available for a Media Presentation with type 'dynamic'.\r\n            // When not present, the value is infinite.\r\n            if (isDynamic && (mpd.timeShiftBufferDepth != Number.POSITIVE_INFINITY)) {\r\n                availabilityTime = new Date(mpd.availabilityStartTime.getTime() + ((presentationTime + mpd.timeShiftBufferDepth) * 1000));\r\n            } else {\r\n                availabilityTime = mpd.availabilityEndTime;\r\n            }\r\n        } else {\r\n            if (isDynamic) {\r\n                availabilityTime = new Date(mpd.availabilityStartTime.getTime() + (presentationTime - clientServerTimeShift) * 1000);\r\n            } else {\r\n                // in static mpd, all segments are available at the same time\r\n                availabilityTime = mpd.availabilityStartTime;\r\n            }\r\n        }\r\n\r\n        return availabilityTime;\r\n    }\r\n\r\n    function calcAvailabilityStartTimeFromPresentationTime(presentationTime, mpd, isDynamic) {\r\n        return calcAvailabilityTimeFromPresentationTime.call(this, presentationTime, mpd, isDynamic);\r\n    }\r\n\r\n    function calcAvailabilityEndTimeFromPresentationTime(presentationTime, mpd, isDynamic) {\r\n        return calcAvailabilityTimeFromPresentationTime.call(this, presentationTime, mpd, isDynamic, true);\r\n    }\r\n\r\n    function calcPresentationTimeFromWallTime(wallTime, period) {\r\n        return ((wallTime.getTime() - period.mpd.availabilityStartTime.getTime() + clientServerTimeShift * 1000) / 1000);\r\n    }\r\n\r\n    function calcPresentationTimeFromMediaTime(mediaTime, representation) {\r\n        var periodStart = representation.adaptation.period.start;\r\n        var presentationOffset = representation.presentationTimeOffset;\r\n\r\n        return mediaTime + (periodStart - presentationOffset);\r\n    }\r\n\r\n    function calcMediaTimeFromPresentationTime(presentationTime, representation) {\r\n        var periodStart = representation.adaptation.period.start;\r\n        var presentationOffset = representation.presentationTimeOffset;\r\n\r\n        return presentationTime - periodStart + presentationOffset;\r\n    }\r\n\r\n    function calcWallTimeForSegment(segment, isDynamic) {\r\n        var suggestedPresentationDelay,\r\n            displayStartTime,\r\n            wallTime;\r\n\r\n        if (isDynamic) {\r\n            suggestedPresentationDelay = segment.representation.adaptation.period.mpd.suggestedPresentationDelay;\r\n            displayStartTime = segment.presentationStartTime + suggestedPresentationDelay;\r\n            wallTime = new Date(segment.availabilityStartTime.getTime() + (displayStartTime * 1000));\r\n        }\r\n\r\n        return wallTime;\r\n    }\r\n\r\n    function calcSegmentAvailabilityRange(representation, isDynamic) {\r\n        var start = representation.adaptation.period.start;\r\n        var end = start + representation.adaptation.period.duration;\r\n        var range = { start: start, end: end };\r\n        var d = representation.segmentDuration || ((representation.segments && representation.segments.length) ? representation.segments[representation.segments.length - 1].duration : 0);\r\n\r\n        var checkTime,\r\n            now;\r\n\r\n        if (!isDynamic) return range;\r\n\r\n        if (!isClientServerTimeSyncCompleted && representation.segmentAvailabilityRange) {\r\n            return representation.segmentAvailabilityRange;\r\n        }\r\n\r\n        checkTime = representation.adaptation.period.mpd.checkTime;\r\n        now = calcPresentationTimeFromWallTime(new Date(), representation.adaptation.period);\r\n        //the Media Segment list is further restricted by the CheckTime together with the MPD attribute\r\n        // MPD@timeShiftBufferDepth such that only Media Segments for which the sum of the start time of the\r\n        // Media Segment and the Period start time falls in the interval [NOW- MPD@timeShiftBufferDepth - @duration, min(CheckTime, NOW)] are included.\r\n        start = Math.max((now - representation.adaptation.period.mpd.timeShiftBufferDepth), representation.adaptation.period.start);\r\n        var timeAnchor = (isNaN(checkTime) ? now : Math.min(checkTime, now));\r\n        var periodEnd = representation.adaptation.period.start + representation.adaptation.period.duration;\r\n        end = (timeAnchor >= periodEnd  && (timeAnchor - d) < periodEnd ? periodEnd : timeAnchor) - d;\r\n        //end = (isNaN(checkTime) ? now : Math.min(checkTime, now)) - d;\r\n        range = {start: start, end: end};\r\n\r\n        return range;\r\n    }\r\n\r\n    function calcPeriodRelativeTimeFromMpdRelativeTime(representation, mpdRelativeTime) {\r\n        var periodStartTime = representation.adaptation.period.start;\r\n        return mpdRelativeTime - periodStartTime;\r\n    }\r\n\r\n    function calcMpdRelativeTimeFromPeriodRelativeTime(representation, periodRelativeTime) {\r\n        var periodStartTime = representation.adaptation.period.start;\r\n\r\n        return periodRelativeTime + periodStartTime;\r\n    }\r\n\r\n    function onLiveEdgeSearchCompleted(e) {\r\n        if (isClientServerTimeSyncCompleted || e.error) return;\r\n\r\n        // the difference between expected and actual live edge time is supposed to be a difference between client\r\n        // and server time as well\r\n        clientServerTimeShift += e.liveEdge - (expectedLiveEdge + e.searchTime);\r\n        isClientServerTimeSyncCompleted = true;\r\n    }\r\n\r\n    function onTimeSyncComplete(e) {\r\n        if (isClientServerTimeSyncCompleted || e.error) {\r\n            return;\r\n        }\r\n\r\n        clientServerTimeShift = e.offset / 1000;\r\n\r\n        isClientServerTimeSyncCompleted = true;\r\n    }\r\n\r\n    function calcMSETimeOffset(representation) {\r\n        // The MSEOffset is offset from AST for media. It is Period@start - presentationTimeOffset\r\n        var presentationOffset = representation.presentationTimeOffset;\r\n        var periodStart = representation.adaptation.period.start;\r\n        return (periodStart - presentationOffset);\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);\r\n        eventBus.off(Events.TIME_SYNCHRONIZATION_COMPLETED, onTimeSyncComplete, this);\r\n        clientServerTimeShift = 0;\r\n        isClientServerTimeSyncCompleted = false;\r\n        expectedLiveEdge = NaN;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        isTimeSyncCompleted: isTimeSyncCompleted,\r\n        setTimeSyncCompleted: setTimeSyncCompleted,\r\n        getClientTimeOffset: getClientTimeOffset,\r\n        getExpectedLiveEdge: getExpectedLiveEdge,\r\n        setExpectedLiveEdge: setExpectedLiveEdge,\r\n        calcAvailabilityStartTimeFromPresentationTime: calcAvailabilityStartTimeFromPresentationTime,\r\n        calcAvailabilityEndTimeFromPresentationTime: calcAvailabilityEndTimeFromPresentationTime,\r\n        calcPresentationTimeFromWallTime: calcPresentationTimeFromWallTime,\r\n        calcPresentationTimeFromMediaTime: calcPresentationTimeFromMediaTime,\r\n        calcPeriodRelativeTimeFromMpdRelativeTime: calcPeriodRelativeTimeFromMpdRelativeTime,\r\n        calcMpdRelativeTimeFromPeriodRelativeTime: calcMpdRelativeTimeFromPeriodRelativeTime,\r\n        calcMediaTimeFromPresentationTime: calcMediaTimeFromPresentationTime,\r\n        calcSegmentAvailabilityRange: calcSegmentAvailabilityRange,\r\n        calcWallTimeForSegment: calcWallTimeForSegment,\r\n        calcMSETimeOffset: calcMSETimeOffset,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nTimelineConverter.__dashjs_factory_name = 'TimelineConverter';\r\nexport default FactoryMaker.getSingletonFactory(TimelineConverter);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nimport {getTimeBasedSegment, decideSegmentListRangeForTimeline} from './SegmentsUtils.js';\r\n\r\nfunction TimelineSegmentsGetter(config, isDynamic) {\r\n\r\n    let timelineConverter = config.timelineConverter;\r\n\r\n    let instance;\r\n\r\n    function getSegmentsFromTimeline(representation, requestedTime, index, availabilityUpperLimit) {\r\n        var template = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\r\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate;\r\n        var timeline = template.SegmentTimeline;\r\n        var isAvailableSegmentNumberCalculated = representation.availableSegmentsNumber > 0;\r\n\r\n        var maxSegmentsAhead = 10;\r\n        var time = 0;\r\n        var scaledTime = 0;\r\n        var availabilityIdx = -1;\r\n        var segments = [];\r\n        var isStartSegmentForRequestedTimeFound = false;\r\n\r\n        var fragments,\r\n            frag,\r\n            i,\r\n            len,\r\n            j,\r\n            repeat,\r\n            repeatEndTime,\r\n            nextFrag,\r\n            calculatedRange,\r\n            hasEnoughSegments,\r\n            requiredMediaTime,\r\n            startIdx,\r\n            endIdx,\r\n            fTimescale;\r\n\r\n        var createSegment = function (s) {\r\n            return getTimeBasedSegment(\r\n                timelineConverter,\r\n                isDynamic,\r\n                representation,\r\n                time,\r\n                s.d,\r\n                fTimescale,\r\n                template.media,\r\n                s.mediaRange,\r\n                availabilityIdx);\r\n        };\r\n\r\n        fTimescale = representation.timescale;\r\n\r\n        fragments = timeline.S_asArray;\r\n\r\n        calculatedRange = decideSegmentListRangeForTimeline(timelineConverter, isDynamic,  requestedTime, index, availabilityUpperLimit);\r\n\r\n        // if calculatedRange exists we should generate segments that belong to this range.\r\n        // Otherwise generate maxSegmentsAhead segments ahead of the requested time\r\n        if (calculatedRange) {\r\n            startIdx = calculatedRange.start;\r\n            endIdx = calculatedRange.end;\r\n        } else {\r\n            requiredMediaTime = timelineConverter.calcMediaTimeFromPresentationTime(requestedTime || 0, representation);\r\n        }\r\n\r\n        for (i = 0, len = fragments.length; i < len; i++) {\r\n            frag = fragments[i];\r\n            repeat = 0;\r\n            if (frag.hasOwnProperty('r')) {\r\n                repeat = frag.r;\r\n            }\r\n\r\n            //For a repeated S element, t belongs only to the first segment\r\n            if (frag.hasOwnProperty('t')) {\r\n                time = frag.t;\r\n                scaledTime = time / fTimescale;\r\n            }\r\n\r\n            //This is a special case: \"A negative value of the @r attribute of the S element indicates that the duration indicated in @d attribute repeats until the start of the next S element, the end of the Period or until the\r\n            // next MPD update.\"\r\n            if (repeat < 0) {\r\n                nextFrag = fragments[i + 1];\r\n\r\n                if (nextFrag && nextFrag.hasOwnProperty('t')) {\r\n                    repeatEndTime = nextFrag.t / fTimescale;\r\n                } else {\r\n                    var availabilityEnd = representation.segmentAvailabilityRange ? representation.segmentAvailabilityRange.end : (timelineConverter.calcSegmentAvailabilityRange(representation, isDynamic).end);\r\n                    repeatEndTime = timelineConverter.calcMediaTimeFromPresentationTime(availabilityEnd, representation);\r\n                    representation.segmentDuration = frag.d / fTimescale;\r\n                }\r\n\r\n                repeat = Math.ceil((repeatEndTime - scaledTime) / (frag.d / fTimescale)) - 1;\r\n            }\r\n\r\n            // if we have enough segments in the list, but we have not calculated the total number of the segments yet we\r\n            // should continue the loop and calc the number. Once it is calculated, we can break the loop.\r\n            if (hasEnoughSegments) {\r\n                if (isAvailableSegmentNumberCalculated) break;\r\n                availabilityIdx += repeat + 1;\r\n                continue;\r\n            }\r\n\r\n            for (j = 0; j <= repeat; j++) {\r\n                availabilityIdx++;\r\n\r\n                if (calculatedRange) {\r\n                    if (availabilityIdx > endIdx) {\r\n                        hasEnoughSegments = true;\r\n                        if (isAvailableSegmentNumberCalculated) break;\r\n                        continue;\r\n                    }\r\n\r\n                    if (availabilityIdx >= startIdx) {\r\n                        segments.push(createSegment(frag));\r\n                    }\r\n                } else {\r\n                    if (segments.length > maxSegmentsAhead) {\r\n                        hasEnoughSegments = true;\r\n                        if (isAvailableSegmentNumberCalculated) break;\r\n                        continue;\r\n                    }\r\n\r\n                    // In some cases when requiredMediaTime = actual end time of the last segment\r\n                    // it is possible that this time a bit exceeds the declared end time of the last segment.\r\n                    // in this case we still need to include the last segment in the segment list. to do this we\r\n                    // use a correction factor = 1.5. This number is used because the largest possible deviation is\r\n                    // is 50% of segment duration.\r\n                    if (isStartSegmentForRequestedTimeFound) {\r\n                        segments.push(createSegment(frag));\r\n                    }  else if (scaledTime >= (requiredMediaTime - (frag.d / fTimescale) * 1.5)) {\r\n                        isStartSegmentForRequestedTimeFound = true;\r\n                        segments.push(createSegment(frag));\r\n                    }\r\n                }\r\n\r\n                time += frag.d;\r\n                scaledTime = time / fTimescale;\r\n            }\r\n        }\r\n\r\n        if (!isAvailableSegmentNumberCalculated) {\r\n            representation.availableSegmentsNumber = availabilityIdx + 1;\r\n        }\r\n\r\n        return segments;\r\n    }\r\n\r\n    instance = {\r\n        getSegments: getSegmentsFromTimeline\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nTimelineSegmentsGetter.__dashjs_factory_name = 'TimelineSegmentsGetter';\r\nconst factory = FactoryMaker.getClassFactory(TimelineSegmentsGetter);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass AdaptationSet {\r\n    constructor() {\r\n        this.period = null;\r\n        this.index = -1;\r\n        this.type = null;\r\n    }\r\n}\r\n\r\nexport default AdaptationSet;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\n\r\nconst DEFAULT_DVB_PRIORITY = 1;\r\nconst DEFAULT_DVB_WEIGHT = 1;\r\n\r\nclass BaseURL {\r\n    constructor(url, serviceLocation, priority, weight) {\r\n        this.url = url || '';\r\n        this.serviceLocation = serviceLocation || url || '';\r\n\r\n        // DVB extensions\r\n        this.dvb_priority = priority || DEFAULT_DVB_PRIORITY;\r\n        this.dvb_weight = weight || DEFAULT_DVB_WEIGHT;\r\n\r\n        /* currently unused:\r\n         * byteRange,\r\n         * availabilityTimeOffset,\r\n         * availabilityTimeComplete\r\n         */\r\n    }\r\n}\r\n\r\nBaseURL.DEFAULT_DVB_PRIORITY = DEFAULT_DVB_PRIORITY;\r\nBaseURL.DEFAULT_DVB_WEIGHT = DEFAULT_DVB_WEIGHT;\r\n\r\nexport default BaseURL;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Event {\r\n    constructor() {\r\n        this.duration = NaN;\r\n        this.presentationTime = NaN;\r\n        this.id = NaN;\r\n        this.messageData = '';\r\n        this.eventStream = null;\r\n        this.presentationTimeDelta = NaN; // Specific EMSG Box parameter\r\n    }\r\n}\r\n\r\nexport default Event;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventStream {\r\n    constructor() {\r\n        this.adaptionSet = null;\r\n        this.representation = null;\r\n        this.period = null;\r\n        this.timescale = 1;\r\n        this.value = '';\r\n        this.schemeIdUri = '';\r\n    }\r\n}\r\n\r\nexport default EventStream;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Mpd {\r\n    constructor() {\r\n        this.manifest = null;\r\n        this.suggestedPresentationDelay = 0;\r\n        this.availabilityStartTime = null;\r\n        this.availabilityEndTime = Number.POSITIVE_INFINITY;\r\n        this.timeShiftBufferDepth = Number.POSITIVE_INFINITY;\r\n        this.maxSegmentDuration = Number.POSITIVE_INFINITY;\r\n        this.checkTime = NaN;\r\n        this.clientServerTimeShift = 0;\r\n        this.isClientServerTimeSyncCompleted = false;\r\n    }\r\n}\r\n\r\nexport default Mpd;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Period {\r\n    constructor() {\r\n        this.id = null;\r\n        this.index = -1;\r\n        this.duration = NaN;\r\n        this.start = NaN;\r\n        this.mpd = null;\r\n    }\r\n}\r\n\r\nPeriod.DEFAULT_ID = 'defaultId';\r\n\r\nexport default Period;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Representation {\r\n    constructor() {\r\n        this.id = null;\r\n        this.index = -1;\r\n        this.adaptation = null;\r\n        this.segmentInfoType = null;\r\n        this.initialization = null;\r\n        this.segmentDuration = NaN;\r\n        this.timescale = 1;\r\n        this.startNumber = 1;\r\n        this.indexRange = null;\r\n        this.range = null;\r\n        this.presentationTimeOffset = 0;\r\n        // Set the source buffer timeOffset to this\r\n        this.MSETimeOffset = NaN;\r\n        this.segmentAvailabilityRange = null;\r\n        this.availableSegmentsNumber = 0;\r\n        this.bandwidth = NaN;\r\n        this.maxPlayoutRate = NaN;\r\n    }\r\n}\r\n\r\nexport default Representation;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Segment {\r\n    constructor() {\r\n        this.indexRange = null;\r\n        this.index = null;\r\n        this.mediaRange = null;\r\n        this.media = null;\r\n        this.duration = NaN;\r\n        // this is the time that should be inserted into the media url\r\n        this.replacementTime = null;\r\n        // this is the number that should be inserted into the media url\r\n        this.replacementNumber = NaN;\r\n        // This is supposed to match the time encoded in the media Segment\r\n        this.mediaStartTime = NaN;\r\n        // When the source buffer timeOffset is set to MSETimeOffset this is the\r\n        // time that will match the seekTarget and video.currentTime\r\n        this.presentationStartTime = NaN;\r\n        // Do not schedule this segment until\r\n        this.availabilityStartTime = NaN;\r\n        // Ignore and  discard this segment after\r\n        this.availabilityEndTime = NaN;\r\n        // The index of the segment inside the availability window\r\n        this.availabilityIdx = NaN;\r\n        // For dynamic mpd's, this is the wall clock time that the video\r\n        // element currentTime should be presentationStartTime\r\n        this.wallStartTime = NaN;\r\n        this.representation = null;\r\n    }\r\n}\r\n\r\nexport default Segment;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass UTCTiming {\r\n    constructor() {\r\n        // UTCTiming is a DescriptorType and doesn't have any additional fields\r\n        this.schemeIdUri = '';\r\n        this.value = '';\r\n    }\r\n}\r\n\r\nexport default UTCTiming;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport XHRLoader from './XHRLoader.js';\r\nimport HeadRequest from './vo/HeadRequest.js';\r\nimport Error from './vo/Error.js';\r\nimport EventBus from './../core/EventBus.js';\r\nimport Events from './../core/events/Events.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\n\r\nconst FRAGMENT_LOADER_ERROR_LOADING_FAILURE = 1;\r\nconst FRAGMENT_LOADER_ERROR_NULL_REQUEST = 2;\r\nconst FRAGMENT_LOADER_MESSAGE_NULL_REQUEST = 'request is null';\r\n\r\nfunction FragmentLoader(config) {\r\n\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        xhrLoader;\r\n\r\n    function setup() {\r\n        xhrLoader = XHRLoader(context).create({\r\n            errHandler: config.errHandler,\r\n            metricsModel: config.metricsModel,\r\n            requestModifier: config.requestModifier\r\n        });\r\n    }\r\n\r\n    function checkForExistence(request) {\r\n        const report = function (success) {\r\n            eventBus.trigger(\r\n                Events.CHECK_FOR_EXISTENCE_COMPLETED, {\r\n                    request: request,\r\n                    exists: success\r\n                }\r\n            );\r\n        };\r\n\r\n        if (request) {\r\n            let headRequest = new HeadRequest(request.url);\r\n\r\n            xhrLoader.load({\r\n                request: headRequest,\r\n                success: function () {\r\n                    report(true);\r\n                },\r\n                error: function () {\r\n                    report(false);\r\n                }\r\n            });\r\n        } else {\r\n            report(false);\r\n        }\r\n    }\r\n\r\n    function load(request) {\r\n        const report = function (data, error) {\r\n            eventBus.trigger(Events.LOADING_COMPLETED, {\r\n                request: request,\r\n                response: data || null,\r\n                error: error || null,\r\n                sender: instance\r\n            });\r\n        };\r\n\r\n        if (request) {\r\n            xhrLoader.load({\r\n                request: request,\r\n                progress: function () {\r\n                    eventBus.trigger(Events.LOADING_PROGRESS, {\r\n                        request: request\r\n                    });\r\n                },\r\n                success: function (data) {\r\n                    report(data);\r\n                },\r\n                error: function (xhr, statusText, errorText) {\r\n                    report(\r\n                        undefined,\r\n                        new Error(\r\n                            FRAGMENT_LOADER_ERROR_LOADING_FAILURE,\r\n                            errorText,\r\n                            statusText\r\n                        )\r\n                    );\r\n                }\r\n            });\r\n        } else {\r\n            report(\r\n                undefined,\r\n                new Error(\r\n                    FRAGMENT_LOADER_ERROR_NULL_REQUEST,\r\n                    FRAGMENT_LOADER_MESSAGE_NULL_REQUEST\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function abort() {\r\n        if (xhrLoader) {\r\n            xhrLoader.abort();\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        if (xhrLoader) {\r\n            xhrLoader.abort();\r\n            xhrLoader = null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        checkForExistence: checkForExistence,\r\n        load: load,\r\n        abort: abort,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nFragmentLoader.__dashjs_factory_name = 'FragmentLoader';\r\n\r\nconst factory = FactoryMaker.getClassFactory(FragmentLoader);\r\nfactory.FRAGMENT_LOADER_ERROR_LOADING_FAILURE = FRAGMENT_LOADER_ERROR_LOADING_FAILURE;\r\nfactory.FRAGMENT_LOADER_ERROR_NULL_REQUEST = FRAGMENT_LOADER_ERROR_NULL_REQUEST;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport XlinkController from './controllers/XlinkController.js';\r\nimport XHRLoader from './XHRLoader.js';\r\nimport URLUtils from './utils/URLUtils.js';\r\nimport TextRequest from './vo/TextRequest.js';\r\nimport Error from './vo/Error.js';\r\nimport HTTPRequest from './vo/metrics/HTTPRequest.js';\r\nimport EventBus from '../core/EventBus.js';\r\nimport Events from '../core/events/Events.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\n\r\nconst MANIFEST_LOADER_ERROR_PARSING_FAILURE = 1;\r\nconst MANIFEST_LOADER_ERROR_LOADING_FAILURE = 2;\r\nconst MANIFEST_LOADER_MESSAGE_PARSING_FAILURE = 'parsing failed';\r\n\r\nfunction ManifestLoader(config) {\r\n\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n    const urlUtils = URLUtils(context).getInstance();\r\n    const parser = config.parser;\r\n\r\n    let instance,\r\n        xhrLoader,\r\n        xlinkController;\r\n\r\n    function setup() {\r\n        eventBus.on(Events.XLINK_READY, onXlinkReady, instance);\r\n\r\n        xhrLoader = XHRLoader(context).create({\r\n            errHandler: config.errHandler,\r\n            metricsModel: config.metricsModel,\r\n            requestModifier: config.requestModifier\r\n        });\r\n\r\n        xlinkController = XlinkController(context).create({\r\n            errHandler: config.errHandler,\r\n            metricsModel: config.metricsModel,\r\n            requestModifier: config.requestModifier\r\n        });\r\n    }\r\n\r\n    function onXlinkReady(event) {\r\n        eventBus.trigger(\r\n            Events.INTERNAL_MANIFEST_LOADED, {\r\n                manifest: event.manifest\r\n            }\r\n        );\r\n    }\r\n\r\n    function load (url) {\r\n        const request = new TextRequest(url, HTTPRequest.MPD_TYPE);\r\n\r\n        xhrLoader.load({\r\n            request: request,\r\n            success: function (data, textStatus, xhr) {\r\n                var actualUrl;\r\n                var baseUri;\r\n\r\n                // Handle redirects for the MPD - as per RFC3986 Section 5.1.3\r\n                // also handily resolves relative MPD URLs to absolute\r\n                if (xhr.responseURL && xhr.responseURL !== url) {\r\n                    baseUri = urlUtils.parseBaseUrl(xhr.responseURL);\r\n                    actualUrl = xhr.responseURL;\r\n                } else {\r\n                    // usually this case will be caught and resolved by\r\n                    // xhr.responseURL above but it is not available for IE11\r\n                    // baseUri must be absolute for BaseURL resolution later\r\n                    if (urlUtils.isRelative(url)) {\r\n                        url = urlUtils.parseBaseUrl(window.location.href) + url;\r\n                    }\r\n\r\n                    baseUri = urlUtils.parseBaseUrl(url);\r\n                }\r\n\r\n                const manifest = parser.parse(data, xlinkController);\r\n\r\n                if (manifest) {\r\n                    manifest.url = actualUrl || url;\r\n\r\n                    // URL from which the MPD was originally retrieved (MPD updates will not change this value)\r\n                    if (!manifest.originalUrl) {\r\n                        manifest.originalUrl = manifest.url;\r\n                    }\r\n\r\n                    manifest.baseUri = baseUri;\r\n                    manifest.loadedTime = new Date();\r\n                    xlinkController.resolveManifestOnLoad(manifest);\r\n                } else {\r\n                    eventBus.trigger(\r\n                        Events.INTERNAL_MANIFEST_LOADED, {\r\n                            manifest: null,\r\n                            error: new Error(\r\n                                MANIFEST_LOADER_ERROR_PARSING_FAILURE,\r\n                                MANIFEST_LOADER_MESSAGE_PARSING_FAILURE\r\n                            )\r\n                        }\r\n                    );\r\n                }\r\n            },\r\n            error: function (xhr, statusText, errorText) {\r\n                eventBus.trigger(\r\n                    Events.INTERNAL_MANIFEST_LOADED, {\r\n                        manifest: null,\r\n                        error: new Error(\r\n                            MANIFEST_LOADER_ERROR_LOADING_FAILURE,\r\n                            `Failed loading manifest: ${url}, ${errorText}`\r\n                        )\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.XLINK_READY, onXlinkReady, instance);\r\n\r\n        if (xlinkController) {\r\n            xlinkController.reset();\r\n            xlinkController = null;\r\n        }\r\n\r\n        if (xhrLoader) {\r\n            xhrLoader.abort();\r\n            xhrLoader = null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        load: load,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nManifestLoader.__dashjs_factory_name = 'ManifestLoader';\r\n\r\nconst factory = FactoryMaker.getClassFactory(ManifestLoader);\r\nfactory.MANIFEST_LOADER_ERROR_PARSING_FAILURE = MANIFEST_LOADER_ERROR_PARSING_FAILURE;\r\nfactory.MANIFEST_LOADER_ERROR_LOADING_FAILURE = MANIFEST_LOADER_ERROR_LOADING_FAILURE;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from '../core/EventBus.js';\r\nimport Events from '../core/events/Events.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\nimport Debug from '../core/Debug.js';\r\n\r\nfunction ManifestUpdater() {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        refreshDelay,\r\n        refreshTimer,\r\n        isStopped,\r\n        isUpdating,\r\n        manifestLoader,\r\n        manifestModel,\r\n        dashManifestModel;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.manifestModel) {\r\n            manifestModel = config.manifestModel;\r\n        }\r\n        if (config.dashManifestModel) {\r\n            dashManifestModel = config.dashManifestModel;\r\n        }\r\n    }\r\n\r\n    function initialize(loader) {\r\n        manifestLoader = loader;\r\n        refreshDelay = NaN;\r\n        refreshTimer = null;\r\n        isUpdating = false;\r\n        isStopped = true;\r\n\r\n        eventBus.on(Events.STREAMS_COMPOSED, onStreamsComposed, this);\r\n        eventBus.on(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\r\n        eventBus.on(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\r\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\r\n    }\r\n\r\n    function setManifest(manifest) {\r\n        update(manifest);\r\n    }\r\n\r\n    function getManifestLoader() {\r\n        return manifestLoader;\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\r\n        eventBus.off(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\r\n        eventBus.off(Events.STREAMS_COMPOSED, onStreamsComposed, this);\r\n        eventBus.off(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\r\n\r\n        isStopped = true;\r\n        isUpdating = false;\r\n        clear();\r\n        refreshDelay = NaN;\r\n    }\r\n\r\n    function clear() {\r\n        if (refreshTimer !== null) {\r\n            clearInterval(refreshTimer);\r\n            refreshTimer = null;\r\n        }\r\n    }\r\n\r\n    function startManifestRefreshTimer() {\r\n        clear();\r\n        if (!isNaN(refreshDelay)) {\r\n            log('Refresh manifest in ' + refreshDelay + ' seconds.');\r\n            refreshTimer = setTimeout(onRefreshTimer, Math.min(refreshDelay * 1000, Math.pow(2, 31) - 1), this);\r\n        }\r\n    }\r\n\r\n    function update(manifest) {\r\n        var delay,\r\n            timeSinceLastUpdate;\r\n\r\n        var date = new Date();\r\n\r\n        manifestModel.setValue(manifest);\r\n        log('Manifest has been refreshed at ' + date + '[' + date.getTime() / 1000 + '] ');\r\n\r\n        delay = dashManifestModel.getRefreshDelay(manifest);\r\n        timeSinceLastUpdate = (new Date().getTime() - manifest.loadedTime.getTime()) / 1000;\r\n        refreshDelay = Math.max(delay - timeSinceLastUpdate, 0);\r\n\r\n        eventBus.trigger(Events.MANIFEST_UPDATED, {manifest: manifest});\r\n\r\n        if (!isStopped) {\r\n            startManifestRefreshTimer();\r\n        }\r\n    }\r\n\r\n    function onRefreshTimer() {\r\n        var manifest,\r\n            url;\r\n\r\n        if (isStopped || isUpdating) return;\r\n\r\n        isUpdating = true;\r\n        manifest = manifestModel.getValue();\r\n        url = manifest.url;\r\n\r\n        if (manifest.hasOwnProperty('Location')) {\r\n            url = manifest.Location;\r\n        }\r\n\r\n        //log(\"Refresh manifest @ \" + url);\r\n\r\n        manifestLoader.load(url);\r\n    }\r\n\r\n    function onManifestLoaded(e) {\r\n        if (!e.error) {\r\n            update(e.manifest);\r\n        }\r\n    }\r\n\r\n    function onPlaybackStarted (/*e*/) {\r\n        isStopped = false;\r\n        startManifestRefreshTimer();\r\n    }\r\n\r\n    function onPlaybackPaused(/*e*/) {\r\n        isStopped = true;\r\n        clear();\r\n    }\r\n\r\n    function onStreamsComposed(/*e*/) {\r\n        // When streams are ready we can consider manifest update completed. Resolve the update promise.\r\n        isUpdating = false;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        setManifest: setManifest,\r\n        getManifestLoader: getManifestLoader,\r\n        setConfig: setConfig,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\nManifestUpdater.__dashjs_factory_name = 'ManifestUpdater';\r\nexport default FactoryMaker.getSingletonFactory(ManifestUpdater);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport UTCTiming from '../dash/vo/UTCTiming.js';\r\nimport PlaybackController from './controllers/PlaybackController.js';\r\nimport StreamController from './controllers/StreamController.js';\r\nimport MediaController from './controllers/MediaController.js';\r\nimport ManifestLoader from './ManifestLoader.js';\r\nimport LiveEdgeFinder from './utils/LiveEdgeFinder.js';\r\nimport ErrorHandler from './utils/ErrorHandler.js';\r\nimport Capabilities from './utils/Capabilities.js';\r\nimport TextTracks from './TextTracks.js';\r\nimport SourceBufferController from './controllers/SourceBufferController.js';\r\nimport VirtualBuffer from './VirtualBuffer.js';\r\nimport RequestModifier from './utils/RequestModifier.js';\r\nimport TextSourceBuffer from './TextSourceBuffer.js';\r\nimport URIQueryAndFragmentModel from './models/URIQueryAndFragmentModel.js';\r\nimport ManifestModel from './models/ManifestModel.js';\r\nimport MediaPlayerModel from './models/MediaPlayerModel.js';\r\nimport MetricsModel from './models/MetricsModel.js';\r\nimport AbrController from './controllers/AbrController.js';\r\nimport TimeSyncController from './controllers/TimeSyncController.js';\r\nimport ABRRulesCollection from './rules/abr/ABRRulesCollection.js';\r\nimport VideoModel from './models/VideoModel.js';\r\nimport RulesController from './rules/RulesController.js';\r\nimport SynchronizationRulesCollection from './rules/synchronization/SynchronizationRulesCollection.js';\r\nimport MediaSourceController from './controllers/MediaSourceController.js';\r\nimport BaseURLController from './controllers/BaseURLController.js';\r\nimport Debug from './../core/Debug.js';\r\nimport EventBus from './../core/EventBus.js';\r\nimport Events from './../core/events/Events.js';\r\nimport MediaPlayerEvents from './MediaPlayerEvents.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\n//Dash\r\nimport DashAdapter from '../dash/DashAdapter.js';\r\nimport DashParser from '../dash/DashParser.js';\r\nimport DashManifestModel from '../dash/models/DashManifestModel.js';\r\nimport DashMetrics from '../dash/DashMetrics.js';\r\nimport TimelineConverter from '../dash/utils/TimelineConverter.js';\r\n\r\n/**\r\n * @Module MediaPlayer\r\n * @description The MediaPlayer is the primary dash.js Module and a Facade to build your player around.\r\n * It will allow you access to all the important dash.js properties/methods via the public API and all the\r\n * events to build a robust DASH media player.\r\n */\r\nfunction MediaPlayer() {\r\n\r\n    const VERSION = '2.1.0';\r\n    const PLAYBACK_NOT_INITIALIZED_ERROR = 'You must first call play() to init playback before calling this method';\r\n    const ELEMENT_NOT_ATTACHED_ERROR = 'You must first call attachView() to set the video element before calling this method';\r\n    const SOURCE_NOT_ATTACHED_ERROR = 'You must first call attachSource() with a valid source before calling this method';\r\n    const MEDIA_PLAYER_NOT_INITIALIZED_ERROR = 'MediaPlayer not initialized!';\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n    let debug = Debug(context).getInstance();\r\n    let log = debug.log;\r\n\r\n    let instance,\r\n        source,\r\n        protectionData,\r\n        mediaPlayerInitialized,\r\n        playbackInitialized,\r\n        autoPlay,\r\n        abrController,\r\n        mediaController,\r\n        protectionController,\r\n        metricsReportingController,\r\n        adapter,\r\n        metricsModel,\r\n        mediaPlayerModel,\r\n        errHandler,\r\n        capabilities,\r\n        streamController,\r\n        rulesController,\r\n        playbackController,\r\n        dashMetrics,\r\n        dashManifestModel,\r\n        videoModel,\r\n        textSourceBuffer;\r\n\r\n    function setup() {\r\n        mediaPlayerInitialized = false;\r\n        playbackInitialized = false;\r\n        autoPlay = true;\r\n        protectionController = null;\r\n        protectionData = null;\r\n        adapter = null;\r\n        Events.extend(MediaPlayerEvents);\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n    }\r\n\r\n    /**\r\n     * Upon creating the MediaPlayer you must call initialize before you call anything else.\r\n     * There is one exception to this rule. It is crucial to call {@link module:MediaPlayer#extend extend()}\r\n     * with all your extensions prior to calling initialize.\r\n     *\r\n     * ALL arguments are optional and there are individual methods to set each argument later on.\r\n     * The args in this method are just for convenience and should only be used for a simple player setup.\r\n     *\r\n     * @param {HTML5MediaElement} view - Optional arg to set the video element. {@link module:MediaPlayer#attachView attachView()}\r\n     * @param {string} source - Optional arg to set the media source. {@link module:MediaPlayer#attachSource attachSource()}\r\n     * @param {boolean} AutoPlay - Optional arg to set auto play. {@link module:MediaPlayer#setAutoPlay setAutoPlay()}\r\n     * @see {@link module:MediaPlayer#attachView attachView()}\r\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\r\n     * @see {@link module:MediaPlayer#setAutoPlay setAutoPlay()}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function initialize(view, source, AutoPlay) {\r\n\r\n        capabilities = Capabilities(context).getInstance();\r\n        errHandler = ErrorHandler(context).getInstance();\r\n\r\n        if (!capabilities.supportsMediaSource()) {\r\n            errHandler.capabilityError('mediasource');\r\n            return;\r\n        }\r\n\r\n        if (mediaPlayerInitialized) return;\r\n        mediaPlayerInitialized = true;\r\n\r\n        abrController = AbrController(context).getInstance();\r\n\r\n        playbackController = PlaybackController(context).getInstance();\r\n        mediaController = MediaController(context).getInstance();\r\n        mediaController.initialize();\r\n        dashManifestModel = DashManifestModel(context).getInstance();\r\n        dashMetrics = DashMetrics(context).getInstance();\r\n        metricsModel = MetricsModel(context).getInstance();\r\n        metricsModel.setConfig({adapter: createAdaptor()});\r\n\r\n        restoreDefaultUTCTimingSources();\r\n        setAutoPlay(AutoPlay !== undefined ? AutoPlay : true);\r\n\r\n        if (view) {\r\n            attachView(view);\r\n        }\r\n\r\n        if (source) {\r\n            attachSource(source);\r\n        }\r\n\r\n        log('[dash.js ' + VERSION + '] ' + 'MediaPlayer has been initialized');\r\n    }\r\n\r\n    /**\r\n     * The ready state of the MediaPlayer based on both the video element and MPD source being defined.\r\n     *\r\n     * @returns {boolean} The current ready state of the MediaPlayer\r\n     * @see {@link module:MediaPlayer#attachView attachView()}\r\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function isReady() {\r\n        return (!!videoModel && !!source);\r\n    }\r\n\r\n    /**\r\n     * The play method initiates playback of the media defined by the {@link module:MediaPlayer#attachSource attachSource()} method.\r\n     * This method will call play on the native Video Element.\r\n     *\r\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function play() {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        if (!autoPlay || (isPaused() && playbackInitialized)) {\r\n            playbackController.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method will call pause on the native Video Element.\r\n     *\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function pause() {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        playbackController.pause();\r\n    }\r\n\r\n    /**\r\n     * Returns a Boolean that indicates whether the Video Element is paused.\r\n     * @return {boolean}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function isPaused() {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        return playbackController.isPaused();\r\n    }\r\n\r\n    /**\r\n     * Returns a Boolean that indicates whether the media is in the process of seeking to a new position.\r\n     * @return {boolean}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function isSeeking() {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        return playbackController.isSeeking();\r\n    }\r\n\r\n    /**\r\n     * Use this method to set the native Video Element's muted state. Takes a Boolean that determines whether audio is muted. true if the audio is muted and false otherwise.\r\n     * @param {boolean} value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setMute(value) {\r\n        if (!videoModel) {\r\n            throw ELEMENT_NOT_ATTACHED_ERROR;\r\n        }\r\n        getVideoElement().muted = value;\r\n    }\r\n\r\n    /**\r\n     * A Boolean that determines whether audio is muted.\r\n     * @returns {boolean}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function isMuted() {\r\n        if (!videoModel) {\r\n            throw ELEMENT_NOT_ATTACHED_ERROR;\r\n        }\r\n        return getVideoElement().muted;\r\n    }\r\n\r\n    /**\r\n     * A double indicating the audio volume, from 0.0 (silent) to 1.0 (loudest).\r\n     * @param {number} value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setVolume(value) {\r\n        if (!videoModel) {\r\n            throw ELEMENT_NOT_ATTACHED_ERROR;\r\n        }\r\n        getVideoElement().volume = value;\r\n    }\r\n\r\n    /**\r\n     * Returns the current audio volume, from 0.0 (silent) to 1.0 (loudest).\r\n     * @returns {number}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getVolume() {\r\n        if (!videoModel) {\r\n            throw ELEMENT_NOT_ATTACHED_ERROR;\r\n        }\r\n        return getVideoElement().volume;\r\n    }\r\n\r\n    /**\r\n     * The length of the buffer for a given media type, in seconds. Valid media types are \"video\", \"audio\" and \"fragmentedText\". If no type\r\n     * is passed in, then the minimum of the video and the audio buffer length is returned. The value is returned to a precision of two decimal places.\r\n     * NaN is returned if an invalid type is requested, or if the presentation does not contain that type or if no arguments are passed and the\r\n     * presentation doers not include any audio or video adaption sets.\r\n     *\r\n     * @returns {number} The length of the buffer for the given media type, in seconds.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getBufferLength(type) {\r\n\r\n        if (!type)\r\n        {\r\n            let videoBuffer = getTracksFor('video').length > 0 ? getDashMetrics().getCurrentBufferLevel(getMetricsFor('video')) : Number.MAX_SAFE_INTEGER;\r\n            let audioBuffer = getTracksFor('audio').length > 0 ? getDashMetrics().getCurrentBufferLevel(getMetricsFor('audio')) : Number.MAX_SAFE_INTEGER;\r\n            let textBuffer = getTracksFor('fragmentedText').length > 0 ? getDashMetrics().getCurrentBufferLevel(getMetricsFor('fragmentedText')) : Number.MAX_SAFE_INTEGER;\r\n            return Math.min(videoBuffer,audioBuffer,textBuffer).toPrecision(3);\r\n        }\r\n        else\r\n        {\r\n            if (type === 'video' || type === 'audio' || type === 'fragmentedText')\r\n            {\r\n                let buffer = getDashMetrics().getCurrentBufferLevel(getMetricsFor(type));\r\n                return buffer ? buffer.toPrecision(3) : NaN;\r\n            }\r\n            else\r\n            {\r\n                log('Warning  - getBufferLength requested for invalid type');\r\n                return NaN;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The timeShiftBufferLength (DVR Window), in seconds.\r\n     *\r\n     * @returns {number} The window of allowable play time behind the live point of a live stream.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getDVRWindowSize() {\r\n        var metric = getDVRInfoMetric();\r\n        if (!metric) {\r\n            return 0;\r\n        }\r\n        return metric.manifestInfo.DVRWindowSize;\r\n    }\r\n\r\n    /**\r\n     * This method should only be used with a live stream that has a valid timeShiftBufferLength (DVR Window).\r\n     * NOTE - If you do not need the raw offset value (i.e. media analytics, tracking, etc) consider using the {@link module:MediaPlayer#seek seek()} method\r\n     * which will calculate this value for you and set the video element's currentTime property all in one simple call.\r\n     *\r\n     * @param value {number} A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected.\r\n     * @returns {number} A value that is relative the available range within the timeShiftBufferLength (DVR Window).\r\n     * @see {@link module:MediaPlayer#seek seek()}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getDVRSeekOffset(value) {\r\n        var metric = getDVRInfoMetric();\r\n\r\n        if (!metric) {\r\n            return 0;\r\n        }\r\n\r\n        var val = metric.range.start + value;\r\n\r\n        if (val > metric.range.end) {\r\n            val = metric.range.end;\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Sets the currentTime property of the attached video element.  If it is a live stream with a\r\n     * timeShiftBufferLength, then the DVR window offset will be automatically calculated.\r\n     *\r\n     * @param value {number} A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected\r\n     * @see {@link module:MediaPlayer#getDVRSeekOffset getDVRSeekOffset()}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function seek(value) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        var s = playbackController.getIsDynamic() ? getDVRSeekOffset(value) : value;\r\n        playbackController.seek(s);\r\n    }\r\n\r\n\r\n    /**\r\n     * Current time of the playhead, in seconds.\r\n     *\r\n     * If called with no arguments then the returned time value is time elapsed since the start point of the first stream.\r\n     * However if a stream ID is supplied then time is relative to the start of that stream, or is null if there is no such stream id in the manifest.\r\n     *\r\n     * @param streamId The ID of a stream that the returned playhead time must be relative to the start of. If undefined, then playhead time is relative to the first stream.\r\n     * @returns {number} The current playhead time of the media, or null.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function time(streamId) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        var t = getVideoElement().currentTime;\r\n\r\n        if (streamId !== undefined) {\r\n            t = streamController.getTimeRelativeToStreamId(t, streamId);\r\n        }\r\n\r\n        if (playbackController.getIsDynamic()) {\r\n            var metric = getDVRInfoMetric();\r\n            t = (metric === null) ? 0 : duration() - (metric.range.end - metric.time);\r\n        }\r\n        return t;\r\n    }\r\n\r\n    /**\r\n     * Duration of the media's playback, in seconds.\r\n     *\r\n     * @returns {number} The current duration of the media.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function duration() {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        var d = getVideoElement().duration;\r\n\r\n        if (playbackController.getIsDynamic()) {\r\n\r\n            var metric = getDVRInfoMetric();\r\n            var range;\r\n\r\n            if (!metric) {\r\n                return 0;\r\n            }\r\n\r\n            range = metric.range.end - metric.range.start;\r\n            d = range < metric.manifestInfo.DVRWindowSize ? range : metric.manifestInfo.DVRWindowSize;\r\n        }\r\n        return d;\r\n    }\r\n\r\n    /**\r\n     * Use this method to get the current playhead time as an absolute value, the time in seconds since midnight UTC, Jan 1 1970.\r\n     * Note - this property only has meaning for live streams. If called before play() has begun, it will return a value of NaN.\r\n     *\r\n     * @returns {number} The current playhead time as UTC timestamp.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function timeAsUTC() {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        if (time() < 0) {\r\n            return NaN;\r\n        }\r\n        return getAsUTC(time());\r\n    }\r\n\r\n    /**\r\n     * Use this method to get the current duration as an absolute value, the time in seconds since midnight UTC, Jan 1 1970.\r\n     * Note - this property only has meaning for live streams.\r\n     *\r\n     * @returns {number} The current duration as UTC timestamp.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function durationAsUTC() {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        return getAsUTC(duration());\r\n    }\r\n\r\n    /**\r\n     * A utility methods which converts UTC timestamp value into a valid time and date string.\r\n     *\r\n     * @param {number} time - UTC timestamp to be converted into date and time.\r\n     * @param {string} locales - a region identifier (i.e. en_US).\r\n     * @param {boolean} hour12 - 12 vs 24 hour. Set to true for 12 hour time formatting.\r\n     * @returns {string} A formatted time and date string.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function formatUTC(time, locales, hour12) {\r\n        var dt = new Date(time * 1000);\r\n        var d = dt.toLocaleDateString(locales);\r\n        var t = dt.toLocaleTimeString(locales, {hour12: hour12});\r\n        return t + ' ' + d;\r\n    }\r\n\r\n    /**\r\n     * A utility method which converts seconds into TimeCode (i.e. 300 --> 05:00).\r\n     *\r\n     * @param value {number} A number in seconds to be converted into a formatted time code.\r\n     * @returns {string} A formatted time code string.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function convertToTimeCode(value) {\r\n        value = Math.max(value, 0);\r\n\r\n        var h = Math.floor(value / 3600);\r\n        var m = Math.floor((value % 3600) / 60);\r\n        var s = Math.floor((value % 3600) % 60);\r\n        return (h === 0 ? '' : (h < 10 ? '0' + h.toString() + ':' : h.toString() + ':')) + (m < 10 ? '0' + m.toString() : m.toString()) + ':' + (s < 10 ? '0' + s.toString() : s.toString());\r\n    }\r\n\r\n    /**\r\n     * This method should be used to extend or replace internal dash.js objects.\r\n     * There are two ways to extend dash.js (determined by the override argument):\r\n     * <ol>\r\n     * <li>If you set override to true any public method or property in your custom object will\r\n     * override the dash.js parent object's property(ies) and will be used instead but the\r\n     * dashj.s parent module will still be created.</li>\r\n     *\r\n     * <li>If you set override to false your object will completely replace the dash.js object.\r\n     * (Note: This is how it was in 1.x of Dash.js with Dijon).</li>\r\n     * </ol>\r\n     * <b>When you extend you get access to this.context, this.factory and this.parent to operate with in your custom object.</b>\r\n     * <ul>\r\n     * <li><b>this.context</b> - can be used to pass context for singleton access.</li>\r\n     * <li><b>this.factory</b> - can be used to call factory.getSingletonInstance().</li>\r\n     * <li><b>this.parent</b> - is the reference of the parent object to call other public methods. (this.parent is excluded if you extend with override set to false or option 2)</li>\r\n     * </ul>\r\n     * <b>You must call extend before you call initialize</b>\r\n     * @see {@link module:MediaPlayer#initialize initialize()}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function extend(parentNameString, childInstance, override) {\r\n        FactoryMaker.extend(parentNameString, childInstance, override, context);\r\n    }\r\n\r\n    /**\r\n     * Use the on method to listen for public events found in MediaPlayer.events. {@link MediaPlayerEvents}\r\n     *\r\n     * @param {String} type - {@link MediaPlayerEvents}\r\n     * @param {Function} listener - callback method when the event fires.\r\n     * @param {Object} scope - context of the listener so it can be removed properly.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function on(type, listener, scope) {\r\n        eventBus.on(type, listener, scope);\r\n    }\r\n\r\n    /**\r\n     * Use the off method to remove listeners for public events found in MediaPlayer.events. {@link MediaPlayerEvents}\r\n     *\r\n     * @param {String} type - {@link MediaPlayerEvents}\r\n     * @param {Function} listener - callback method when the event fires.\r\n     * @param {Object} scope - context of the listener so it can be removed properly.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function off(type, listener, scope) {\r\n        eventBus.off(type, listener, scope);\r\n    }\r\n\r\n    /**\r\n     * Current version of Dash.js\r\n     * @returns {string} the current dash.js version string.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getVersion() {\r\n        return VERSION;\r\n    }\r\n\r\n    /**\r\n     * Use this method to access the dash.js logging class.\r\n     *\r\n     * @returns {@link module:Debug}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getDebug() {\r\n        return debug;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since version 2.1.0.  <b>Instead use:</b>\r\n     * <ul>\r\n     * <li>{@link module:MediaPlayer#getVideoElement getVideoElement()}</li>\r\n     * <li>{@link module:MediaPlayer#getSource getSource()}</li>\r\n     * <li>{@link module:MediaPlayer#getVideoContainer getVideoContainer()}</li>\r\n     * <li>{@link module:MediaPlayer#getTTMLRenderingDiv getTTMLRenderingDiv()}</li>\r\n     * </ul>\r\n     *\r\n     * @returns {@link VideoModel}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getVideoModel() {\r\n        if (!videoModel) {\r\n            throw ELEMENT_NOT_ATTACHED_ERROR;\r\n        }\r\n        return videoModel;\r\n    }\r\n\r\n    /**\r\n     * <p>Changing this value will lower or increase live stream latency.  The detected segment duration will be multiplied by this value\r\n     * to define a time in seconds to delay a live stream from the live edge.</p>\r\n     * <p>Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.</p>\r\n     *\r\n     * @param value {int} Represents how many segment durations to delay the live stream.\r\n     * @default 4\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link module:MediaPlayer#useSuggestedPresentationDelay useSuggestedPresentationDelay()}\r\n     * @instance\r\n     */\r\n    function setLiveDelayFragmentCount(value) {\r\n        mediaPlayerModel.setLiveDelayFragmentCount(value);\r\n    }\r\n\r\n    /**\r\n     * <p>Equivalent in seconds of setLiveDelayFragmentCount</p>\r\n     * <p>Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.</p>\r\n     * <p>This value should be less than the manifest duration by a couple of segment durations to avoid playback issues</p>\r\n     * <p>If set, this parameter will take precedence over setLiveDelayFragmentCount and manifest info</p>\r\n     *\r\n     * @param value {int} Represents how many seconds to delay the live stream.\r\n     * @default undefined\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link module:MediaPlayer#useSuggestedPresentationDelay useSuggestedPresentationDelay()}\r\n     * @instance\r\n     */\r\n    function setLiveDelay(value) {\r\n        mediaPlayerModel.setLiveDelay(value);\r\n    }\r\n\r\n    /**\r\n     * <p>Set to true if you would like to override the default live delay and honor the SuggestedPresentationDelay attribute in by the manifest.</p>\r\n     * @param value {boolean}\r\n     * @default false\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link module:MediaPlayer#setLiveDelayFragmentCount setLiveDelayFragmentCount()}\r\n     * @instance\r\n     */\r\n    function useSuggestedPresentationDelay(value) {\r\n        mediaPlayerModel.setUseSuggestedPresentationDelay(value);\r\n    }\r\n\r\n    /**\r\n     * Set to false if you would like to disable the last known bit rate from being stored during playback and used\r\n     * to set the initial bit rate for subsequent playback within the expiration window.\r\n     *\r\n     * The default expiration is one hour, defined in milliseconds. If expired, the default initial bit rate (closest to 1000 kbps) will be used\r\n     * for that session and a new bit rate will be stored during that session.\r\n     *\r\n     * @param enable - Boolean - Will toggle if feature is enabled. True to enable, False to disable.\r\n     * @param ttl Number - (Optional) A value defined in milliseconds representing how long to cache the bit rate for. Time to live.\r\n     * @default enable = True, ttl = 360000 (1 hour)\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     *\r\n     */\r\n    function enableLastBitrateCaching(enable, ttl) {\r\n        mediaPlayerModel.setLastBitrateCachingInfo(enable, ttl);\r\n    }\r\n\r\n    /**\r\n     * Set to false if you would like to disable the last known lang for audio (or camera angle for video) from being stored during playback and used\r\n     * to set the initial settings for subsequent playback within the expiration window.\r\n     *\r\n     * The default expiration is one hour, defined in milliseconds. If expired, the default settings will be used\r\n     * for that session and a new settings will be stored during that session.\r\n     *\r\n     * @param enable - Boolean - Will toggle if feature is enabled. True to enable, False to disable.\r\n     * @param ttl Number - (Optional) A value defined in milliseconds representing how long to cache the settings for. Time to live.\r\n     * @default enable = True, ttl = 360000 (1 hour)\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     *\r\n     */\r\n    function enableLastMediaSettingsCaching(enable, ttl) {\r\n        mediaPlayerModel.setLastMediaSettingsCachingInfo(enable, ttl);\r\n    }\r\n\r\n    /**\r\n     * When switching multi-bitrate content (auto or manual mode) this property specifies the maximum bitrate allowed.\r\n     * If you set this property to a value lower than that currently playing, the switching engine will switch down to\r\n     * satisfy this requirement. If you set it to a value that is lower than the lowest bitrate, it will still play\r\n     * that lowest bitrate.\r\n     *\r\n     * You can set or remove this bitrate cap at anytime before or during playback.  To clear this setting you must use the API\r\n     * and set the value param to NaN.\r\n     *\r\n     * This feature is typically used to reserve higher bitrates for playback only when the player is in large or full-screen format.\r\n     *\r\n     * @param type {String} 'video' or 'audio' are the type options.\r\n     * @param value {int} Value in kbps representing the maximum bitrate allowed.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setMaxAllowedBitrateFor(type, value) {\r\n        abrController.setMaxAllowedBitrateFor(type, value);\r\n    }\r\n\r\n    /**\r\n     * @param type {string} 'video' or 'audio' are the type options.\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link module:MediaPlayer#setMaxAllowedBitrateFor setMaxAllowedBitrateFor()}\r\n     * @instance\r\n     */\r\n    function getMaxAllowedBitrateFor(type) {\r\n        return abrController.getMaxAllowedBitrateFor(type);\r\n    }\r\n\r\n    /**\r\n     * When switching multi-bitrate content (auto or manual mode) this property specifies the maximum representation allowed,\r\n     * as a proportion of the size of the representation set.\r\n     *\r\n     * You can set or remove this cap at anytime before or during playback. To clear this setting you must use the API\r\n     * and set the value param to NaN.\r\n     *\r\n     * If both this and maxAllowedBitrate are defined, maxAllowedBitrate is evaluated first, then maxAllowedRepresentation,\r\n     * i.e. the lowest value from executing these rules is used.\r\n     *\r\n     * This feature is typically used to reserve higher representations for playback only when connected over a fast connection.\r\n     *\r\n     * @param type String 'video' or 'audio' are the type options.\r\n     * @param value number between 0 and 1, where 1 is allow all representations, and 0 is allow only the lowest.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setMaxAllowedRepresentationRatioFor(type, value) {\r\n        abrController.setMaxAllowedRepresentationRatioFor(type, value);\r\n    }\r\n\r\n    /**\r\n     * @param type String 'video' or 'audio' are the type options.\r\n     * @returns {number} The current representation ratio cap.\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link MediaPlayer#setMaxAllowedRepresentationRatioFor setMaxAllowedRepresentationRatioFor()}\r\n     * @instance\r\n     */\r\n    function getMaxAllowedRepresentationRatioFor(type) {\r\n        return abrController.getMaxAllowedRepresentationRatioFor(type);\r\n    }\r\n\r\n    /**\r\n     * <p>Set to false to prevent stream from auto-playing when the view is attached.</p>\r\n     *\r\n     * @param value {boolean}\r\n     * @default true\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link module:MediaPlayer#attachView attachView()}\r\n     * @instance\r\n     *\r\n     */\r\n    function setAutoPlay(value) {\r\n        autoPlay = value;\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean} The current autoPlay state.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getAutoPlay() {\r\n        return autoPlay;\r\n    }\r\n\r\n    /**\r\n     * Set to true if you would like dash.js to keep downloading fragments in the background\r\n     * when the video element is paused.\r\n     *\r\n     * @default false\r\n     * @param value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setScheduleWhilePaused(value) {\r\n        mediaPlayerModel.setScheduleWhilePaused(value);\r\n    }\r\n\r\n    /**\r\n     * Returns a boolean of the current state of ScheduleWhilePaused.\r\n     * @returns {boolean}\r\n     * @see {@link module:MediaPlayer#setScheduleWhilePaused setScheduleWhilePaused()}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getScheduleWhilePaused() {\r\n        return mediaPlayerModel.getScheduleWhilePaused();\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the DashMetrics.js Module. You use this Module to get access to all the public metrics\r\n     * stored in dash.js\r\n     *\r\n     * @see {@link module:DashMetrics}\r\n     * @returns {object}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getDashMetrics() {\r\n        return dashMetrics;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param type\r\n     * @returns {object}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getMetricsFor(type) {\r\n        return metricsModel.getReadOnlyMetricsFor(type);\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @returns {object}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getQualityFor(type) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        return abrController.getQualityFor(type, streamController.getActiveStreamInfo());\r\n    }\r\n\r\n    /**\r\n     * Sets the current quality for media type instead of letting the ABR Heuristics automatically selecting it..\r\n     *\r\n     * @param type\r\n     * @param value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setQualityFor(type, value) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        abrController.setPlaybackQuality(type, streamController.getActiveStreamInfo(), value);\r\n    }\r\n\r\n    /**\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getLimitBitrateByPortal() {\r\n        return abrController.getLimitBitrateByPortal();\r\n    }\r\n\r\n    /**\r\n     * Sets whether to limit the representation used based on the size of the playback area\r\n     *\r\n     * @param value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setLimitBitrateByPortal(value) {\r\n        abrController.setLimitBitrateByPortal(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use this method to change the current text track for both external time text files and fragmented text tracks. There is no need to\r\n     * set the track mode on the video object to switch a track when using this method.\r\n     *\r\n     * @param idx - Index of track based on the order of the order the tracks are added Use -1 to disable all tracks. (turn captions off).  Use module:MediaPlayer#dashjs.MediaPlayer.events.TEXT_TRACK_ADDED.\r\n     * @see {@link module:MediaPlayer#dashjs.MediaPlayer.events.TEXT_TRACK_ADDED}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setTextTrack(idx) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        //For external time text file,  the only action needed to change a track is marking the track mode to showing.\r\n        // Fragmented text tracks need the additional step of calling textSourceBuffer.setTextTrack();\r\n        if (textSourceBuffer === undefined) {\r\n            textSourceBuffer = TextSourceBuffer(context).getInstance();\r\n        }\r\n\r\n        var tracks = getVideoElement().textTracks;\r\n        var ln = tracks.length;\r\n\r\n        for (var i = 0; i < ln; i++) {\r\n            var track = tracks[i];\r\n            var mode = idx === i ? 'showing' : 'hidden';\r\n\r\n            if (track.mode !== mode) { //checking that mode is not already set by 3rd Party player frameworks that set mode to prevent event retrigger.\r\n                track.mode = mode;\r\n            }\r\n        }\r\n\r\n        textSourceBuffer.setTextTrack();\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @returns {Array}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getBitrateInfoListFor(type) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        var stream = getActiveStream();\r\n        return stream ? stream.getBitrateListFor(type) : [];\r\n    }\r\n\r\n    /**\r\n     * Use this method to explicitly set the starting bitrate for audio | video\r\n     *\r\n     * @param type\r\n     * @param {number} value A value of the initial bitrate, kbps\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setInitialBitrateFor(type, value) {\r\n        abrController.setInitialBitrateFor(type, value);\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @returns {number} A value of the initial bitrate, kbps\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getInitialBitrateFor(type) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR; //abrController.getInitialBitrateFor is overloaded with ratioDict logic that needs manifest force it to not be callable pre play.\r\n        }\r\n        return abrController.getInitialBitrateFor(type);\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @param {number} value A value of the initial Representation Ratio\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setInitialRepresentationRatioFor(type, value) {\r\n        abrController.setInitialRepresentationRatioFor(type, value);\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @returns {number} A value of the initial Representation Ratio\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getInitialRepresentationRatioFor(type) {\r\n        return abrController.getInitialRepresentationRatioFor(type);\r\n    }\r\n\r\n    /**\r\n     * This method returns the list of all available streams from a given manifest\r\n     * @param manifest\r\n     * @returns {Array} list of {@link StreamInfo}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getStreamsFromManifest(manifest) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        return adapter.getStreamsInfo(manifest);\r\n    }\r\n\r\n    /**\r\n     * This method returns the list of all available tracks for a given media type\r\n     * @param type\r\n     * @returns {Array} list of {@link MediaInfo}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getTracksFor(type) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        let streamInfo = streamController.getActiveStreamInfo();\r\n        if (!streamInfo) return [];\r\n        return mediaController.getTracksFor(type, streamInfo);\r\n    }\r\n\r\n    /**\r\n     * This method returns the list of all available tracks for a given media type and streamInfo from a given manifest\r\n     * @param type\r\n     * @param manifest\r\n     * @param streamInfo\r\n     * @returns {Array} list of {@link MediaInfo}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getTracksForTypeFromManifest(type, manifest, streamInfo) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n\r\n        streamInfo = streamInfo || adapter.getStreamsInfo(manifest)[0];\r\n\r\n        return streamInfo ? adapter.getAllMediaInfoForType(manifest, streamInfo, type) : [];\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @returns {Object} {@link MediaInfo}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getCurrentTrackFor(type) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        var streamInfo = streamController.getActiveStreamInfo();\r\n\r\n        if (!streamInfo) return null;\r\n\r\n        return mediaController.getCurrentTrackFor(type, streamInfo);\r\n    }\r\n\r\n    /**\r\n     * This method allows to set media settings that will be used to pick the initial track. Format of the settings\r\n     * is following:\r\n     * {lang: langValue,\r\n         *  viewpoint: viewpointValue,\r\n         *  audioChannelConfiguration: audioChannelConfigurationValue,\r\n         *  accessibility: accessibilityValue,\r\n         *  role: roleValue}\r\n     *\r\n     *\r\n     * @param type\r\n     * @param value {Object}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setInitialMediaSettingsFor(type, value) {\r\n        mediaController.setInitialSettings(type, value);\r\n    }\r\n\r\n    /**\r\n     * This method returns media settings that is used to pick the initial track. Format of the settings\r\n     * is following:\r\n     * {lang: langValue,\r\n         *  viewpoint: viewpointValue,\r\n         *  audioChannelConfiguration: audioChannelConfigurationValue,\r\n         *  accessibility: accessibilityValue,\r\n         *  role: roleValue}\r\n     * @param type\r\n     * @returns {Object}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getInitialMediaSettingsFor(type) {\r\n        return mediaController.getInitialSettings(type);\r\n    }\r\n\r\n    /**\r\n     * @param track instance of {@link MediaInfo}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setCurrentTrack(track) {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        mediaController.setTrack(track);\r\n    }\r\n\r\n    /**\r\n     * This method returns the current track switch mode.\r\n     *\r\n     * @param type\r\n     * @returns mode\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getTrackSwitchModeFor(type) {\r\n        return mediaController.getSwitchMode(type);\r\n    }\r\n\r\n    /**\r\n     * This method sets the current track switch mode. Available options are:\r\n     *\r\n     * MediaController.TRACK_SWITCH_MODE_NEVER_REPLACE\r\n     * (used to forbid clearing the buffered data (prior to current playback position) after track switch. Default for video)\r\n     *\r\n     * MediaController.TRACK_SWITCH_MODE_ALWAYS_REPLACE\r\n     * (used to clear the buffered data (prior to current playback position) after track switch. Default for audio)\r\n     *\r\n     * @param type\r\n     * @param mode\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setTrackSwitchModeFor(type, mode) {\r\n        mediaController.setSwitchMode(type, mode);\r\n    }\r\n\r\n    /**\r\n     * This method sets the selection mode for the initial track. This mode defines how the initial track will be selected\r\n     * if no initial media settings are set. If initial media settings are set this parameter will be ignored. Available options are:\r\n     *\r\n     * MediaController.TRACK_SELECTION_MODE_HIGHEST_BITRATE\r\n     * this mode makes the player select the track with a highest bitrate. This mode is a default mode.\r\n     *\r\n     * MediaController.TRACK_SELECTION_MODE_WIDEST_RANGE\r\n     * this mode makes the player select the track with a widest range of bitrates\r\n     *\r\n     * @param mode\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setSelectionModeForInitialTrack(mode) {\r\n        mediaController.setSelectionModeForInitialTrack(mode);\r\n    }\r\n\r\n    /**\r\n     * This method returns the track selection mode.\r\n     *\r\n     * @returns mode\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getSelectionModeForInitialTrack() {\r\n        return mediaController.getSelectionModeForInitialTrack();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since version 2.0 Instead use {@link module:MediaPlayer#getAutoSwitchQualityFor getAutoSwitchQualityFor()}.\r\n     * @returns {boolean} Current state of adaptive bitrate switching\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getAutoSwitchQuality() {\r\n        return abrController.getAutoSwitchBitrateFor('video') || abrController.getAutoSwitchBitrateFor('audio');\r\n    }\r\n\r\n    /**\r\n     * Set to false to switch off adaptive bitrate switching.\r\n     *\r\n     * @deprecated since version 2.0 Instead use {@link module:MediaPlayer#setAutoSwitchQualityFor setAutoSwitchQualityFor()}.\r\n     * @param value {boolean}\r\n     * @default {boolean} true\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setAutoSwitchQuality(value) {\r\n        abrController.setAutoSwitchBitrateFor('video', value);\r\n        abrController.setAutoSwitchBitrateFor('audio', value);\r\n    }\r\n\r\n    /**\r\n     * @param type {string} 'audio' | 'video'\r\n     * @returns {boolean} Current state of adaptive bitrate switching\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getAutoSwitchQualityFor(type) {\r\n        return abrController.getAutoSwitchBitrateFor(type);\r\n    }\r\n\r\n    /**\r\n     * Set to false to switch off adaptive bitrate switching.\r\n     *\r\n     * @param type {string} 'audio' | 'video'\r\n     * @param value {boolean}\r\n     * @default {boolean} true\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setAutoSwitchQualityFor(type, value) {\r\n        abrController.setAutoSwitchBitrateFor(type, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Enabling buffer-occupancy ABR will switch to the *experimental* implementation of BOLA,\r\n     * replacing the throughput-based ABR rule set (ThroughputRule, BufferOccupancyRule,\r\n     * InsufficientBufferRule and AbandonRequestsRule) with the buffer-occupancy-based\r\n     * BOLA rule set (BolaRule, BolaAbandonRule).\r\n     *\r\n     * @see {@link http://arxiv.org/abs/1601.06748 BOLA WhitePaper.}\r\n     * @see {@link https://github.com/Dash-Industry-Forum/dash.js/wiki/BOLA-status More details about the implementation status.}\r\n     * @param value {boolean}\r\n     * @default false\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function enableBufferOccupancyABR(value) {\r\n        mediaPlayerModel.setBufferOccupancyABREnabled(value);\r\n    }\r\n\r\n    /**\r\n     * Allows application to retrieve a manifest.  Manifest loading is asynchro\r\n     * nous and\r\n     * requires the app-provided callback function\r\n     *\r\n     * @param url {string} url the manifest url\r\n     * @param callback {function} A Callback function provided when retrieving manifests\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function retrieveManifest(url, callback) {\r\n        var manifestLoader = createManifestLoader();\r\n        var self = this;\r\n\r\n        var handler = function (e) {\r\n            if (!e.error) {\r\n                callback(e.manifest);\r\n            } else {\r\n                callback(null, e.error);\r\n            }\r\n            eventBus.off(Events.INTERNAL_MANIFEST_LOADED, handler, self);\r\n            manifestLoader.reset();\r\n        };\r\n\r\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, handler, self);\r\n\r\n        let uriQueryFragModel = URIQueryAndFragmentModel(context).getInstance();\r\n        uriQueryFragModel.initialize();\r\n        manifestLoader.load(uriQueryFragModel.parseURI(url));\r\n    }\r\n\r\n    /**\r\n     * <p>Allows you to set a scheme and server source for UTC live edge detection for dynamic streams.\r\n     * If UTCTiming is defined in the manifest, it will take precedence over any time source manually added.</p>\r\n     * <p>If you have exposed the Date header, use the method {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}.\r\n     * This will allow the date header on the manifest to be used instead of a time server</p>\r\n     * @param {string} schemeIdUri -\r\n     * <ul>\r\n     * <li>urn:mpeg:dash:utc:http-head:2014</li>\r\n     * <li>urn:mpeg:dash:utc:http-xsdate:2014</li>\r\n     * <li>urn:mpeg:dash:utc:http-iso:2014</li>\r\n     * <li>urn:mpeg:dash:utc:direct:2014</li>\r\n     * </ul>\r\n     * <p>Some specs referencing early ISO23009-1 drafts incorrectly use\r\n     * 2012 in the URI, rather than 2014. support these for now.</p>\r\n     * <ul>\r\n     * <li>urn:mpeg:dash:utc:http-head:2012</li>\r\n     * <li>urn:mpeg:dash:utc:http-xsdate:2012</li>\r\n     * <li>urn:mpeg:dash:utc:http-iso:2012</li>\r\n     * <li>urn:mpeg:dash:utc:direct:2012</li>\r\n     * </ul>\r\n     * @param {string} value - Path to a time source.\r\n     * @default\r\n     * <ul>\r\n     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>\r\n     *     <li>value:http://time.akamai.com</li>\r\n     * </ul>\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link module:MediaPlayer#removeUTCTimingSource removeUTCTimingSource()}\r\n     * @instance\r\n     */\r\n    function addUTCTimingSource(schemeIdUri, value) {\r\n        removeUTCTimingSource(schemeIdUri, value);//check if it already exists and remove if so.\r\n        var vo = new UTCTiming();\r\n        vo.schemeIdUri = schemeIdUri;\r\n        vo.value = value;\r\n        mediaPlayerModel.getUTCTimingSources().push(vo);\r\n    }\r\n\r\n\r\n    /**\r\n     * <p>Allows you to remove a UTC time source. Both schemeIdUri and value need to match the Dash.vo.UTCTiming properties in order for the\r\n     * entry to be removed from the array</p>\r\n     * @param {string} schemeIdUri - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\r\n     * @param {string} value - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}\r\n     * @instance\r\n     */\r\n    function removeUTCTimingSource(schemeIdUri, value) {\r\n        let UTCTimingSources = mediaPlayerModel.getUTCTimingSources();\r\n        UTCTimingSources.forEach(function (obj, idx) {\r\n            if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\r\n                UTCTimingSources.splice(idx, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * <p>Allows you to clear the stored array of time sources.</p>\r\n     * <p>Example use: If you have exposed the Date header, calling this method\r\n     * will allow the date header on the manifest to be used instead of the time server.</p>\r\n     * <p>Example use: Calling this method, assuming there is not an exposed date header on the manifest,  will default back\r\n     * to using a binary search to discover the live edge</p>\r\n     *\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link module:MediaPlayer#restoreDefaultUTCTimingSources restoreDefaultUTCTimingSources()}\r\n     * @instance\r\n     */\r\n    function clearDefaultUTCTimingSources() {\r\n        mediaPlayerModel.setUTCTimingSources([]);\r\n    }\r\n\r\n    /**\r\n     * <p>Allows you to restore the default time sources after calling {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}</p>\r\n     *\r\n     * @default\r\n     * <ul>\r\n     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>\r\n     *     <li>value:http://time.akamai.com</li>\r\n     * </ul>\r\n     *\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\r\n     * @instance\r\n     */\r\n    function restoreDefaultUTCTimingSources() {\r\n        addUTCTimingSource(MediaPlayerModel.DEFAULT_UTC_TIMING_SOURCE.scheme, MediaPlayerModel.DEFAULT_UTC_TIMING_SOURCE.value);\r\n    }\r\n\r\n\r\n    /**\r\n     * <p>Allows you to enable the use of the Date Header, if exposed with CORS, as a timing source for live edge detection. The\r\n     * use of the date header will happen only after the other timing source that take precedence fail or are omitted as described.\r\n     * {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()} </p>\r\n     *\r\n     * @default {boolean} True\r\n     * @memberof module:MediaPlayer\r\n     * @see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\r\n     * @instance\r\n     */\r\n    function enableManifestDateHeaderTimeSource(value) {\r\n        mediaPlayerModel.setUseManifestDateHeaderTimeSource(value);\r\n    }\r\n\r\n    /**\r\n     * This value influences the buffer pruning logic.\r\n     * Allows you to modify the buffer that is kept in source buffer in seconds.\r\n     *  0|-----------bufferToPrune-----------|-----bufferToKeep-----|currentTime|\r\n     *\r\n     * @default 30 seconds\r\n     * @param {int} value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setBufferToKeep(value) {\r\n        mediaPlayerModel.setBufferToKeep(value);\r\n    }\r\n\r\n    /**\r\n     * This value influences the buffer pruning logic.\r\n     * Allows you to modify the interval of pruning buffer in seconds.\r\n     *\r\n     * @default 30 seconds\r\n     * @param {int} value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setBufferPruningInterval(value) {\r\n        mediaPlayerModel.setBufferPruningInterval(value);\r\n    }\r\n\r\n    /**\r\n     * The time that the internal buffer target will be set to post startup/seeks (NOT top quality).\r\n     *\r\n     * When the time is set higher than the default you will have to wait longer\r\n     * to see automatic bitrate switches but will have a larger buffer which\r\n     * will increase stability.\r\n     *\r\n     * @default 12 seconds.\r\n     * @param {int} value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setStableBufferTime(value) {\r\n        mediaPlayerModel.setStableBufferTime(value);\r\n    }\r\n\r\n    /**\r\n     * The time that the internal buffer target will be set to once playing the top quality.\r\n     * If there are multiple bitrates in your adaptation, and the media is playing at the highest\r\n     * bitrate, then we try to build a larger buffer at the top quality to increase stability\r\n     * and to maintain media quality.\r\n     *\r\n     * @default 30 seconds.\r\n     * @param {int} value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setBufferTimeAtTopQuality (value) {\r\n        mediaPlayerModel.setBufferTimeAtTopQuality(value);\r\n    }\r\n\r\n    /**\r\n     * The time that the internal buffer target will be set to once playing the top quality for long form content.\r\n     *\r\n     * @default 60 seconds.\r\n     * @see {@link module:MediaPlayer#setLongFormContentDurationThreshold setLongFormContentDurationThreshold()}\r\n     * @see {@link module:MediaPlayer#setBufferTimeAtTopQuality setBufferTimeAtTopQuality()}\r\n     * @param {int} value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setBufferTimeAtTopQualityLongForm (value) {\r\n        mediaPlayerModel.setBufferTimeAtTopQualityLongForm(value);\r\n    }\r\n\r\n    /**\r\n     * The threshold which defines if the media is considered long form content.\r\n     * This will directly affect the buffer targets when playing back at the top quality.\r\n     *\r\n     * @see {@link module:MediaPlayer#setBufferTimeAtTopQualityLongForm setBufferTimeAtTopQualityLongForm()}\r\n     * @default 600 seconds (10 minutes).\r\n     * @param value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setLongFormContentDurationThreshold (value) {\r\n        mediaPlayerModel.setLongFormContentDurationThreshold(value);\r\n    }\r\n\r\n    /**\r\n     * A threshold, in seconds, of when dashjs abr becomes less conservative since we have a\r\n     * larger \"rich\" buffer.\r\n     * The BufferOccupancyRule.js rule will override the ThroughputRule's decision when the\r\n     * buffer level surpasses this value and while it remains greater than this value.\r\n     *\r\n     * @default 20 seconds\r\n     * @param value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setRichBufferThreshold (value) {\r\n        mediaPlayerModel.setRichBufferThreshold(value);\r\n    }\r\n\r\n    /**\r\n     * A percentage between 0.0 and 1 to reduce the measured throughput calculations.\r\n     * The default is 0.9. The lower the value the more conservative and restricted the\r\n     * measured throughput calculations will be. please use carefully. This will directly\r\n     * affect the ABR logic in dash.js\r\n     *\r\n     * @param value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setBandwidthSafetyFactor(value) {\r\n        mediaPlayerModel.setBandwidthSafetyFactor(value);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of the current BandwidthSafetyFactor\r\n     *\r\n     * @return {number} value\r\n     * @see {@link module:MediaPlayer#setBandwidthSafetyFactor setBandwidthSafetyFactor()}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getBandwidthSafetyFactor() {\r\n        return mediaPlayerModel.getBandwidthSafetyFactor();\r\n    }\r\n\r\n    /**\r\n     * A timeout value in seconds, which during the ABRController will block switch-up events.\r\n     * This will only take effect after an abandoned fragment event occurs.\r\n     *\r\n     * @default 10 seconds\r\n     * @param {int} value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setAbandonLoadTimeout(value) {\r\n        mediaPlayerModel.setAbandonLoadTimeout(value);\r\n    }\r\n\r\n    /**\r\n     * Total number of retry attempts that will occur on a fragment load before it fails.\r\n     * Increase this value to a maximum in order to achieve an automatic playback resume\r\n     * in case of completely lost internet connection.\r\n     *\r\n     * @default 3\r\n     * @param {int} value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setFragmentLoaderRetryAttempts (value) {\r\n        mediaPlayerModel.setFragmentRetryAttempts(value);\r\n    }\r\n\r\n    /**\r\n     * Time in milliseconds of which to reload a failed fragment load attempt.\r\n     *\r\n     * @default 1000 milliseconds\r\n     * @param {int} value\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setFragmentLoaderRetryInterval (value) {\r\n        mediaPlayerModel.setFragmentRetryInterval(value);\r\n    }\r\n\r\n    /**\r\n     * Detects if Protection is included and returns an instance of ProtectionController.js\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getProtectionController() {\r\n        return detectProtection();\r\n    }\r\n\r\n    /**\r\n     * Will override dash.js protection controller.\r\n     * @param {ProtectionController} [value] valid protection controller instance.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function attachProtectionController(value) {\r\n        protectionController = value;\r\n    }\r\n\r\n    /**\r\n     * @param {ProtectionData} [value] object containing\r\n     * property names corresponding to key system name strings and associated\r\n     * values being instances of.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function setProtectionData(value) {\r\n        protectionData = value;\r\n    }\r\n\r\n    /**\r\n     * This method serves to control captions z-index value. If 'true' is passed, the captions will have the highest z-index and be\r\n     * displayed on top of other html elements. Default value is 'false' (z-index is not set).\r\n     * @param value {Boolean}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function displayCaptionsOnTop(value) {\r\n        let textTracks = TextTracks(context).getInstance();\r\n        textTracks.setConfig({videoModel: videoModel});\r\n        textTracks.initialize();\r\n        textTracks.displayCConTop(value);\r\n    }\r\n\r\n    /**\r\n     * Returns instance of Video Container that was attached by calling attachVideoContainer()\r\n     * @returns {@link object}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getVideoContainer() {\r\n        return videoModel ? videoModel.getVideoContainer() : null;\r\n    }\r\n\r\n    /**\r\n     * Use this method to attach an HTML5 element that wraps the video element.\r\n     *\r\n     * @param container The HTML5 element containing the video element.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function attachVideoContainer(container) {\r\n        if (!videoModel) {\r\n            throw ELEMENT_NOT_ATTACHED_ERROR;\r\n        }\r\n        videoModel.setVideoContainer(container);\r\n    }\r\n\r\n    /**\r\n     * Returns instance of Video Element that was attached by calling attachView()\r\n     * @returns {object}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getVideoElement() {\r\n        if (!videoModel) {\r\n            throw ELEMENT_NOT_ATTACHED_ERROR;\r\n        }\r\n        return videoModel.getElement();\r\n    }\r\n\r\n    /**\r\n     * Use this method to attach an HTML5 VideoElement for dash.js to operate upon.\r\n     *\r\n     * @param view An HTML5 VideoElement that has already been defined in the DOM.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function attachView(element) {\r\n        if (!mediaPlayerInitialized) {\r\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\r\n        }\r\n        videoModel = null;\r\n        if (element) {\r\n            videoModel = VideoModel(context).getInstance();\r\n            videoModel.initialize();\r\n            videoModel.setElement(element);\r\n            detectProtection();\r\n            detectMetricsReporting();\r\n        }\r\n        resetAndInitializePlayback();\r\n    }\r\n\r\n    /**\r\n     * Returns instance of Div that was attached by calling attachTTMLRenderingDiv()\r\n     * @returns {@link object}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getTTMLRenderingDiv() {\r\n        return videoModel ? videoModel.getTTMLRenderingDiv() : null;\r\n    }\r\n\r\n    /**\r\n     * Use this method to attach an HTML5 div for dash.js to render rich TTML subtitles.\r\n     *\r\n     * @param div An unstyled div placed after the video element. It will be styled to match the video size and overlay z-order.\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function attachTTMLRenderingDiv(div) {\r\n        if (!videoModel) {\r\n            throw ELEMENT_NOT_ATTACHED_ERROR;\r\n        }\r\n        videoModel.setTTMLRenderingDiv(div);\r\n    }\r\n\r\n    /**\r\n     * Returns the source string or manifest that was attached by calling attachSource()\r\n     * @returns {string | manifest}\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function getSource() {\r\n        if (!source) {\r\n            throw SOURCE_NOT_ATTACHED_ERROR;\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Use this method to set a source URL to a valid MPD manifest file OR\r\n     * a previously downloaded and parsed manifest object.  Optionally, can\r\n     * also provide protection information\r\n     *\r\n     * @param {string | object} urlOrManifest A URL to a valid MPD manifest file, or a\r\n     * parsed manifest object.\r\n     *\r\n     *\r\n     * @throw \"MediaPlayer not initialized!\"\r\n     *\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function attachSource(urlOrManifest) {\r\n        if (!mediaPlayerInitialized) {\r\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\r\n        }\r\n\r\n        if (typeof urlOrManifest === 'string') {\r\n            var uriQueryFragModel = URIQueryAndFragmentModel(context).getInstance();\r\n            uriQueryFragModel.initialize();\r\n            source = uriQueryFragModel.parseURI(urlOrManifest);\r\n        } else {\r\n            source = urlOrManifest;\r\n        }\r\n\r\n        resetAndInitializePlayback();\r\n    }\r\n\r\n    /**\r\n     * Sets the MPD source and the video element to null. You can also reset the MediaPlayer by\r\n     * calling attachSource with a new source file.\r\n     *\r\n     * @memberof module:MediaPlayer\r\n     * @instance\r\n     */\r\n    function reset() {\r\n        attachSource(null);\r\n        attachView(null);\r\n        protectionData = null;\r\n        protectionController = null;\r\n    }\r\n\r\n    //***********************************\r\n    // PRIVATE METHODS\r\n    //***********************************\r\n\r\n    function resetAndInitializePlayback() {\r\n        if (playbackInitialized) {\r\n            playbackInitialized = false;\r\n            adapter.reset();\r\n            streamController.reset();\r\n            playbackController.reset();\r\n            abrController.reset();\r\n            rulesController.reset();\r\n            mediaController.reset();\r\n            streamController = null;\r\n            metricsReportingController = null;\r\n            if (isReady()) {\r\n                initializePlayback();\r\n            }\r\n        } else if (isReady()) {\r\n            initializePlayback();\r\n        }\r\n    }\r\n\r\n    function createControllers() {\r\n\r\n        let synchronizationRulesCollection = SynchronizationRulesCollection(context).getInstance();\r\n        synchronizationRulesCollection.initialize();\r\n\r\n        let abrRulesCollection = ABRRulesCollection(context).getInstance();\r\n        abrRulesCollection.initialize();\r\n\r\n        //let scheduleRulesCollection = ScheduleRulesCollection(context).getInstance();\r\n        //scheduleRulesCollection.initialize();\r\n\r\n        let sourceBufferController = SourceBufferController(context).getInstance();\r\n        sourceBufferController.setConfig({dashManifestModel: dashManifestModel});\r\n\r\n\r\n        let virtualBuffer = VirtualBuffer(context).getInstance();\r\n        virtualBuffer.setConfig({\r\n            sourceBufferController: sourceBufferController\r\n        });\r\n\r\n        mediaController.initialize();\r\n        mediaController.setConfig({\r\n            errHandler: errHandler\r\n        });\r\n\r\n        rulesController = RulesController(context).getInstance();\r\n        rulesController.initialize();\r\n        rulesController.setConfig({\r\n            abrRulesCollection: abrRulesCollection,\r\n            synchronizationRulesCollection: synchronizationRulesCollection\r\n        });\r\n\r\n        streamController = StreamController(context).getInstance();\r\n        streamController.setConfig({\r\n            capabilities: capabilities,\r\n            manifestLoader: createManifestLoader(),\r\n            manifestModel: ManifestModel(context).getInstance(),\r\n            dashManifestModel: dashManifestModel,\r\n            protectionController: protectionController,\r\n            adapter: adapter,\r\n            metricsModel: metricsModel,\r\n            dashMetrics: dashMetrics,\r\n            liveEdgeFinder: LiveEdgeFinder(context).getInstance(),\r\n            mediaSourceController: MediaSourceController(context).getInstance(),\r\n            timeSyncController: TimeSyncController(context).getInstance(),\r\n            baseURLController: BaseURLController(context).getInstance(),\r\n            virtualBuffer: virtualBuffer,\r\n            errHandler: errHandler,\r\n            timelineConverter: TimelineConverter(context).getInstance()\r\n        });\r\n        streamController.initialize(autoPlay, protectionData);\r\n\r\n        abrController.setConfig({\r\n            abrRulesCollection: abrRulesCollection,\r\n            rulesController: rulesController,\r\n            streamController: streamController\r\n        });\r\n    }\r\n\r\n    function createManifestLoader() {\r\n        return ManifestLoader(context).create({\r\n            errHandler: errHandler,\r\n            parser: createManifestParser(),\r\n            metricsModel: metricsModel,\r\n            requestModifier: RequestModifier(context).getInstance()\r\n        });\r\n    }\r\n\r\n    function createManifestParser() {\r\n        //TODO-Refactor Need to be able to switch this create out so will need API to set which parser to use?\r\n        return DashParser(context).create();\r\n    }\r\n\r\n    function createAdaptor() {\r\n        //TODO-Refactor Need to be able to switch this create out so will need API to set which adapter to use? Handler is created is inside streamProcessor so need to figure that out as well\r\n        adapter = DashAdapter(context).getInstance();\r\n        adapter.initialize();\r\n        adapter.setConfig({dashManifestModel: dashManifestModel});\r\n        return adapter;\r\n    }\r\n\r\n    function detectProtection() {\r\n        if (protectionController) {\r\n            return protectionController;\r\n        }\r\n        // do not require Protection as dependencies as this is optional and intended to be loaded separately\r\n        let Protection = dashjs.Protection; /* jshint ignore:line */\r\n        if (typeof Protection == 'function') {//TODO need a better way to register/detect plugin components\r\n            let protection = Protection(context).create();\r\n            Events.extend(Protection.events);\r\n            MediaPlayerEvents.extend(Protection.events, { publicOnly: true });\r\n            protectionController = protection.createProtectionSystem({\r\n                log: log,\r\n                videoModel: videoModel,\r\n                capabilities: capabilities,\r\n                eventBus: eventBus,\r\n                adapter: adapter\r\n            });\r\n            return protectionController;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function detectMetricsReporting() {\r\n        if (metricsReportingController) {\r\n            return metricsReportingController;\r\n        }\r\n        // do not require MetricsReporting as dependencies as this is optional and intended to be loaded separately\r\n        let MetricsReporting = dashjs.MetricsReporting; /* jshint ignore:line */\r\n        if (typeof MetricsReporting === 'function') {//TODO need a better way to register/detect plugin components\r\n            let metricsReporting = MetricsReporting(context).create();\r\n\r\n            metricsReportingController = metricsReporting.createMetricsReporting({\r\n                log: log,\r\n                eventBus: eventBus,\r\n                mediaElement: getVideoElement(),\r\n                dashManifestModel: dashManifestModel,\r\n                metricsModel: metricsModel\r\n            });\r\n\r\n            return metricsReportingController;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getDVRInfoMetric() {\r\n        var metric = metricsModel.getReadOnlyMetricsFor('video') || metricsModel.getReadOnlyMetricsFor('audio');\r\n        return dashMetrics.getCurrentDVRInfo(metric);\r\n    }\r\n\r\n    function getAsUTC(valToConvert) {\r\n        var metric = getDVRInfoMetric();\r\n        var availableFrom,\r\n            utcValue;\r\n\r\n        if (!metric) {\r\n            return 0;\r\n        }\r\n        availableFrom = metric.manifestInfo.availableFrom.getTime() / 1000;\r\n        utcValue = valToConvert + (availableFrom + metric.range.start);\r\n        return utcValue;\r\n    }\r\n\r\n    function getActiveStream() {\r\n        if (!playbackInitialized) {\r\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\r\n        }\r\n        var streamInfo = streamController.getActiveStreamInfo();\r\n        return streamInfo ? streamController.getStreamById(streamInfo.id) : null;\r\n    }\r\n\r\n    function initializePlayback() {\r\n        if (!playbackInitialized) {\r\n            playbackInitialized = true;\r\n            log('Playback Initialized');\r\n            createControllers();\r\n            if (typeof source === 'string') {\r\n                streamController.load(source);\r\n            } else {\r\n                streamController.loadWithManifest(source);\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        on: on,\r\n        off: off,\r\n        extend: extend,\r\n        attachView: attachView,\r\n        attachSource: attachSource,\r\n        isReady: isReady,\r\n        play: play,\r\n        isPaused: isPaused,\r\n        pause: pause,\r\n        isSeeking: isSeeking,\r\n        seek: seek,\r\n        setMute: setMute,\r\n        isMuted: isMuted,\r\n        setVolume: setVolume,\r\n        getVolume: getVolume,\r\n        time: time,\r\n        duration: duration,\r\n        timeAsUTC: timeAsUTC,\r\n        durationAsUTC: durationAsUTC,\r\n        getActiveStream: getActiveStream,\r\n        getDVRWindowSize: getDVRWindowSize,\r\n        getDVRSeekOffset: getDVRSeekOffset,\r\n        convertToTimeCode: convertToTimeCode,\r\n        formatUTC: formatUTC,\r\n        getVersion: getVersion,\r\n        getDebug: getDebug,\r\n        getBufferLength: getBufferLength,\r\n        getVideoModel: getVideoModel,\r\n        getVideoContainer: getVideoContainer,\r\n        getTTMLRenderingDiv: getTTMLRenderingDiv,\r\n        getVideoElement: getVideoElement,\r\n        getSource: getSource,\r\n        setLiveDelayFragmentCount: setLiveDelayFragmentCount,\r\n        setLiveDelay: setLiveDelay,\r\n        useSuggestedPresentationDelay: useSuggestedPresentationDelay,\r\n        enableLastBitrateCaching: enableLastBitrateCaching,\r\n        enableLastMediaSettingsCaching: enableLastMediaSettingsCaching,\r\n        setMaxAllowedBitrateFor: setMaxAllowedBitrateFor,\r\n        getMaxAllowedBitrateFor: getMaxAllowedBitrateFor,\r\n        setMaxAllowedRepresentationRatioFor: setMaxAllowedRepresentationRatioFor,\r\n        getMaxAllowedRepresentationRatioFor: getMaxAllowedRepresentationRatioFor,\r\n        setAutoPlay: setAutoPlay,\r\n        getAutoPlay: getAutoPlay,\r\n        setScheduleWhilePaused: setScheduleWhilePaused,\r\n        getScheduleWhilePaused: getScheduleWhilePaused,\r\n        getDashMetrics: getDashMetrics,\r\n        getMetricsFor: getMetricsFor,\r\n        getQualityFor: getQualityFor,\r\n        setQualityFor: setQualityFor,\r\n        getLimitBitrateByPortal: getLimitBitrateByPortal,\r\n        setLimitBitrateByPortal: setLimitBitrateByPortal,\r\n        setTextTrack: setTextTrack,\r\n        getBitrateInfoListFor: getBitrateInfoListFor,\r\n        setInitialBitrateFor: setInitialBitrateFor,\r\n        getInitialBitrateFor: getInitialBitrateFor,\r\n        setInitialRepresentationRatioFor: setInitialRepresentationRatioFor,\r\n        getInitialRepresentationRatioFor: getInitialRepresentationRatioFor,\r\n        getStreamsFromManifest: getStreamsFromManifest,\r\n        getTracksFor: getTracksFor,\r\n        getTracksForTypeFromManifest: getTracksForTypeFromManifest,\r\n        getCurrentTrackFor: getCurrentTrackFor,\r\n        setInitialMediaSettingsFor: setInitialMediaSettingsFor,\r\n        getInitialMediaSettingsFor: getInitialMediaSettingsFor,\r\n        setCurrentTrack: setCurrentTrack,\r\n        getTrackSwitchModeFor: getTrackSwitchModeFor,\r\n        setTrackSwitchModeFor: setTrackSwitchModeFor,\r\n        setSelectionModeForInitialTrack: setSelectionModeForInitialTrack,\r\n        getSelectionModeForInitialTrack: getSelectionModeForInitialTrack,\r\n        getAutoSwitchQuality: getAutoSwitchQuality,\r\n        setAutoSwitchQuality: setAutoSwitchQuality,\r\n        getAutoSwitchQualityFor: getAutoSwitchQualityFor,\r\n        setAutoSwitchQualityFor: setAutoSwitchQualityFor,\r\n        enableBufferOccupancyABR: enableBufferOccupancyABR,\r\n        setBandwidthSafetyFactor: setBandwidthSafetyFactor,\r\n        getBandwidthSafetyFactor: getBandwidthSafetyFactor,\r\n        setAbandonLoadTimeout: setAbandonLoadTimeout,\r\n        retrieveManifest: retrieveManifest,\r\n        addUTCTimingSource: addUTCTimingSource,\r\n        removeUTCTimingSource: removeUTCTimingSource,\r\n        clearDefaultUTCTimingSources: clearDefaultUTCTimingSources,\r\n        restoreDefaultUTCTimingSources: restoreDefaultUTCTimingSources,\r\n        setBufferToKeep: setBufferToKeep,\r\n        setBufferPruningInterval: setBufferPruningInterval,\r\n        setStableBufferTime: setStableBufferTime,\r\n        setBufferTimeAtTopQuality: setBufferTimeAtTopQuality,\r\n        setFragmentLoaderRetryAttempts: setFragmentLoaderRetryAttempts,\r\n        setFragmentLoaderRetryInterval: setFragmentLoaderRetryInterval,\r\n        setBufferTimeAtTopQualityLongForm: setBufferTimeAtTopQualityLongForm,\r\n        setLongFormContentDurationThreshold: setLongFormContentDurationThreshold,\r\n        setRichBufferThreshold: setRichBufferThreshold,\r\n        getProtectionController: getProtectionController,\r\n        attachProtectionController: attachProtectionController,\r\n        setProtectionData: setProtectionData,\r\n        enableManifestDateHeaderTimeSource: enableManifestDateHeaderTimeSource,\r\n        displayCaptionsOnTop: displayCaptionsOnTop,\r\n        attachVideoContainer: attachVideoContainer,\r\n        attachTTMLRenderingDiv: attachTTMLRenderingDiv,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMediaPlayer.__dashjs_factory_name = 'MediaPlayer';\r\nlet factory = FactoryMaker.getClassFactory(MediaPlayer);\r\nfactory.events = MediaPlayerEvents;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../core/events/EventsBase.js';\r\n/**\r\n * @Class\r\n *\r\n */\r\nclass MediaPlayerEvents extends EventsBase {\r\n\r\n    /**\r\n     * @description Public facing external events to be used when developing a player that implements dash.js.\r\n     */\r\n    constructor () {\r\n        super();\r\n        /**\r\n         * Triggered when the video element's buffer state changes to stalled.\r\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\r\n         * @event MediaPlayerEvents#BUFFER_EMPTY\r\n         */\r\n        this.BUFFER_EMPTY = 'bufferstalled';\r\n        /**\r\n         * Triggered when the video element's buffer state changes to loaded.\r\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\r\n         * @event MediaPlayerEvents#BUFFER_LOADED\r\n         */\r\n        this.BUFFER_LOADED = 'bufferloaded';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\r\n         * @event MediaPlayerEvents#BUFFER_LOADED\r\n         */\r\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\r\n\r\n        /**\r\n         * Triggered when\r\n         * @event MediaPlayerEvents#ERROR\r\n         */\r\n        this.ERROR = 'error';\r\n        /**\r\n         * Triggered when {@link module:Debug} log method is called.\r\n         * @event MediaPlayerEvents#LOG\r\n         */\r\n        this.LOG = 'log';\r\n        //TODO refactor with internal event\r\n        /**\r\n         * Triggered when the manifest load is complete\r\n         * @event MediaPlayerEvents#MANIFEST_LOADED\r\n         */\r\n        this.MANIFEST_LOADED = 'manifestloaded';\r\n        /**\r\n         * Triggered anytime there is a change to the overall metrics.\r\n         * @event MediaPlayerEvents#METRICS_CHANGED\r\n         */\r\n        this.METRICS_CHANGED = 'metricschanged';\r\n        /**\r\n         * Triggered when an individual metric is added, updated or cleared.\r\n         * @event MediaPlayerEvents#METRIC_CHANGED\r\n         */\r\n        this.METRIC_CHANGED = 'metricchanged';\r\n        /**\r\n         * Triggered every time a new metric is added.\r\n         * @event MediaPlayerEvents#METRIC_ADDED\r\n         */\r\n        this.METRIC_ADDED = 'metricadded';\r\n        /**\r\n         * Triggered every time a metric is updated.\r\n         * @event MediaPlayerEvents#METRIC_UPDATED\r\n         */\r\n        this.METRIC_UPDATED = 'metricupdated';\r\n        /**\r\n         * Triggered at the stream end of a period.\r\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\r\n         */\r\n        this.PERIOD_SWITCH_COMPLETED = 'streamswitchcompleted';\r\n        /**\r\n         * Triggered when a new period starts.\r\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\r\n         */\r\n        this.PERIOD_SWITCH_STARTED = 'streamswitchstarted';\r\n        /**\r\n         * Triggered when the stream is setup and ready.\r\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\r\n         */\r\n        this.STREAM_INITIALIZED = 'streaminitialized';\r\n        /**\r\n         * Triggered once all text tracks detected in the MPD are added to the video element.\r\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\r\n         */\r\n        this.TEXT_TRACKS_ADDED = 'alltexttracksadded';\r\n        /**\r\n         * Triggered when a text track is added to the video element's TextTrackList\r\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\r\n         */\r\n        this.TEXT_TRACK_ADDED = 'texttrackadded';\r\n\r\n        /**\r\n         * Sent when enough data is available that the media can be played,\r\n         * at least for a couple of frames.  This corresponds to the\r\n         * HAVE_ENOUGH_DATA readyState.\r\n         * @event MediaPlayerEvents#CAN_PLAY\r\n         */\r\n        this.CAN_PLAY = 'canPlay';\r\n\r\n        /**\r\n         * Sent when playback completes.\r\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\r\n         */\r\n        this.PLAYBACK_ENDED = 'playbackEnded';\r\n\r\n        /**\r\n         * Sent when an error occurs.  The element's error\r\n         * attribute contains more information.\r\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\r\n         */\r\n        this.PLAYBACK_ERROR = 'playbackError';\r\n        /**\r\n         * The media's metadata has finished loading; all attributes now\r\n         * contain as much useful information as they're going to.\r\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\r\n         */\r\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\r\n        /**\r\n         * Sent when playback is paused.\r\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\r\n         */\r\n        this.PLAYBACK_PAUSED = 'playbackPaused';\r\n        /**\r\n         * Sent when the media begins to play (either for the first time, after having been paused,\r\n         * or after ending and then restarting).\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\r\n         */\r\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\r\n        /**\r\n         * Sent periodically to inform interested parties of progress downloading\r\n         * the media. Information about the current amount of the media that has\r\n         * been downloaded is available in the media element's buffered attribute.\r\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\r\n         */\r\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\r\n        /**\r\n         * Sent when the playback speed changes.\r\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\r\n         */\r\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\r\n        /**\r\n         * Sent when a seek operation completes.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\r\n         */\r\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\r\n        /**\r\n         * Sent when a seek operation begins.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\r\n         */\r\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\r\n        /**\r\n         * Sent when playback of the media starts after having been paused;\r\n         * that is, when playback is resumed after a prior pause event.\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\r\n         */\r\n        this.PLAYBACK_STARTED = 'playbackStarted';\r\n        /**\r\n         * The time indicated by the element's currentTime attribute has changed.\r\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\r\n         */\r\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\r\n    }\r\n}\r\n\r\nlet mediaPlayerEvents = new MediaPlayerEvents();\r\nexport default mediaPlayerEvents;","import MediaPlayer from './MediaPlayer.js';\r\n\r\nfunction MediaPlayerFactory() {\r\n\r\n    /**\r\n     * mime-type identifier for any source content to be accepted as a dash manifest by the create() method.\r\n     * @type {string}\r\n     */\r\n    const SUPPORTED_MIME_TYPE = 'application/dash+xml';\r\n\r\n    /**\r\n     *  A new MediaPlayer is instantiated for the supplied videoElement and optional source and context.  If no context is provided,\r\n     *  a default DashContext is used. If no source is provided, the videoElement is interrogated to extract the first source whose\r\n     *  type is application/dash+xml.\r\n     * The autoplay property of the videoElement is preserved. Any preload attribute is ignored. This method should be called after the page onLoad event is dispatched.\r\n     * @param video\r\n     * @param source\r\n     * @returns {MediaPlayer}\r\n     */\r\n    function create(video, source, context) {\r\n        if (!video || video.nodeName !== 'VIDEO') return null;\r\n\r\n        if (video._dashjs_player) return video._dashjs_player;\r\n\r\n        var player;\r\n        var videoID = (video.id || video.name || 'video element');\r\n\r\n        source = source || [].slice.call(video.querySelectorAll('source')).filter(function (s) {\r\n                return s.type == SUPPORTED_MIME_TYPE;\r\n            })[0];\r\n        if (!source && video.src) {\r\n            source = document.createElement('source');\r\n            source.src = video.src;\r\n        } else if (!source && !video.src) {\r\n            return null;\r\n        }\r\n\r\n        context = context || {};\r\n        player = MediaPlayer(context).create();\r\n        player.initialize(video, source.src, video.autoplay);\r\n        player.getDebug().log('Converted ' + videoID + ' to dash.js player and added content: ' + source.src);\r\n\r\n        // Store a reference to the player on the video element so it can be gotten at for debugging and so we know its\r\n        // already been setup.\r\n        video._dashjs_player = player;\r\n\r\n        return player;\r\n    }\r\n\r\n    /**\r\n     * Searches the provided scope for all instances of the indicated selector. If no scope is provided, document is used. If no selector is\r\n     * specified, [data-dashjs-player] is used. The declarative setup also looks for source elements with the type attribute set to 'application/dash+xml'.\r\n     * It then looks for those video elements which have a source element defined with a type matching 'application/dash+xml'.\r\n     * A new MediaPlayer is instantiated for each matching video element and the appropriate source is assigned.\r\n     * The autoplay property of the video element is preserved. Any preload attribute is ignored. This method should be called after the page onLoad event is dispatched.\r\n     * Returns an array holding all the MediaPlayer instances that were added by this method.\r\n     * @param selector\r\n     * @param scope\r\n     * @returns {Array} an array of MediaPlayer objects\r\n     */\r\n    function createAll(selector, scope) {\r\n        let aPlayers = [];\r\n        selector = selector || '[data-dashjs-player]';\r\n        scope = scope || document;\r\n        let videos = scope.querySelectorAll(selector);\r\n        for (let i = 0; i < videos.length; i++) {\r\n            let player = create(videos[i], null);\r\n            aPlayers.push(player);\r\n        }\r\n\r\n        let sources = scope.querySelectorAll('source[type=\"' + SUPPORTED_MIME_TYPE + '\"]');\r\n        for (let i = 0; i < sources.length; i++) {\r\n            let video = findVideo(sources[i]);\r\n            let player = create(video, null);\r\n            aPlayers.push(player);\r\n        }\r\n\r\n        return aPlayers;\r\n    }\r\n\r\n    function findVideo(el) {\r\n        if (el.nodeName.toLowerCase() === 'video') {\r\n            return el;\r\n        } else {\r\n            return findVideo(el.parentNode);\r\n        }\r\n    }\r\n\r\n    return {\r\n        create: create,\r\n        createAll: createAll\r\n    };\r\n}\r\n\r\nlet instance = MediaPlayerFactory();\r\n\r\nfunction loadHandler() {\r\n    window.removeEventListener('load', loadHandler);\r\n    instance.createAll();\r\n}\r\n\r\nlet avoidAutoCreate = window && window.dashjs && window.dashjs.skipAutoCreate;\r\n\r\nif (!avoidAutoCreate && window && window.addEventListener) {\r\n    if (window.document.readyState === 'complete') {\r\n        instance.createAll();\r\n    } else {\r\n        window.addEventListener('load', loadHandler);\r\n    }\r\n}\r\n\r\nexport default instance;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport LiveEdgeFinder from './utils/LiveEdgeFinder.js';\r\nimport StreamProcessor from './StreamProcessor.js';\r\nimport MediaController from './controllers/MediaController.js';\r\nimport EventController from './controllers/EventController.js';\r\nimport FragmentController from './controllers/FragmentController.js';\r\nimport AbrController from './controllers/AbrController.js';\r\nimport VideoModel from './models/VideoModel.js';\r\nimport MetricsModel from './models/MetricsModel.js';\r\nimport PlaybackController from './controllers/PlaybackController.js';\r\nimport DashHandler from '../dash/DashHandler.js';\r\nimport SegmentBaseLoader from '../dash/SegmentBaseLoader.js';\r\nimport DashMetrics from '../dash/DashMetrics.js';\r\nimport EventBus from '../core/EventBus.js';\r\nimport Events from '../core/events/Events.js';\r\nimport Debug from '../core/Debug.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\nimport TextSourceBuffer from './TextSourceBuffer.js';\r\n\r\nfunction Stream(config) {\r\n\r\n    const DATA_UPDATE_FAILED_ERROR_CODE = 1;\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let manifestModel = config.manifestModel;\r\n    let manifestUpdater = config.manifestUpdater;\r\n    let adapter = config.adapter;\r\n    let capabilities = config.capabilities;\r\n    let errHandler = config.errHandler;\r\n    let timelineConverter = config.timelineConverter;\r\n    let baseURLController = config.baseURLController;\r\n\r\n    let instance,\r\n        streamProcessors,\r\n        isStreamActivated,\r\n        isMediaInitialized,\r\n        streamInfo,\r\n        updateError,\r\n        isUpdating,\r\n        initialized,\r\n        protectionController,\r\n        liveEdgeFinder,\r\n        playbackController,\r\n        mediaController,\r\n        fragmentController,\r\n        eventController,\r\n        abrController,\r\n        textSourceBuffer;\r\n\r\n\r\n    function setup() {\r\n        streamProcessors = [];\r\n        isStreamActivated = false;\r\n        isMediaInitialized = false;\r\n        streamInfo = null;\r\n        updateError = {};\r\n        isUpdating = false;\r\n        initialized = false;\r\n\r\n        liveEdgeFinder = LiveEdgeFinder(context).getInstance();\r\n        playbackController = PlaybackController(context).getInstance();\r\n        abrController = AbrController(context).getInstance();\r\n        mediaController = MediaController(context).getInstance();\r\n        fragmentController = FragmentController(context).create();\r\n        textSourceBuffer = TextSourceBuffer(context).getInstance();\r\n\r\n        eventBus.on(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\r\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\r\n    }\r\n\r\n    function initialize(StreamInfo, ProtectionController) {\r\n        streamInfo = StreamInfo;\r\n        protectionController = ProtectionController;\r\n        if (protectionController) {\r\n            eventBus.on(Events.KEY_ERROR, onProtectionError, instance);\r\n            eventBus.on(Events.SERVER_CERTIFICATE_UPDATED, onProtectionError, instance);\r\n            eventBus.on(Events.LICENSE_REQUEST_COMPLETE, onProtectionError, instance);\r\n            eventBus.on(Events.KEY_SYSTEM_SELECTED, onProtectionError, instance);\r\n            eventBus.on(Events.KEY_SESSION_CREATED, onProtectionError, instance);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Activates Stream by re-initializing some of its components\r\n     * @param mediaSource {MediaSource}\r\n     * @memberof Stream#\r\n     */\r\n    function activate(mediaSource) {\r\n        if (!isStreamActivated) {\r\n            eventBus.on(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, instance);\r\n            initializeMedia(mediaSource);\r\n        } else {\r\n            createBuffers();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Partially resets some of the Stream elements\r\n     * @memberof Stream#\r\n     */\r\n    function deactivate() {\r\n        let ln = streamProcessors.length;\r\n        for (let i = 0; i < ln; i++) {\r\n            streamProcessors[i].reset();\r\n        }\r\n        streamProcessors = [];\r\n        isStreamActivated = false;\r\n        isMediaInitialized = false;\r\n        clearEventController();\r\n        eventBus.off(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, instance);\r\n    }\r\n\r\n    function reset() {\r\n\r\n        if (playbackController) {\r\n            playbackController.pause();\r\n            playbackController = null;\r\n        }\r\n\r\n        if (fragmentController) {\r\n            fragmentController.reset();\r\n            fragmentController = null;\r\n        }\r\n\r\n        liveEdgeFinder.abortSearch();\r\n        deactivate();\r\n\r\n        mediaController = null;\r\n        abrController = null;\r\n        manifestUpdater = null;\r\n        manifestModel = null;\r\n        adapter = null;\r\n        capabilities = null;\r\n        log = null;\r\n        errHandler = null;\r\n        isUpdating = false;\r\n        initialized = false;\r\n        updateError = {};\r\n\r\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\r\n        eventBus.off(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\r\n        eventBus.off(Events.KEY_ERROR, onProtectionError, instance);\r\n        eventBus.off(Events.SERVER_CERTIFICATE_UPDATED, onProtectionError, instance);\r\n        eventBus.off(Events.LICENSE_REQUEST_COMPLETE, onProtectionError, instance);\r\n        eventBus.off(Events.KEY_SYSTEM_SELECTED, onProtectionError, instance);\r\n        eventBus.off(Events.KEY_SESSION_CREATED, onProtectionError, instance);\r\n    }\r\n\r\n    function getDuration() {\r\n        return streamInfo.duration;\r\n    }\r\n\r\n    function getStartTime() {\r\n        return streamInfo.start;\r\n    }\r\n\r\n    function getStreamIndex() {\r\n        return streamInfo.index;\r\n    }\r\n\r\n    function getId() {\r\n        return streamInfo.id;\r\n    }\r\n\r\n    function getStreamInfo() {\r\n        return streamInfo;\r\n    }\r\n\r\n    function hasMedia(type) {\r\n        return (getMediaInfo(type) !== null);\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @returns {Array}\r\n     * @memberof Stream#\r\n     */\r\n    function getBitrateListFor(type) {\r\n        var mediaInfo = getMediaInfo(type);\r\n        return abrController.getBitrateList(mediaInfo);\r\n    }\r\n\r\n    function startEventController() {\r\n        if (eventController) {\r\n            eventController.start();\r\n        }\r\n    }\r\n\r\n    function clearEventController() {\r\n        if (eventController) {\r\n            eventController.clear();\r\n        }\r\n    }\r\n\r\n    function isActivated() {\r\n        return isStreamActivated;\r\n    }\r\n\r\n    function isInitialized() {\r\n        return initialized;\r\n    }\r\n\r\n    function onProtectionError(event) {\r\n        if (event.error) {\r\n            errHandler.mediaKeySessionError(event.error);\r\n            log(event.error);\r\n            reset();\r\n        }\r\n    }\r\n\r\n    function getMimeTypeOrType(mediaInfo) {\r\n        return mediaInfo.type === 'text' ? mediaInfo.mimeType : mediaInfo.type;\r\n    }\r\n\r\n    function isMediaSupported(mediaInfo, mediaSource, manifest) {\r\n        var type = mediaInfo.type;\r\n        var codec,\r\n            msg;\r\n\r\n        if (type === 'muxed' && mediaInfo) {\r\n            msg = 'Multiplexed representations are intentionally not supported, as they are not compliant with the DASH-AVC/264 guidelines';\r\n            log(msg);\r\n            errHandler.manifestError(msg, 'multiplexedrep', manifestModel.getValue());\r\n            return false;\r\n        }\r\n\r\n        if ((type === 'text') || (type === 'fragmentedText') || (type === 'embeddedText')) return true;\r\n\r\n        codec = mediaInfo.codec;\r\n        log(type + ' codec: ' + codec);\r\n\r\n        if (!!mediaInfo.contentProtection && !capabilities.supportsEncryptedMedia()) {\r\n            errHandler.capabilityError('encryptedmedia');\r\n        } else if (!capabilities.supportsCodec(VideoModel(context).getInstance().getElement(), codec)) {\r\n            msg = type + 'Codec (' + codec + ') is not supported.';\r\n            errHandler.manifestError(msg, 'codec', manifest);\r\n            log(msg);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function onCurrentTrackChanged(e) {\r\n        if (e.newMediaInfo.streamInfo.id !== streamInfo.id) return;\r\n\r\n        var processor = getProcessorForMediaInfo(e.oldMediaInfo);\r\n        if (!processor) return;\r\n\r\n        var currentTime = playbackController.getTime();\r\n        var buffer = processor.getBuffer();\r\n        var mediaInfo = e.newMediaInfo;\r\n        var manifest = manifestModel.getValue();\r\n        var idx = streamProcessors.indexOf(processor);\r\n        var mediaSource = processor.getMediaSource();\r\n\r\n        if (mediaInfo.type !== 'fragmentedText') {\r\n            processor.reset(true);\r\n            createStreamProcessor(mediaInfo, manifest, mediaSource, {buffer: buffer, replaceIdx: idx, currentTime: currentTime});\r\n            playbackController.seek(playbackController.getTime());\r\n        }else {\r\n            processor.updateMediaInfo(manifest, mediaInfo);\r\n        }\r\n    }\r\n\r\n    function createIndexHandler() {\r\n\r\n        let segmentBaseLoader = SegmentBaseLoader(context).getInstance();\r\n        segmentBaseLoader.setConfig({\r\n            baseURLController: baseURLController\r\n        });\r\n        segmentBaseLoader.initialize();\r\n\r\n        let handler = DashHandler(context).create({\r\n            segmentBaseLoader: segmentBaseLoader,\r\n            timelineConverter: timelineConverter,\r\n            dashMetrics: DashMetrics(context).getInstance(),\r\n            metricsModel: MetricsModel(context).getInstance(),\r\n            baseURLController: baseURLController\r\n        });\r\n\r\n        return handler;\r\n    }\r\n\r\n    function createStreamProcessor(mediaInfo, manifest, mediaSource, optionalSettings) {\r\n        var streamProcessor = StreamProcessor(context).create({\r\n            indexHandler: createIndexHandler(),\r\n            timelineConverter: timelineConverter,\r\n            adapter: adapter,\r\n            manifestModel: manifestModel\r\n        });\r\n\r\n        var allMediaForType = adapter.getAllMediaInfoForType(manifest, streamInfo, mediaInfo.type);\r\n        streamProcessor.initialize(getMimeTypeOrType(mediaInfo), fragmentController, mediaSource, instance, eventController);\r\n        abrController.updateTopQualityIndex(mediaInfo);\r\n\r\n        if (optionalSettings) {\r\n            streamProcessor.setBuffer(optionalSettings.buffer);\r\n            streamProcessors[optionalSettings.replaceIdx] = streamProcessor;\r\n        } else {\r\n            streamProcessors.push(streamProcessor);\r\n        }\r\n\r\n        if ((mediaInfo.type === 'text' || mediaInfo.type === 'fragmentedText')) {\r\n            var idx;\r\n            for (var i = 0; i < allMediaForType.length; i++) {\r\n                if (allMediaForType[i].index === mediaInfo.index) {\r\n                    idx = i;\r\n                }\r\n                streamProcessor.updateMediaInfo(manifest, allMediaForType[i]);//creates text tracks for all adaptations in one stream processor\r\n            }\r\n            if (mediaInfo.type === 'fragmentedText') {\r\n                streamProcessor.updateMediaInfo(manifest, allMediaForType[idx]);//sets the initial media info\r\n            }\r\n        }else {\r\n            streamProcessor.updateMediaInfo(manifest, mediaInfo);\r\n        }\r\n\r\n        return streamProcessor;\r\n    }\r\n\r\n    function initializeMediaForType(type, mediaSource) {\r\n        var manifest = manifestModel.getValue();\r\n        var allMediaForType = adapter.getAllMediaInfoForType(manifest, streamInfo, type);\r\n\r\n        var mediaInfo = null;\r\n        var initialMediaInfo;\r\n\r\n        if (!allMediaForType || allMediaForType.length === 0) {\r\n            log('No ' + type + ' data.');\r\n            return;\r\n        }\r\n\r\n        for (var i = 0, ln = allMediaForType.length; i < ln; i++) {\r\n            mediaInfo = allMediaForType[i];\r\n\r\n            if (type === 'embeddedText') {\r\n                textSourceBuffer.addEmbeddedTrack(mediaInfo);\r\n            } else {\r\n                if (!isMediaSupported(mediaInfo, mediaSource, manifest)) continue;\r\n\r\n                if (mediaController.isMultiTrackSupportedByType(mediaInfo.type)) {\r\n                    mediaController.addTrack(mediaInfo, streamInfo);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (type === 'embeddedText' || mediaController.getTracksFor(type, streamInfo).length === 0) {\r\n            return;\r\n        }\r\n\r\n        mediaController.checkInitialMediaSettingsForType(type, streamInfo);\r\n        initialMediaInfo = mediaController.getCurrentTrackFor(type, streamInfo);\r\n\r\n        // TODO : How to tell index handler live/duration?\r\n        // TODO : Pass to controller and then pass to each method on handler?\r\n\r\n        createStreamProcessor(initialMediaInfo, manifest, mediaSource);\r\n    }\r\n\r\n    function initializeMedia(mediaSource) {\r\n        var manifest = manifestModel.getValue();\r\n        var events;\r\n\r\n        eventController = EventController(context).getInstance();\r\n        eventController.initialize();\r\n        eventController.setConfig({\r\n            manifestModel: manifestModel,\r\n            manifestUpdater: manifestUpdater\r\n        });\r\n        events = adapter.getEventsFor(manifest, streamInfo);\r\n        eventController.addInlineEvents(events);\r\n\r\n        isUpdating = true;\r\n        initializeMediaForType('video', mediaSource);\r\n        initializeMediaForType('audio', mediaSource);\r\n        initializeMediaForType('text', mediaSource);\r\n        initializeMediaForType('fragmentedText', mediaSource);\r\n        initializeMediaForType('embeddedText', mediaSource);\r\n        initializeMediaForType('muxed', mediaSource);\r\n\r\n        createBuffers();\r\n\r\n        //TODO. Consider initialization of TextSourceBuffer here if embeddedText, but no sideloadedText.\r\n\r\n        isMediaInitialized = true;\r\n        isUpdating = false;\r\n\r\n        if (streamProcessors.length === 0) {\r\n            var msg = 'No streams to play.';\r\n            errHandler.manifestError(msg, 'nostreams', manifest);\r\n            log(msg);\r\n        } else {\r\n            liveEdgeFinder.initialize(timelineConverter, streamProcessors[0]);\r\n            //log(\"Playback initialized!\");\r\n            checkIfInitializationCompleted();\r\n        }\r\n    }\r\n\r\n    function checkIfInitializationCompleted() {\r\n        var ln = streamProcessors.length;\r\n        var hasError = !!updateError.audio || !!updateError.video;\r\n        var error = hasError ? new Error(DATA_UPDATE_FAILED_ERROR_CODE, 'Data update failed', null) : null;\r\n        var i = 0;\r\n\r\n        for (i; i < ln; i++) {\r\n            if (streamProcessors[i].isUpdating() || isUpdating) return;\r\n        }\r\n\r\n        initialized = true;\r\n        isStreamActivated = true;\r\n        if (!isMediaInitialized) return;\r\n        if (protectionController) {\r\n            protectionController.initialize(manifestModel.getValue(), getMediaInfo('audio'), getMediaInfo('video'));\r\n        }\r\n        eventBus.trigger(Events.STREAM_INITIALIZED, {streamInfo: streamInfo, error: error});\r\n    }\r\n\r\n    function getMediaInfo(type) {\r\n        var ln = streamProcessors.length;\r\n        var mediaCtrl = null;\r\n\r\n        for (var i = 0; i < ln; i++) {\r\n            mediaCtrl = streamProcessors[i];\r\n\r\n            if (mediaCtrl.getType() === type) return mediaCtrl.getMediaInfo();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function createBuffers() {\r\n        for (var i = 0, ln = streamProcessors.length; i < ln; i++) {\r\n            streamProcessors[i].createBuffer();\r\n        }\r\n    }\r\n\r\n    function onBufferingCompleted(e) {\r\n        if (e.streamInfo !== streamInfo) return;\r\n\r\n        var processors = getProcessors();\r\n        var ln = processors.length;\r\n        var i = 0;\r\n\r\n        // if there is at least one buffer controller that has not completed buffering yet do nothing\r\n        for (i; i < ln; i++) {\r\n            if (!processors[i].isBufferingCompleted()) return;\r\n        }\r\n\r\n        eventBus.trigger(Events.STREAM_BUFFERING_COMPLETED, {streamInfo: streamInfo});\r\n    }\r\n\r\n    function onDataUpdateCompleted(e) {\r\n        var sp = e.sender.getStreamProcessor();\r\n\r\n        if (sp.getStreamInfo() !== streamInfo) return;\r\n\r\n        updateError[sp.getType()] = e.error;\r\n        checkIfInitializationCompleted();\r\n    }\r\n\r\n    function getProcessorForMediaInfo(mediaInfo) {\r\n        if (!mediaInfo) return false;\r\n\r\n        var processors = getProcessors();\r\n\r\n        return processors.filter(function (processor) {\r\n            return (processor.getType() === mediaInfo.type);\r\n        })[0];\r\n    }\r\n\r\n    function getProcessors() {\r\n        var ln = streamProcessors.length;\r\n        var arr = [];\r\n        var i = 0;\r\n\r\n        var type,\r\n            controller;\r\n\r\n        for (i; i < ln; i++) {\r\n            controller = streamProcessors[i];\r\n            type = controller.getType();\r\n\r\n            if (type === 'audio' || type === 'video' || type === 'fragmentedText') {\r\n                arr.push(controller);\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    function updateData(updatedStreamInfo) {\r\n        var ln = streamProcessors.length;\r\n        var manifest = manifestModel.getValue();\r\n\r\n        var i = 0;\r\n        var mediaInfo,\r\n           events,\r\n           controller;\r\n\r\n        isStreamActivated = false;\r\n        streamInfo = updatedStreamInfo;\r\n        log('Manifest updated... set new data on buffers.');\r\n\r\n        if (eventController) {\r\n            events = adapter.getEventsFor(manifest, streamInfo);\r\n            eventController.addInlineEvents(events);\r\n        }\r\n\r\n        isUpdating = true;\r\n        initialized = false;\r\n\r\n        for (i; i < ln; i++) {\r\n            controller = streamProcessors[i];\r\n            mediaInfo = adapter.getMediaInfoForType(manifest, streamInfo, controller.getType());\r\n            abrController.updateTopQualityIndex(mediaInfo);\r\n            controller.updateMediaInfo(manifest, mediaInfo);\r\n        }\r\n\r\n        isUpdating = false;\r\n        checkIfInitializationCompleted();\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        activate: activate,\r\n        deactivate: deactivate,\r\n        getDuration: getDuration,\r\n        getStartTime: getStartTime,\r\n        getStreamIndex: getStreamIndex,\r\n        getId: getId,\r\n        getStreamInfo: getStreamInfo,\r\n        hasMedia: hasMedia,\r\n        getBitrateListFor: getBitrateListFor,\r\n        startEventController: startEventController,\r\n        isActivated: isActivated,\r\n        isInitialized: isInitialized,\r\n        updateData: updateData,\r\n        reset: reset,\r\n        getProcessors: getProcessors\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nStream.__dashjs_factory_name = 'Stream';\r\nexport default FactoryMaker.getClassFactory(Stream);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport AbrController from './controllers/AbrController.js';\r\nimport BufferController from './controllers/BufferController.js';\r\nimport StreamController from './controllers/StreamController.js';\r\nimport MediaController from './controllers/MediaController.js';\r\nimport TextController from './controllers/TextController.js';\r\nimport ScheduleController from './controllers/ScheduleController.js';\r\nimport RulesController from './rules/RulesController.js';\r\nimport MediaPlayerModel from './models/MediaPlayerModel.js';\r\nimport MetricsModel from './models/MetricsModel.js';\r\nimport FragmentLoader from './FragmentLoader.js';\r\nimport RequestModifier from './utils/RequestModifier.js';\r\nimport SourceBufferController from './controllers/SourceBufferController';\r\nimport TextSourceBuffer from './TextSourceBuffer.js';\r\nimport VirtualBuffer from './VirtualBuffer.js';\r\nimport MediaSourceController from './controllers/MediaSourceController.js';\r\nimport DashManifestModel from '../dash/models/DashManifestModel.js';\r\nimport DashMetrics from '../dash/DashMetrics.js';\r\nimport RepresentationController from '../dash/controllers/RepresentationController.js';\r\nimport ErrorHandler from './utils/ErrorHandler.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\n\r\nfunction StreamProcessor(config) {\r\n\r\n    let context = this.context;\r\n\r\n    let indexHandler = config.indexHandler;\r\n    let timelineConverter = config.timelineConverter;\r\n    let adapter = config.adapter;\r\n    let manifestModel = config.manifestModel;\r\n\r\n    let instance,\r\n        dynamic,\r\n        mediaInfo,\r\n        type,\r\n        mediaInfoArr,\r\n        stream,\r\n        eventController,\r\n        abrController,\r\n        bufferController,\r\n        scheduleController,\r\n        representationController,\r\n        fragmentController,\r\n        fragmentLoader,\r\n        fragmentModel;\r\n\r\n\r\n    function setup() {\r\n        mediaInfoArr = [];\r\n    }\r\n\r\n    function initialize(Type, FragmentController, mediaSource, Stream, EventController) {\r\n\r\n        type = Type;\r\n        stream = Stream;\r\n        eventController = EventController;\r\n        fragmentController = FragmentController;\r\n        dynamic = stream.getStreamInfo().manifestInfo.isDynamic;\r\n\r\n        indexHandler.initialize(this);\r\n\r\n        abrController = AbrController(context).getInstance();\r\n        abrController.initialize(type, this);\r\n\r\n        bufferController = createBufferControllerForType(Type);\r\n        bufferController.initialize(type, mediaSource, this);\r\n\r\n        scheduleController = ScheduleController(context).create({\r\n            metricsModel: MetricsModel(context).getInstance(),\r\n            manifestModel: manifestModel,\r\n            adapter: adapter,\r\n            dashMetrics: DashMetrics(context).getInstance(),\r\n            dashManifestModel: DashManifestModel(context).getInstance(),\r\n            timelineConverter: timelineConverter,\r\n            rulesController: RulesController(context).getInstance(),\r\n            mediaPlayerModel: MediaPlayerModel(context).getInstance(),\r\n        });\r\n\r\n        scheduleController.initialize(type, this);\r\n\r\n        fragmentLoader = FragmentLoader(context).create({\r\n            metricsModel: MetricsModel(context).getInstance(),\r\n            errHandler: ErrorHandler(context).getInstance(),\r\n            requestModifier: RequestModifier(context).getInstance()\r\n        });\r\n\r\n        representationController = RepresentationController(context).create();\r\n        representationController.initialize(this);\r\n\r\n        fragmentModel = scheduleController.getFragmentModel();\r\n        fragmentModel.setLoader(fragmentLoader);\r\n    }\r\n\r\n    function reset(errored) {\r\n        if (fragmentModel) {\r\n            fragmentModel.reset();\r\n            fragmentModel = null;\r\n        }\r\n\r\n        indexHandler.reset();\r\n\r\n        if (bufferController) {\r\n            bufferController.reset(errored);\r\n            bufferController = null;\r\n        }\r\n\r\n        if (scheduleController) {\r\n            scheduleController.reset();\r\n            scheduleController = null;\r\n        }\r\n\r\n        if (representationController) {\r\n            representationController.reset();\r\n            representationController = null;\r\n        }\r\n\r\n        fragmentController = null;\r\n        fragmentLoader = null;\r\n\r\n        eventController = null;\r\n        stream = null;\r\n        dynamic = null;\r\n        mediaInfo = null;\r\n        mediaInfoArr = [];\r\n        type = null;\r\n    }\r\n\r\n    function isUpdating() {\r\n        return representationController.isUpdating();\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    function getABRController() {\r\n        return abrController;\r\n    }\r\n\r\n    function getRepresentationController() {\r\n        return representationController;\r\n    }\r\n\r\n    function getFragmentLoader() {\r\n        return fragmentLoader;\r\n    }\r\n\r\n    function getIndexHandler() {\r\n        return indexHandler;\r\n    }\r\n\r\n    function getFragmentController() {\r\n        return fragmentController;\r\n    }\r\n\r\n    function getBuffer() {\r\n        return bufferController.getBuffer();\r\n    }\r\n\r\n    function setBuffer(buffer) {\r\n        bufferController.setBuffer(buffer);\r\n    }\r\n\r\n    function getBufferController() {\r\n        return bufferController;\r\n    }\r\n\r\n    function getFragmentModel() {\r\n        return fragmentModel;\r\n    }\r\n\r\n    function getStreamInfo() {\r\n        return stream.getStreamInfo();\r\n    }\r\n\r\n    function updateMediaInfo(manifest, newMediaInfo) {\r\n        if (newMediaInfo !== mediaInfo && (!newMediaInfo || !mediaInfo || (newMediaInfo.type === mediaInfo.type))) {\r\n            mediaInfo = newMediaInfo;\r\n        }\r\n        if (mediaInfoArr.indexOf(newMediaInfo) === -1) {\r\n            mediaInfoArr.push(newMediaInfo);\r\n        }\r\n        adapter.updateData(manifest, this);\r\n    }\r\n\r\n    function getMediaInfoArr() {\r\n        return mediaInfoArr;\r\n    }\r\n\r\n    function getMediaInfo() {\r\n        return mediaInfo;\r\n    }\r\n\r\n    function getMediaSource() {\r\n        return bufferController.getMediaSource();\r\n    }\r\n\r\n    function getScheduleController() {\r\n        return scheduleController;\r\n    }\r\n\r\n    function getEventController() {\r\n        return eventController;\r\n    }\r\n\r\n    function start() {\r\n        scheduleController.start();\r\n    }\r\n\r\n    function stop() {\r\n        scheduleController.stop();\r\n    }\r\n\r\n    function getCurrentRepresentationInfo() {\r\n        return adapter.getCurrentRepresentationInfo(manifestModel.getValue(), representationController);\r\n    }\r\n\r\n    function getRepresentationInfoForQuality(quality) {\r\n        return adapter.getRepresentationInfoForQuality(manifestModel.getValue(), representationController, quality);\r\n    }\r\n\r\n    function isBufferingCompleted() {\r\n        return bufferController.getIsBufferingCompleted();\r\n    }\r\n\r\n    function createBuffer() {\r\n        return (bufferController.getBuffer() || bufferController.createBuffer(mediaInfo));\r\n    }\r\n\r\n    function isDynamic() {\r\n        return dynamic;\r\n    }\r\n\r\n    function createBufferControllerForType(type) {\r\n        var controller = null;\r\n\r\n        if (type === 'video' || type === 'audio' || type === 'fragmentedText') {\r\n            controller = BufferController(context).create({\r\n                metricsModel: MetricsModel(context).getInstance(),\r\n                manifestModel: manifestModel,\r\n                sourceBufferController: SourceBufferController(context).getInstance(),\r\n                errHandler: ErrorHandler(context).getInstance(),\r\n                mediaSourceController: MediaSourceController(context).getInstance(),\r\n                streamController: StreamController(context).getInstance(),\r\n                mediaController: MediaController(context).getInstance(),\r\n                adapter: adapter,\r\n                virtualBuffer: VirtualBuffer(context).getInstance(),\r\n                textSourceBuffer: TextSourceBuffer(context).getInstance(),\r\n            });\r\n        }else {\r\n            controller = TextController(context).create({\r\n                errHandler: ErrorHandler(context).getInstance(),\r\n                sourceBufferController: SourceBufferController(context).getInstance()\r\n            });\r\n        }\r\n\r\n        return controller;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        isUpdating: isUpdating,\r\n        getType: getType,\r\n        getBufferController: getBufferController,\r\n        getABRController: getABRController,\r\n        getFragmentLoader: getFragmentLoader,\r\n        getFragmentModel: getFragmentModel,\r\n        getScheduleController: getScheduleController,\r\n        getEventController: getEventController,\r\n        getFragmentController: getFragmentController,\r\n        getRepresentationController: getRepresentationController,\r\n        getIndexHandler: getIndexHandler,\r\n        getCurrentRepresentationInfo: getCurrentRepresentationInfo,\r\n        getRepresentationInfoForQuality: getRepresentationInfoForQuality,\r\n        isBufferingCompleted: isBufferingCompleted,\r\n        createBuffer: createBuffer,\r\n        getStreamInfo: getStreamInfo,\r\n        updateMediaInfo: updateMediaInfo,\r\n        getMediaInfoArr: getMediaInfoArr,\r\n        getMediaInfo: getMediaInfo,\r\n        getMediaSource: getMediaSource,\r\n        getBuffer: getBuffer,\r\n        setBuffer: setBuffer,\r\n        start: start,\r\n        stop: stop,\r\n        isDynamic: isDynamic,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\nStreamProcessor.__dashjs_factory_name = 'StreamProcessor';\r\nexport default FactoryMaker.getClassFactory(StreamProcessor);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport TextTrackInfo from './vo/TextTrackInfo.js';\r\nimport FragmentedTextBoxParser from '../dash/utils/FragmentedTextBoxParser.js';\r\nimport BoxParser from './utils/BoxParser.js';\r\nimport CustomTimeRanges from './utils/CustomTimeRanges.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\nimport Debug from '../core/Debug.js';\r\nimport VideoModel from './models/VideoModel.js';\r\nimport TextTracks from './TextTracks.js';\r\nimport ISOBoxer from 'codem-isoboxer';\r\nimport cea608parser from '../../externals/cea608-parser.js';\r\n\r\nfunction TextSourceBuffer() {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let embeddedInitialized = false;\r\n    let captionId = 0;\r\n\r\n    let instance,\r\n        boxParser,\r\n        errHandler,\r\n        adapter,\r\n        dashManifestModel,\r\n        mediaController,\r\n        allTracksAreDisabled,\r\n        parser,\r\n        VTTParser,\r\n        TTMLParser,\r\n        fragmentedTextBoxParser,\r\n        mediaInfos,\r\n        textTracks,\r\n        isFragmented,\r\n        fragmentModel,\r\n        initializationSegmentReceived,\r\n        timescale,\r\n        fragmentedTracks,\r\n        videoModel,\r\n        streamController,\r\n        firstSubtitleStart,\r\n        currFragmentedTrackIdx,\r\n        embeddedTracks,\r\n        embeddedInitializationSegmentReceived,\r\n        embeddedTimescale,\r\n        embeddedLastSequenceNumber,\r\n        embeddedSequenceNumbers,\r\n        embeddedCea608FieldParsers;\r\n\r\n    function initialize(type, bufferController) {\r\n        allTracksAreDisabled = false;\r\n        parser = null;\r\n        fragmentModel = null;\r\n        initializationSegmentReceived = false;\r\n        timescale = NaN;\r\n        fragmentedTracks = [];\r\n        firstSubtitleStart = null;\r\n\r\n        if (!embeddedInitialized) {\r\n            initEmbedded();\r\n        }\r\n\r\n        let streamProcessor = bufferController.getStreamProcessor();\r\n\r\n        mediaInfos = streamProcessor.getMediaInfoArr();\r\n        textTracks.setConfig({videoModel: videoModel});\r\n        textTracks.initialize();\r\n        isFragmented = !dashManifestModel.getIsTextTrack(type);\r\n        boxParser = BoxParser(context).getInstance();\r\n        fragmentedTextBoxParser = FragmentedTextBoxParser(context).getInstance();\r\n        fragmentedTextBoxParser.setConfig({boxParser: boxParser});\r\n\r\n        if (isFragmented) {\r\n            fragmentModel = streamProcessor.getFragmentModel();\r\n            this.buffered =  CustomTimeRanges(context).create();\r\n            fragmentedTracks = mediaController.getTracksFor('fragmentedText', streamController.getActiveStreamInfo());\r\n            var currFragTrack = mediaController.getCurrentTrackFor('fragmentedText', streamController.getActiveStreamInfo());\r\n            for (var i = 0 ; i < fragmentedTracks.length; i++) {\r\n                if (fragmentedTracks[i] === currFragTrack) {\r\n                    currFragmentedTrackIdx = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function initEmbedded() {\r\n        embeddedTracks = [];\r\n        mediaInfos = [];\r\n        videoModel = VideoModel(context).getInstance();\r\n        textTracks = TextTracks(context).getInstance();\r\n        textTracks.setConfig({videoModel: videoModel});\r\n        textTracks.initialize();\r\n        boxParser = BoxParser(context).getInstance();\r\n        fragmentedTextBoxParser = FragmentedTextBoxParser(context).getInstance();\r\n        fragmentedTextBoxParser.setConfig({boxParser: boxParser});\r\n        isFragmented = false;\r\n        currFragmentedTrackIdx = null;\r\n        embeddedInitializationSegmentReceived = false;\r\n        embeddedTimescale = 0;\r\n        embeddedCea608FieldParsers = [];\r\n        embeddedSequenceNumbers = [];\r\n        embeddedLastSequenceNumber = null;\r\n        embeddedInitialized = true;\r\n    }\r\n\r\n    function append(bytes, chunk) {\r\n        var result,\r\n            sampleList,\r\n            i,\r\n            samplesInfo,\r\n            ccContent;\r\n        var mediaInfo = chunk.mediaInfo;\r\n        var mediaType = mediaInfo.type;\r\n        var mimeType = mediaInfo.mimeType;\r\n        var codecType = mediaInfo.codec || mimeType;\r\n        if (!codecType) {\r\n            log('No text type defined');\r\n            return;\r\n        }\r\n\r\n        function createTextTrackFromMediaInfo(captionData, mediaInfo) {\r\n            var textTrackInfo = new TextTrackInfo();\r\n            var trackKindMap = { subtitle: 'subtitles', caption: 'captions' }; //Dash Spec has no \"s\" on end of KIND but HTML needs plural.\r\n            var getKind = function () {\r\n                var kind = (mediaInfo.roles.length > 0) ? trackKindMap[mediaInfo.roles[0]] : trackKindMap.caption;\r\n                kind = (kind === trackKindMap.caption || kind === trackKindMap.subtitle) ? kind : trackKindMap.caption;\r\n                return kind;\r\n            };\r\n\r\n            var checkTTML = function () {\r\n                var ttml = false;\r\n                if (mediaInfo.codec && mediaInfo.codec.search('stpp') >= 0) {\r\n                    ttml = true;\r\n                }\r\n                if (mediaInfo.mimeType && mediaInfo.mimeType.search('ttml') >= 0) {\r\n                    ttml = true;\r\n                }\r\n                return ttml;\r\n            };\r\n\r\n            textTrackInfo.captionData = captionData;\r\n            textTrackInfo.lang = mediaInfo.lang;\r\n            textTrackInfo.label = mediaInfo.id; // AdaptationSet id (an unsigned int)\r\n            textTrackInfo.index = mediaInfo.index; // AdaptationSet index in manifest\r\n            textTrackInfo.isTTML = checkTTML();\r\n            textTrackInfo.video = videoModel.getElement();\r\n            textTrackInfo.defaultTrack = getIsDefault(mediaInfo);\r\n            textTrackInfo.isFragmented = isFragmented;\r\n            textTrackInfo.isEmbedded = mediaInfo.isEmbedded ? true : false;\r\n            textTrackInfo.kind = getKind();\r\n            var totalNrTracks = (mediaInfos ? mediaInfos.length : 0) + embeddedTracks.length;\r\n            textTracks.addTextTrack(textTrackInfo, totalNrTracks);\r\n        }\r\n\r\n        if (mediaType === 'fragmentedText') {\r\n            if (!initializationSegmentReceived) {\r\n                initializationSegmentReceived = true;\r\n                for (i = 0; i < mediaInfos.length; i++) {\r\n                    createTextTrackFromMediaInfo(null, mediaInfos[i]);\r\n                }\r\n                timescale = fragmentedTextBoxParser.getMediaTimescaleFromMoov(bytes);\r\n            } else {\r\n                samplesInfo = fragmentedTextBoxParser.getSamplesInfo(bytes);\r\n                sampleList = samplesInfo.sampleList;\r\n                if (!firstSubtitleStart && sampleList.length > 0) {\r\n                    firstSubtitleStart = sampleList[0].cts - chunk.start * timescale;\r\n                }\r\n                if (codecType.search('stpp') >= 0) {\r\n                    parser = parser !== null ? parser : getParser(codecType);\r\n                    for (i = 0; i < sampleList.length; i++) {\r\n                        let sample = sampleList[i];\r\n                        let sampleStart = sample.cts;\r\n                        let sampleRelStart = sampleStart - firstSubtitleStart;\r\n                        this.buffered.add(sampleRelStart / timescale, (sampleRelStart + sample.duration) / timescale);\r\n                        let dataView = new DataView(bytes, sample.offset, sample.size);\r\n                        ccContent = ISOBoxer.Utils.dataViewToString(dataView, 'utf-8');\r\n                        try {\r\n                            result = parser.parse(ccContent, sampleStart / timescale, (sampleStart + sample.duration) / timescale);\r\n                            textTracks.addCaptions(currFragmentedTrackIdx, firstSubtitleStart / timescale, result);\r\n                        } catch (e) {\r\n                            log('TTML parser error: ' + e.message);\r\n                        }\r\n                    }\r\n                } else {\r\n                    // WebVTT case\r\n                    var captionArray = [];\r\n                    for (i = 0 ; i < sampleList.length; i++) {\r\n                        var sample = sampleList[i];\r\n                        sample.cts -= firstSubtitleStart;\r\n                        this.buffered.add(sample.cts / timescale, (sample.cts + sample.duration) / timescale);\r\n                        var sampleData = bytes.slice(sample.offset, sample.offset + sample.size);\r\n                        // There are boxes inside the sampleData, so we need a ISOBoxer to get at it.\r\n                        var sampleBoxes = ISOBoxer.parseBuffer(sampleData);\r\n\r\n                        for (var j = 0 ; j < sampleBoxes.boxes.length; j++) {\r\n                            var box1 = sampleBoxes.boxes[j];\r\n                            log('VTT box1: ' + box1.type);\r\n                            if (box1.type === 'vtte') {\r\n                                continue; //Empty box\r\n                            }\r\n                            if (box1.type === 'vttc') {\r\n                                log('VTT vttc boxes.length = ' + box1.boxes.length);\r\n                                for (var k = 0 ; k < box1.boxes.length; k++) {\r\n                                    var box2 = box1.boxes[k];\r\n                                    log('VTT box2: ' + box2.type);\r\n                                    if (box2.type === 'payl') {\r\n                                        var cue_text = box2.cue_text;\r\n                                        log('VTT cue_text = ' + cue_text);\r\n                                        var start_time = sample.cts / timescale;\r\n                                        var end_time = (sample.cts + sample.duration) / timescale;\r\n                                        captionArray.push({\r\n                                            start: start_time,\r\n                                            end: end_time,\r\n                                            data: cue_text,\r\n                                            styles: {}\r\n                                        });\r\n                                        log('VTT ' + start_time + '-' + end_time + ' : ' + cue_text);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (captionArray.length > 0) {\r\n                        textTracks.addCaptions(currFragmentedTrackIdx, 0, captionArray);\r\n                    }\r\n                }\r\n            }\r\n        } else if (mediaType === 'text') {\r\n            let dataView = new DataView(bytes, 0, bytes.byteLength);\r\n            ccContent = ISOBoxer.Utils.dataViewToString(dataView, 'utf-8');\r\n\r\n            try {\r\n                result = getParser(codecType).parse(ccContent);\r\n                createTextTrackFromMediaInfo(result, mediaInfo);\r\n            } catch (e) {\r\n                errHandler.timedTextError(e, 'parse', ccContent);\r\n            }\r\n        } else if (mediaType === 'video') { //embedded text\r\n            if (chunk.segmentType === 'InitializationSegment') {\r\n                if (embeddedTimescale === 0) {\r\n                    embeddedTimescale = fragmentedTextBoxParser.getMediaTimescaleFromMoov(bytes);\r\n                    for (i = 0; i < embeddedTracks.length; i++) {\r\n                        createTextTrackFromMediaInfo(null, embeddedTracks[i]);\r\n                    }\r\n                }\r\n            } else { // MediaSegment\r\n                if (embeddedTimescale === 0) {\r\n                    log('CEA-608: No timescale for embeddedTextTrack yet');\r\n                    return;\r\n                }\r\n                var makeCueAdderForIndex = function (self, trackIndex) {\r\n                    function newCue(startTime, endTime, captionScreen) {\r\n                        var captionsArray = null;\r\n                        if (videoModel.getTTMLRenderingDiv()) {\r\n                            captionsArray = createHTMLCaptionsFromScreen(videoModel.getElement(), startTime, endTime, captionScreen);\r\n                        } else {\r\n                            var text = captionScreen.getDisplayText();\r\n                            //log(\"CEA text: \" + startTime + \"-\" + endTime + \"  '\" + text + \"'\");\r\n                            captionsArray = [{ start: startTime, end: endTime, data: text, styles: {} }];\r\n                        }\r\n                        if (captionsArray) {\r\n                            textTracks.addCaptions(trackIndex, 0, captionsArray);\r\n                        }\r\n                    }\r\n                    return newCue;\r\n                };\r\n\r\n\r\n                samplesInfo = fragmentedTextBoxParser.getSamplesInfo(bytes);\r\n                var sequenceNumber = samplesInfo.sequenceNumber;\r\n\r\n                if (!embeddedCea608FieldParsers[0] && !embeddedCea608FieldParsers[1]) {\r\n                    // Time to setup the CEA-608 parsing\r\n                    let field, handler, trackIdx;\r\n                    for (i = 0; i < embeddedTracks.length; i++) {\r\n                        if (embeddedTracks[i].id === 'CC1') {\r\n                            field = 0;\r\n                            trackIdx = textTracks.getTrackIdxForId('CC1');\r\n                        } else if (embeddedTracks[i].id === 'CC3') {\r\n                            field = 1;\r\n                            trackIdx = textTracks.getTrackIdxForId('CC3');\r\n                        }\r\n                        if (trackIdx === -1) {\r\n                            log('CEA-608: data before track is ready.');\r\n                            return;\r\n                        }\r\n                        handler = makeCueAdderForIndex(this, trackIdx);\r\n                        embeddedCea608FieldParsers[i] = new cea608parser.Cea608Parser(i, { 'newCue': handler }, null);\r\n                    }\r\n                }\r\n\r\n                if (embeddedTimescale && embeddedSequenceNumbers.indexOf(sequenceNumber) == -1) {\r\n                    if (embeddedLastSequenceNumber !== null && sequenceNumber !== embeddedLastSequenceNumber + 1) {\r\n                        for (i = 0; i < embeddedCea608FieldParsers.length; i++) {\r\n                            if (embeddedCea608FieldParsers[i]) {\r\n                                embeddedCea608FieldParsers[i].reset();\r\n                            }\r\n                        }\r\n                    }\r\n                    var allCcData = extractCea608Data(bytes);\r\n\r\n                    for (var fieldNr = 0; fieldNr < embeddedCea608FieldParsers.length; fieldNr++) {\r\n                        var ccData = allCcData.fields[fieldNr];\r\n                        var fieldParser = embeddedCea608FieldParsers[fieldNr];\r\n                        if (fieldParser) {\r\n                            /*if (ccData.length > 0 ) {\r\n                                log(\"CEA-608 adding Data to field \" + fieldNr + \" \" + ccData.length + \"bytes\");\r\n                            }*/\r\n                            for (i = 0; i < ccData.length; i++) {\r\n                                fieldParser.addData(ccData[i][0] / embeddedTimescale, ccData[i][1]);\r\n                            }\r\n                            if (allCcData.endTime) {\r\n                                fieldParser.cueSplitAtTime(allCcData.endTime / embeddedTimescale);\r\n                            }\r\n                        }\r\n                    }\r\n                    embeddedLastSequenceNumber = sequenceNumber;\r\n                    embeddedSequenceNumbers.push(sequenceNumber);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Extract CEA-608 data from a buffer of data.\r\n     * @parameter(data) ArrayBuffer of data\r\n     * @returns ccData corresponding to one segment.\r\n    */\r\n    function extractCea608Data(data) {\r\n\r\n        /** Insert [time, data] pairs in order into array. */\r\n        var insertInOrder = function (arr, time, data) {\r\n            var len = arr.length;\r\n            if (len > 0) {\r\n                if (time >= arr[len - 1][0]) {\r\n                    arr.push([time, data]);\r\n                } else {\r\n                    for (var pos = len - 1; pos >= 0; pos--) {\r\n                        if (time < arr[pos][0]) {\r\n                            arr.splice(pos, 0, [time, data]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                arr.push([time, data]);\r\n            }\r\n        };\r\n\r\n        var isoFile = boxParser.parse(data);\r\n        var moof = isoFile.getBox('moof');\r\n        var tfdt = isoFile.getBox('tfdt');\r\n        //var tfhd = isoFile.getBox('tfhd'); //Can have a base_data_offset and other default values\r\n        //log(\"tfhd: \" + tfhd);\r\n        //var saio = isoFile.getBox('saio'); // Offset possibly\r\n        //var saiz = isoFile.getBox('saiz'); // Possible sizes\r\n        var truns = isoFile.getBoxes('trun'); //\r\n        var trun = null;\r\n\r\n        if (truns.length === 0) {\r\n            return null;\r\n        }\r\n        trun = truns[0];\r\n        if (truns.length > 1) {\r\n            log('Warning: Too many truns');\r\n        }\r\n        var baseOffset = moof.offset + trun.data_offset;\r\n        //Doublecheck that trun.offset == moof.size + 8\r\n        var sampleCount = trun.sample_count;\r\n        var startPos = baseOffset;\r\n        var baseSampleTime = tfdt.baseMediaDecodeTime;\r\n        var raw = new DataView(data);\r\n        var allCcData = { 'startTime': null, 'endTime': null, fields: [[], []] };\r\n        var accDuration = 0;\r\n        for (var i = 0; i < sampleCount; i++) {\r\n            var sample = trun.samples[i];\r\n            var sampleTime = baseSampleTime + accDuration + sample.sample_composition_time_offset;\r\n            var cea608Ranges = cea608parser.findCea608Nalus(raw, startPos, sample.sample_size);\r\n            for (var j = 0; j < cea608Ranges.length; j++) {\r\n                var ccData = cea608parser.extractCea608DataFromRange(raw, cea608Ranges[j]);\r\n                for (var k = 0; k < 2; k++) {\r\n                    if (ccData[k].length > 0) {\r\n                        insertInOrder(allCcData.fields[k], sampleTime, ccData[k]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            accDuration += sample.sample_duration;\r\n            startPos += sample.sample_size;\r\n        }\r\n        var endSampleTime = baseSampleTime + accDuration;\r\n        allCcData.startTime = baseSampleTime;\r\n        allCcData.endTime = endSampleTime;\r\n        return allCcData;\r\n    }\r\n\r\n    /* HTML Rendering functions */\r\n    function checkIndent(chars) {\r\n        var line = '';\r\n\r\n        for (var c = 0; c < chars.length; ++c) {\r\n            var uc = chars[c];\r\n            line += uc.uchar;\r\n        }\r\n\r\n        var l = line.length;\r\n        var ll = line.replace(/^\\s+/,'').length;\r\n        return l - ll;\r\n    }\r\n\r\n    function getRegionProperties(region) {\r\n        return 'left: ' + (region.x * 3.125) + '%; top: ' + (region.y1 * 6.66) + '%; width: ' + (100 - (region.x * 3.125)) + '%; height: ' + (Math.max((region.y2 - 1) - region.y1, 1) * 6.66) + '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';\r\n    }\r\n\r\n    function createRGB(color) {\r\n        if (color == 'red') {\r\n            return 'rgb(255, 0, 0)';\r\n        } else if (color == 'green') {\r\n            return 'rgb(0, 255, 0)';\r\n        } else if (color == 'blue') {\r\n            return 'rgb(0, 0, 255)';\r\n        } else if (color == 'cyan') {\r\n            return 'rgb(0, 255, 255)';\r\n        } else if (color == 'magenta') {\r\n            return 'rgb(255, 0, 255)';\r\n        } else if (color == 'yellow') {\r\n            return 'rgb(255, 255, 0)';\r\n        } else if (color == 'white') {\r\n            return 'rgb(255, 255, 255)';\r\n        } else if (color == 'black') {\r\n            return 'rgb(0, 0, 0)';\r\n        }\r\n        return color;\r\n    }\r\n\r\n    function getStyle(videoElement, style) {\r\n        var fontSize = videoElement.videoHeight / 15.0;\r\n        if (style) {\r\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; color: ' + ((style.foreground) ? createRGB(style.foreground) : 'rgb(255, 255, 255)') + '; font-style: ' + (style.italics ? 'italic' : 'normal') + '; text-decoration: ' + (style.underline ? 'underline' : 'none') + '; white-space: pre; background-color: ' + ((style.background) ? createRGB(style.background) : 'transparent') + ';';\r\n        } else {\r\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';\r\n        }\r\n    }\r\n\r\n    function ltrim(s) {\r\n        var trimmed = s.replace(/^\\s+/g, '');\r\n        return trimmed;\r\n    }\r\n    function rtrim(s) {\r\n        var trimmed = s.replace(/\\s+$/g, '');\r\n        return trimmed;\r\n    }\r\n\r\n\r\n    function createHTMLCaptionsFromScreen(videoElement, startTime, endTime, captionScreen) {\r\n\r\n        let currRegion = null;\r\n        let existingRegion = null;\r\n        let lastRowHasText = false;\r\n        let lastRowIndentL = -1;\r\n        let currP = { start: startTime, end: endTime, spans: [] };\r\n        let currentStyle = 'style_cea608_white_black';\r\n        let seenRegions = { };\r\n        let styleStates = { };\r\n        let regions = [];\r\n        let r, s;\r\n\r\n        for (r = 0; r < 15; ++r) {\r\n            let row = captionScreen.rows[r];\r\n            let line = '';\r\n            let prevPenState = null;\r\n\r\n            if (false === row.isEmpty()) {\r\n                /* Row is not empty */\r\n\r\n                /* Get indentation of this row */\r\n                let rowIndent = checkIndent(row.chars);\r\n\r\n                /* Create a new region is there is none */\r\n                if (currRegion === null) {\r\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\r\n                }\r\n\r\n                /* Check if indentation has changed and we had text of last row */\r\n                if ((rowIndent !== lastRowIndentL) && lastRowHasText) {\r\n                    currRegion.p.push(currP);\r\n                    currP = { start: startTime, end: endTime, spans: [] };\r\n                    currRegion.y2 = r;\r\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\r\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\r\n                        regions.push(currRegion);\r\n                        seenRegions[currRegion.name] = currRegion;\r\n                    } else {\r\n                        existingRegion = seenRegions[currRegion.name];\r\n                        existingRegion.p.contat(currRegion.p);\r\n                    }\r\n\r\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\r\n                }\r\n\r\n                for (let c = 0; c < row.chars.length; ++c) {\r\n                    let uc = row.chars[c];\r\n                    let currPenState = uc.penState;\r\n                    if ((prevPenState === null) || (!currPenState.equals(prevPenState))) {\r\n                        if (line.trim().length > 0) {\r\n                            currP.spans.push({ name: currentStyle, line: line, row: r });\r\n                            line = '';\r\n                        }\r\n\r\n                        let currPenStateString = 'style_cea608_' + currPenState.foreground + '_' + currPenState.background;\r\n                        if (currPenState.underline) {\r\n                            currPenStateString += '_underline';\r\n                        }\r\n                        if (currPenState.italics) {\r\n                            currPenStateString += '_italics';\r\n                        }\r\n\r\n                        if (!styleStates.hasOwnProperty(currPenStateString)) {\r\n                            styleStates[currPenStateString] = JSON.parse(JSON.stringify(currPenState));\r\n                        }\r\n\r\n                        prevPenState = currPenState;\r\n\r\n                        currentStyle = currPenStateString;\r\n                    }\r\n\r\n                    line += uc.uchar;\r\n                }\r\n\r\n                if (line.trim().length > 0) {\r\n                    currP.spans.push({ name: currentStyle, line: line, row: r });\r\n                }\r\n\r\n                lastRowHasText = true;\r\n                lastRowIndentL = rowIndent;\r\n            } else {\r\n                /* Row is empty */\r\n                lastRowHasText = false;\r\n                lastRowIndentL = -1;\r\n\r\n                if (currRegion) {\r\n                    currRegion.p.push(currP);\r\n                    currP = { start: startTime, end: endTime, spans: [] };\r\n                    currRegion.y2 = r;\r\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\r\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\r\n                        regions.push(currRegion);\r\n                        seenRegions[currRegion.name] = currRegion;\r\n                    } else {\r\n                        existingRegion = seenRegions[currRegion.name];\r\n                        existingRegion.p.contat(currRegion.p);\r\n                    }\r\n\r\n                    currRegion = null;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (currRegion) {\r\n            currRegion.p.push(currP);\r\n            currRegion.y2 = r + 1;\r\n            currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\r\n            if (false === seenRegions.hasOwnProperty(currRegion.name)) {\r\n                regions.push(currRegion);\r\n                seenRegions[currRegion.name] = currRegion;\r\n            } else {\r\n                existingRegion = seenRegions[currRegion.name];\r\n                existingRegion.p.contat(currRegion.p);\r\n            }\r\n\r\n            currRegion = null;\r\n        }\r\n\r\n        //log(styleStates);\r\n        //log(regions);\r\n\r\n        let captionsArray = [];\r\n\r\n        /* Loop thru regions */\r\n        for (r = 0; r < regions.length; ++r) {\r\n            let region = regions[r];\r\n\r\n            let cueID = 'sub_' + (captionId++);\r\n            let finalDiv = document.createElement('div');\r\n            finalDiv.id = 'subtitle_' + cueID;\r\n            let cueRegionProperties = getRegionProperties(region);\r\n            finalDiv.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\r\n\r\n            let bodyDiv = document.createElement('div');\r\n            bodyDiv.className = 'paragraph bodyStyle';\r\n            bodyDiv.style.cssText = getStyle(videoElement);\r\n\r\n            let cueUniWrapper = document.createElement('div');\r\n            cueUniWrapper.className = 'cueUniWrapper';\r\n            cueUniWrapper.style.cssText = 'unicode-bidi: normal; direction: ltr;';\r\n\r\n            for (let p = 0; p < region.p.length; ++p) {\r\n                let ptag = region.p[p];\r\n                let lastSpanRow = 0;\r\n                for (s = 0; s < ptag.spans.length; ++s) {\r\n                    let span = ptag.spans[s];\r\n                    if (span.line.length > 0) {\r\n                        if ((s !== 0) && lastSpanRow != span.row) {\r\n                            let brElement = document.createElement('br');\r\n                            brElement.className = 'lineBreak';\r\n                            cueUniWrapper.appendChild(brElement);\r\n                        }\r\n                        let sameRow = false;\r\n                        if (lastSpanRow === span.row) {\r\n                            sameRow = true;\r\n                        }\r\n                        lastSpanRow = span.row;\r\n                        let spanStyle = styleStates[span.name];\r\n                        let spanElement = document.createElement('span');\r\n                        spanElement.className = 'spanPadding ' + span.name + ' customSpanColor';\r\n                        spanElement.style.cssText = getStyle(videoElement, spanStyle);\r\n                        if ((s !== 0) && sameRow) {\r\n                            if (s === ptag.spans.length - 1) {\r\n                                spanElement.textContent = rtrim(span.line);\r\n                            } else {\r\n                                spanElement.textContent = span.line;\r\n                            }\r\n                        } else {\r\n                            if (s === 0) {\r\n                                if (ptag.spans.length > 1) {\r\n                                    /* Check if next text is on same row */\r\n                                    if (span.row === ptag.spans[1].row) {\r\n                                        /* Next element on same row, trim start */\r\n                                        spanElement.textContent = ltrim(span.line);\r\n                                    } else {\r\n                                        /* Different rows, trim */\r\n                                        spanElement.textContent = span.line.trim();\r\n                                    }\r\n                                } else {\r\n                                    spanElement.textContent = span.line.trim();\r\n                                }\r\n                            } else {\r\n                                spanElement.textContent = span.line.trim();\r\n                            }\r\n                        }\r\n                        cueUniWrapper.appendChild(spanElement);\r\n                    }\r\n                }\r\n            }\r\n\r\n            bodyDiv.appendChild(cueUniWrapper);\r\n\r\n            finalDiv.appendChild(bodyDiv);\r\n\r\n            let fontSize = { 'bodyStyle': 90 };\r\n            for (s in styleStates) {\r\n                if (styleStates.hasOwnProperty(s)) {\r\n                    fontSize[s] = 90;\r\n                }\r\n            }\r\n\r\n            captionsArray.push({ type: 'html',\r\n                                 start: startTime,\r\n                                 end: endTime,\r\n                                 cueHTMLElement: finalDiv,\r\n                                 cueID: cueID,\r\n                                 cellResolution: [32, 15],\r\n                                 isFromCEA608: true,\r\n                                 regions: regions,\r\n                                 regionID: region.name,\r\n                                 videoHeight: videoElement.videoHeight,\r\n                                 videoWidth: videoElement.videoWidth,\r\n                                 fontSize: fontSize || {\r\n                                     defaultFontSize: '100'\r\n                                 },\r\n                                 lineHeight: {},\r\n                                 linePadding: {},\r\n                               });\r\n        }\r\n        return captionsArray;\r\n    }\r\n\r\n    function abort() {\r\n        textTracks.deleteAllTextTracks();\r\n        allTracksAreDisabled = false;\r\n        parser = null;\r\n        fragmentedTextBoxParser = null;\r\n        mediaInfos = null;\r\n        textTracks = null;\r\n        isFragmented = false;\r\n        fragmentModel = null;\r\n        initializationSegmentReceived = false;\r\n        timescale = NaN;\r\n        fragmentedTracks = [];\r\n        videoModel = null;\r\n        streamController = null;\r\n        embeddedInitialized = false;\r\n        embeddedTracks = null;\r\n    }\r\n\r\n    function addEmbeddedTrack(mediaInfo) {\r\n        if (!embeddedInitialized) {\r\n            initEmbedded();\r\n        }\r\n        if (mediaInfo.id === 'CC1' || mediaInfo.id === 'CC3') {\r\n            embeddedTracks.push(mediaInfo);\r\n        } else {\r\n            log('Warning: Embedded track ' + mediaInfo.id + ' not supported!');\r\n        }\r\n    }\r\n\r\n    function resetEmbedded() {\r\n        embeddedInitialized = false;\r\n        embeddedTracks = [];\r\n        embeddedCea608FieldParsers = [null, null];\r\n        embeddedSequenceNumbers = [];\r\n        embeddedLastSequenceNumber = null;\r\n    }\r\n\r\n    function getAllTracksAreDisabled() {\r\n        return allTracksAreDisabled;\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.errHandler) {\r\n            errHandler = config.errHandler;\r\n        }\r\n        if (config.adapter) {\r\n            adapter = config.adapter;\r\n        }\r\n        if (config.dashManifestModel) {\r\n            dashManifestModel = config.dashManifestModel;\r\n        }\r\n        if (config.mediaController) {\r\n            mediaController = config.mediaController;\r\n        }\r\n        if (config.videoModel) {\r\n            videoModel = config.videoModel;\r\n        }\r\n        if (config.streamController) {\r\n            streamController = config.streamController;\r\n        }\r\n        if (config.textTracks) {\r\n            textTracks = config.textTracks;\r\n        }\r\n        if (config.VTTParser) {\r\n            VTTParser = config.VTTParser;\r\n        }\r\n        if (config.TTMLParser) {\r\n            TTMLParser = config.TTMLParser;\r\n        }\r\n    }\r\n\r\n    function setTextTrack() {\r\n\r\n        var el = videoModel.getElement();\r\n        var tracks = el.textTracks;\r\n        var ln = tracks.length;\r\n        var nrNonEmbeddedTracks = ln - embeddedTracks.length;\r\n        var oldTrackIdx = textTracks.getCurrentTrackIdx();\r\n\r\n        for (var i = 0; i < ln; i++ ) {\r\n            var track = tracks[i];\r\n            allTracksAreDisabled = track.mode !== 'showing';\r\n            if (track.mode === 'showing') {\r\n                if (oldTrackIdx !== i) { // do not reset track if already the current track.  This happens when all captions get turned off via UI and then turned on again and with videojs.\r\n                    textTracks.setCurrentTrackIdx(i);\r\n                    textTracks.addCaptions(i, 0, null); // Make sure that previously queued captions are added as cues\r\n                    if (isFragmented && i < nrNonEmbeddedTracks) {\r\n                        var currentFragTrack = mediaController.getCurrentTrackFor('fragmentedText', streamController.getActiveStreamInfo());\r\n                        var newFragTrack = fragmentedTracks[i];\r\n                        if (newFragTrack !== currentFragTrack) {\r\n                            fragmentModel.abortRequests();\r\n                            textTracks.deleteTrackCues(currentFragTrack);\r\n                            mediaController.setTrack(newFragTrack);\r\n                            currFragmentedTrackIdx = i;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (allTracksAreDisabled) {\r\n            textTracks.setCurrentTrackIdx(-1);\r\n        }\r\n    }\r\n\r\n    function getIsDefault(mediaInfo) {\r\n        //TODO How to tag default. currently same order as listed in manifest.\r\n        // Is there a way to mark a text adaptation set as the default one? DASHIF meeting talk about using role which is being used for track KIND\r\n        // Eg subtitles etc. You can have multiple role tags per adaptation Not defined in the spec yet.\r\n        var isDefault = false;\r\n        if (embeddedTracks.length > 1) {\r\n            isDefault = (mediaInfo.id && mediaInfo.id === 'CC1'); // CC1 if both CC1 and CC3 exist\r\n        } else if (embeddedTracks.length === 1) {\r\n            if (mediaInfo.id && mediaInfo.id.substring(0, 2) === 'CC') {// Either CC1 or CC3\r\n                isDefault = true;\r\n            }\r\n        } else {\r\n            isDefault = (mediaInfo.index === mediaInfos[0].index);\r\n        }\r\n        return isDefault;\r\n    }\r\n\r\n    function getParser(codecType) {\r\n        var parser;\r\n        if (codecType.search('vtt') >= 0) {\r\n            parser = VTTParser;\r\n        } else if (codecType.search('ttml') >= 0 || codecType.search('stpp') >= 0) {\r\n            parser = TTMLParser;\r\n            parser.setConfig({videoModel: videoModel});\r\n        }\r\n        return parser;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        append: append,\r\n        abort: abort,\r\n        getAllTracksAreDisabled: getAllTracksAreDisabled,\r\n        setTextTrack: setTextTrack,\r\n        setConfig: setConfig,\r\n        addEmbeddedTrack: addEmbeddedTrack,\r\n        resetEmbedded: resetEmbedded\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nTextSourceBuffer.__dashjs_factory_name = 'TextSourceBuffer';\r\nexport default FactoryMaker.getSingletonFactory(TextSourceBuffer);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from '../core/EventBus.js';\r\nimport Events from '../core/events/Events.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\nimport Debug from '../core/Debug.js';\r\n\r\nfunction TextTracks() {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n    let log = Debug(context).getInstance().log;\r\n\r\n    let instance,\r\n        Cue,\r\n        videoModel,\r\n        video,\r\n        textTrackQueue,\r\n        trackElementArr,\r\n        currentTrackIdx,\r\n        actualVideoLeft,\r\n        actualVideoTop,\r\n        actualVideoWidth,\r\n        actualVideoHeight,\r\n        captionContainer,\r\n        videoSizeCheckInterval,\r\n        isChrome,\r\n        fullscreenAttribute,\r\n        displayCCOnTop,\r\n        topZIndex;\r\n\r\n    function initialize () {\r\n        Cue = window.VTTCue || window.TextTrackCue;\r\n        textTrackQueue = [];\r\n        trackElementArr = [];\r\n        currentTrackIdx = -1;\r\n        actualVideoLeft = 0;\r\n        actualVideoTop = 0;\r\n        actualVideoWidth = 0;\r\n        actualVideoHeight = 0;\r\n        captionContainer = null;\r\n        videoSizeCheckInterval = null;\r\n        displayCCOnTop = false;\r\n        topZIndex = 2147483647;\r\n\r\n        //TODO Check if IE has resolved issues: Then revert to not using the addTextTrack API for all browsers.\r\n        // https://connect.microsoft.com/IE/feedbackdetail/view/1660701/text-tracks-do-not-fire-change-addtrack-or-removetrack-events\r\n        // https://connect.microsoft.com/IE/feedback/details/1573380/htmltrackelement-track-addcue-throws-invalidstateerror-when-adding-new-cue\r\n        // Same issue with Firefox.\r\n        //isIE11orEdge = !!navigator.userAgent.match(/Trident.*rv[ :]*11\\./) || navigator.userAgent.match(/Edge/);\r\n        //isFirefox = !!navigator.userAgent.match(/Firefox/);\r\n        isChrome = !!navigator.userAgent.match(/Chrome/) && !navigator.userAgent.match(/Edge/);\r\n        if (document.fullscreenElement !== undefined) {\r\n            fullscreenAttribute = 'fullscreenElement'; // Standard and Edge\r\n        } else if (document.webkitIsFullScreen !== undefined) {\r\n            fullscreenAttribute = 'webkitIsFullScreen'; // Chrome and Safari (and Edge)\r\n        } else if (document.msFullscreenElement) { // IE11\r\n            fullscreenAttribute = 'msFullscreenElement';\r\n        } else if (document.mozFullScreen) { // Firefox\r\n            fullscreenAttribute = 'mozFullScreen';\r\n        }\r\n    }\r\n\r\n    function createTrackForUserAgent (i) {\r\n        var kind = textTrackQueue[i].kind;\r\n        var label = textTrackQueue[i].label !== undefined ? textTrackQueue[i].label : textTrackQueue[i].lang;\r\n        var lang = textTrackQueue[i].lang;\r\n        var track = isChrome ? document.createElement('track') : video.addTextTrack(kind, label, lang);\r\n\r\n        if (isChrome) {\r\n            track.kind = kind;\r\n            track.label = label;\r\n            track.srclang = lang;\r\n        }\r\n\r\n        return track;\r\n    }\r\n\r\n    function displayCConTop (value) {\r\n        displayCCOnTop = value;\r\n        if (!captionContainer || document[fullscreenAttribute]) return;\r\n        captionContainer.style.zIndex = value ? topZIndex : null;\r\n    }\r\n\r\n    function addTextTrack(textTrackInfoVO, totalTextTracks) {\r\n\r\n        if (textTrackQueue.length === totalTextTracks) {\r\n            log('Trying to add too many tracks.');\r\n            return;\r\n        }\r\n\r\n        textTrackQueue.push(textTrackInfoVO);\r\n        if (video === undefined) {\r\n            video = textTrackInfoVO.video;\r\n        }\r\n\r\n        if (textTrackQueue.length === totalTextTracks) {\r\n            textTrackQueue.sort(function (a, b) { //Sort in same order as in manifest\r\n                return a.index - b.index;\r\n            });\r\n            captionContainer = videoModel.getTTMLRenderingDiv();\r\n            var defaultIndex = -1;\r\n            for (var i = 0 ; i < textTrackQueue.length; i++) {\r\n                var track = createTrackForUserAgent.call(this, i);\r\n                trackElementArr.push(track); //used to remove tracks from video element when added manually\r\n\r\n                if (textTrackQueue[i].defaultTrack) {\r\n                    // track.default is an object property identifier that is a reserved word\r\n                    // The following jshint directive is used to suppressed the warning \"Expected an identifier and instead saw 'default' (a reserved word)\"\r\n                    /*jshint -W024 */\r\n                    track.default = true;\r\n                    defaultIndex = i;\r\n                }\r\n                if (isChrome) {\r\n                    video.appendChild(track);\r\n                }\r\n                var textTrack = video.textTracks[i];\r\n                textTrack.nonAddedCues = [];\r\n                if (captionContainer && (textTrackQueue[i].isTTML || textTrackQueue[i].isEmbedded)) {\r\n                    textTrack.renderingType = 'html';\r\n                } else {\r\n                    textTrack.renderingType = 'default';\r\n                }\r\n                this.addCaptions(i, 0, textTrackQueue[i].captionData);\r\n                eventBus.trigger(Events.TEXT_TRACK_ADDED);\r\n            }\r\n            setCurrentTrackIdx.call(this, defaultIndex);\r\n            if (defaultIndex >= 0) {\r\n                video.textTracks[defaultIndex].mode = 'showing';\r\n                this.addCaptions(defaultIndex, 0, null);\r\n            }\r\n            eventBus.trigger(Events.TEXT_TRACKS_ADDED, {index: currentTrackIdx, tracks: textTrackQueue});//send default idx.\r\n        }\r\n    }\r\n\r\n    function getVideoVisibleVideoSize(viewWidth, viewHeight, videoWidth, videoHeight, aspectRatio, use80Percent) {\r\n        var viewAspectRatio = viewWidth / viewHeight;\r\n        var videoAspectRatio = videoWidth / videoHeight;\r\n\r\n        var videoPictureX = 0;\r\n        var videoPictureY = 0;\r\n        var videoPictureWidth = 0;\r\n        var videoPictureHeight = 0;\r\n\r\n        if (viewAspectRatio > videoAspectRatio) {\r\n            videoPictureHeight = viewHeight;\r\n            videoPictureWidth = (videoPictureHeight / videoHeight) * videoWidth;\r\n            videoPictureX = (viewWidth - videoPictureWidth) / 2;\r\n            videoPictureY = 0;\r\n        } else {\r\n            videoPictureWidth = viewWidth;\r\n            videoPictureHeight = (videoPictureWidth / videoWidth) * videoHeight;\r\n            videoPictureX = 0;\r\n            videoPictureY = (viewHeight - videoPictureHeight) / 2;\r\n        }\r\n\r\n        var videoPictureXAspect = 0;\r\n        var videoPictureYAspect = 0;\r\n        var videoPictureWidthAspect = 0;\r\n        var videoPictureHeightAspect = 0;\r\n        var videoPictureAspect = videoPictureWidth / videoPictureHeight;\r\n\r\n        if (videoPictureAspect > aspectRatio) {\r\n            videoPictureHeightAspect = videoPictureHeight;\r\n            videoPictureWidthAspect = videoPictureHeight / (1 / aspectRatio);\r\n            videoPictureXAspect = (viewWidth - videoPictureWidthAspect) / 2;\r\n            videoPictureYAspect = 0;\r\n        } else {\r\n            videoPictureWidthAspect = videoPictureWidth;\r\n            videoPictureHeightAspect = videoPictureWidth / aspectRatio;\r\n            videoPictureXAspect = 0;\r\n            videoPictureYAspect = (viewHeight - videoPictureHeightAspect) / 2;\r\n        }\r\n\r\n        if (use80Percent) {\r\n            return { x: videoPictureXAspect + (videoPictureWidthAspect * 0.1),\r\n                     y: videoPictureYAspect + (videoPictureHeightAspect * 0.1),\r\n                     w: videoPictureWidthAspect * 0.8,\r\n                     h: videoPictureHeightAspect * 0.8 }; /* Maximal picture size in videos aspect ratio */\r\n        } else {\r\n            return { x: videoPictureXAspect,\r\n                     y: videoPictureYAspect,\r\n                     w: videoPictureWidthAspect,\r\n                     h: videoPictureHeightAspect }; /* Maximal picture size in videos aspect ratio */\r\n        }\r\n    }\r\n\r\n\r\n    function checkVideoSize() {\r\n        var track = this.getCurrentTextTrack();\r\n        if (track && track.renderingType === 'html') {\r\n            // Create aspect ratio from cellResolutions\r\n            let aspectRatio = 1;\r\n            if (track.cellResolution) {\r\n                aspectRatio = track.cellResolution[0] / track.cellResolution[1];\r\n            }\r\n            let use80Percent = false;\r\n            if (track.isFromCEA608) {\r\n                // If this is CEA608 then use predefined aspect ratio\r\n                aspectRatio = 3.5 / 3.0;\r\n                use80Percent = true;\r\n            }\r\n\r\n            const realVideoSize = getVideoVisibleVideoSize.call(this, video.clientWidth, video.clientHeight, video.videoWidth, video.videoHeight, aspectRatio, use80Percent);\r\n\r\n            const newVideoWidth = realVideoSize.w;\r\n            const newVideoHeight = realVideoSize.h;\r\n\r\n            if (newVideoWidth != actualVideoWidth || newVideoHeight != actualVideoHeight) {\r\n                actualVideoLeft = realVideoSize.x;\r\n                actualVideoTop = realVideoSize.y;\r\n                actualVideoWidth = newVideoWidth;\r\n                actualVideoHeight = newVideoHeight;\r\n                captionContainer.style.left = actualVideoLeft + 'px';\r\n                captionContainer.style.top = actualVideoTop + 'px';\r\n                captionContainer.style.width = actualVideoWidth + 'px';\r\n                captionContainer.style.height = actualVideoHeight + 'px';\r\n\r\n                // Video view has changed size, so resize any active cues\r\n                for (let i = 0; track.activeCues && i < track.activeCues.length; ++i) {\r\n                    let cue = track.activeCues[i];\r\n                    cue.scaleCue(cue);\r\n                }\r\n\r\n                if ((fullscreenAttribute && document[fullscreenAttribute]) || displayCCOnTop) {\r\n                    captionContainer.style.zIndex = topZIndex;\r\n                } else {\r\n                    captionContainer.style.zIndex = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function scaleCue(activeCue) {\r\n        var videoWidth = actualVideoWidth;\r\n        var videoHeight = actualVideoHeight;\r\n        var key,\r\n            replaceValue,\r\n            elements;\r\n\r\n        var cellUnit = [videoWidth / activeCue.cellResolution[0], videoHeight / activeCue.cellResolution[1]];\r\n\r\n        if (activeCue.linePadding) {\r\n            for (key in activeCue.linePadding) {\r\n                if (activeCue.linePadding.hasOwnProperty(key)) {\r\n                    var valueLinePadding = activeCue.linePadding[key];\r\n                    replaceValue = (valueLinePadding * cellUnit[0]).toString();\r\n                    // Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).\r\n                    var elementsSpan = document.getElementsByClassName('spanPadding');\r\n                    for (var i = 0; i < elementsSpan.length; i++) {\r\n                        elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-left\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\r\n                        elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-right\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (activeCue.fontSize) {\r\n            for (key in activeCue.fontSize) {\r\n                if (activeCue.fontSize.hasOwnProperty(key)) {\r\n                    var valueFontSize = activeCue.fontSize[key] / 100;\r\n                    replaceValue  = (valueFontSize * cellUnit[1]).toString();\r\n\r\n                    if (key !== 'defaultFontSize') {\r\n                        elements = document.getElementsByClassName(key);\r\n                    } else {\r\n                        elements = document.getElementsByClassName('paragraph');\r\n                    }\r\n\r\n                    for (var j = 0; j < elements.length; j++) {\r\n                        elements[j].style.cssText = elements[j].style.cssText.replace(/(font-size\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (activeCue.lineHeight) {\r\n            for (key in activeCue.lineHeight) {\r\n                if (activeCue.lineHeight.hasOwnProperty(key)) {\r\n                    var valueLineHeight = activeCue.lineHeight[key] / 100;\r\n                    replaceValue = (valueLineHeight * cellUnit[1]).toString();\r\n                    elements = document.getElementsByClassName(key);\r\n                    for (var k = 0; k < elements.length; k++) {\r\n                        elements[k].style.cssText = elements[k].style.cssText.replace(/(line-height\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Add captions to track, store for later adding, or add captions added before\r\n    */\r\n    function addCaptions(trackIdx, timeOffset, captionData) {\r\n        var track = trackIdx >= 0 ?  video.textTracks[trackIdx] : null;\r\n        var self = this;\r\n\r\n        if (!track) return;\r\n        if (track.mode !== 'showing') {\r\n            if (captionData && captionData.length > 0) {\r\n                track.nonAddedCues = track.nonAddedCues.concat(captionData);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!captionData) {\r\n            captionData = track.nonAddedCues;\r\n            track.nonAddedCues = [];\r\n        }\r\n\r\n        if (!captionData || captionData.length === 0) {\r\n            return;\r\n        }\r\n\r\n        for (var item in captionData) {\r\n            var cue;\r\n            var currentItem = captionData[item];\r\n\r\n            track.cellResolution = currentItem.cellResolution;\r\n            track.isFromCEA608 = currentItem.isFromCEA608;\r\n\r\n            if (!videoSizeCheckInterval && currentItem.type == 'html') {\r\n                videoSizeCheckInterval = setInterval(checkVideoSize.bind(this), 500);\r\n            }\r\n\r\n            //image subtitle extracted from TTML\r\n            if (currentItem.type == 'image') {\r\n                cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, '');\r\n                cue.image = currentItem.data;\r\n                cue.id = currentItem.id;\r\n                cue.size = 0; //discard the native display for this subtitles\r\n                cue.type = 'image'; // active image overlay\r\n                cue.onenter =  function () {\r\n                    var img = new Image();\r\n                    img.id = 'ttmlImage_' + this.id;\r\n                    img.src = this.image;\r\n                    img.className = 'cue-image';\r\n                    if (captionContainer) {\r\n                        captionContainer.appendChild(img);\r\n                    } else {\r\n                        video.parentNode.appendChild(img);\r\n                    }\r\n                };\r\n\r\n                cue.onexit =  function () {\r\n                    var container,\r\n                        i,\r\n                        imgs;\r\n                    if (captionContainer) {\r\n                        container = captionContainer;\r\n                    } else {\r\n                        container = video.parentNode;\r\n                    }\r\n                    imgs = container.childNodes;\r\n                    for (i = 0; i < imgs.length; i++) {\r\n                        if (imgs[i].id == 'ttmlImage_' + this.id) {\r\n                            container.removeChild(imgs[i]);\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            else if (currentItem.type === 'html') {\r\n                cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, '');\r\n                cue.cueHTMLElement = currentItem.cueHTMLElement;\r\n                cue.regions = currentItem.regions;\r\n                cue.regionID = currentItem.regionID;\r\n                cue.cueID = currentItem.cueID;\r\n                cue.videoWidth = currentItem.videoWidth;\r\n                cue.videoHeight = currentItem.videoHeight;\r\n                cue.cellResolution = currentItem.cellResolution;\r\n                cue.fontSize = currentItem.fontSize;\r\n                cue.lineHeight = currentItem.lineHeight;\r\n                cue.linePadding = currentItem.linePadding;\r\n                cue.scaleCue = scaleCue.bind(self);\r\n                captionContainer.style.left = actualVideoLeft + 'px';\r\n                captionContainer.style.top = actualVideoTop + 'px';\r\n                captionContainer.style.width = actualVideoWidth + 'px';\r\n                captionContainer.style.height = actualVideoHeight + 'px';\r\n\r\n                cue.onenter =  function () {\r\n                    if (track.mode == 'showing') {\r\n                        captionContainer.appendChild(this.cueHTMLElement);\r\n                        scaleCue.call(self, this);\r\n                    }\r\n                };\r\n\r\n                cue.onexit =  function () {\r\n                    var divs = captionContainer.childNodes;\r\n                    for (var i = 0; i < divs.length; ++i) {\r\n                        if (divs[i].id == 'subtitle_' + this.cueID) {\r\n                            captionContainer.removeChild(divs[i]);\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, currentItem.data);\r\n                if (currentItem.styles) {\r\n                    if (currentItem.styles.align !== undefined && cue.hasOwnProperty('align')) {\r\n                        cue.align = currentItem.styles.align;\r\n                    }\r\n                    if (currentItem.styles.line !== undefined && cue.hasOwnProperty('line')) {\r\n                        cue.line = currentItem.styles.line;\r\n                    }\r\n                    if (currentItem.styles.position !== undefined && cue.hasOwnProperty('position')) {\r\n                        cue.position = currentItem.styles.position ;\r\n                    }\r\n                    if (currentItem.styles.size !== undefined && cue.hasOwnProperty('size')) {\r\n                        cue.size = currentItem.styles.size;\r\n                    }\r\n                }\r\n            }\r\n\r\n            track.addCue(cue);\r\n        }\r\n    }\r\n\r\n    function getCurrentTextTrack() {\r\n        return currentTrackIdx >= 0 ? video.textTracks[currentTrackIdx] : null;\r\n    }\r\n\r\n    function getCurrentTrackIdx() {\r\n        return currentTrackIdx;\r\n    }\r\n\r\n    function getTrackIdxForId(trackId) {\r\n        var idx = -1;\r\n        for (var i = 0; i < video.textTracks.length; i++) {\r\n            if (video.textTracks[i].label === trackId) {\r\n                idx = i;\r\n                break;\r\n            }\r\n        }\r\n        return idx;\r\n    }\r\n\r\n    function setCurrentTrackIdx(idx) {\r\n        currentTrackIdx = idx;\r\n        clearCues.call(this);\r\n        if (idx >= 0) {\r\n            var track = video.textTracks[idx];\r\n            if (track.renderingType === 'html') {\r\n                setNativeCueStyle.call(this);\r\n            } else {\r\n                removeNativeCueStyle.call(this);\r\n            }\r\n        } else {\r\n            removeNativeCueStyle.call(this);\r\n        }\r\n    }\r\n\r\n    function getTextTrack(idx) {\r\n        return video.textTracks[idx];\r\n    }\r\n\r\n    function deleteTrackCues(track) {\r\n        if (track.cues) {\r\n            var cues = track.cues;\r\n            var lastIdx = cues.length - 1;\r\n\r\n            for (var r = lastIdx; r >= 0 ; r--) {\r\n                track.removeCue(cues[r]);\r\n            }\r\n\r\n            track.mode = 'disabled';\r\n        }\r\n    }\r\n\r\n    function deleteAllTextTracks() {\r\n        var ln = trackElementArr.length;\r\n        for (var i = 0; i < ln; i++) {\r\n            if (isChrome) {\r\n                video.removeChild(trackElementArr[i]);\r\n            }else {\r\n                var track = getTextTrack.call(this, i);\r\n                track.nonAddedCues = [];\r\n                deleteTrackCues.call(this, track);\r\n            }\r\n\r\n        }\r\n        trackElementArr = [];\r\n        textTrackQueue = [];\r\n        if (videoSizeCheckInterval) {\r\n            clearInterval(videoSizeCheckInterval);\r\n            videoSizeCheckInterval = null;\r\n        }\r\n        clearCues.call(this);\r\n    }\r\n\r\n    function deleteTextTrack(idx) {\r\n        video.removeChild(trackElementArr[idx]);\r\n        trackElementArr.splice(idx, 1);\r\n    }\r\n\r\n    /* Set native cue style to transparent background to avoid it being displayed. */\r\n    function setNativeCueStyle() {\r\n        if (!isChrome) return;\r\n        var styleElement = document.getElementById('native-cue-style');\r\n        if (styleElement) return; //Already set\r\n\r\n        styleElement = document.createElement('style');\r\n        styleElement.id  = 'native-cue-style';\r\n        document.head.appendChild(styleElement);\r\n        var stylesheet = styleElement.sheet;\r\n        if (video.id) {\r\n            stylesheet.insertRule('#' + video.id + '::cue {background: transparent}', 0);\r\n        } else if (video.classList.length !== 0) {\r\n            stylesheet.insertRule('.' + video.className + '::cue {background: transparent}', 0);\r\n        } else {\r\n            stylesheet.insertRule('video::cue {background: transparent}', 0);\r\n        }\r\n    }\r\n\r\n    /* Remove the extra cue style with transparent background for native cues. */\r\n    function removeNativeCueStyle() {\r\n        if (!isChrome) return;\r\n        var styleElement = document.getElementById('native-cue-style');\r\n        if (styleElement) {\r\n            document.head.removeChild(styleElement);\r\n        }\r\n    }\r\n\r\n    function clearCues() {\r\n        if (captionContainer) {\r\n            while (captionContainer.firstChild) {\r\n                captionContainer.removeChild(captionContainer.firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.videoModel) {\r\n            videoModel = config.videoModel;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        displayCConTop: displayCConTop,\r\n        addTextTrack: addTextTrack,\r\n        addCaptions: addCaptions,\r\n        getTextTrack: getTextTrack,\r\n        getCurrentTextTrack: getCurrentTextTrack,\r\n        getCurrentTrackIdx: getCurrentTrackIdx,\r\n        setCurrentTrackIdx: setCurrentTrackIdx,\r\n        getTrackIdxForId: getTrackIdxForId,\r\n        deleteTrackCues: deleteTrackCues,\r\n        deleteAllTextTracks: deleteAllTextTracks,\r\n        deleteTextTrack: deleteTextTrack,\r\n        setConfig: setConfig\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nTextTracks.__dashjs_factory_name = 'TextTracks';\r\nexport default FactoryMaker.getSingletonFactory(TextTracks);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Represents data structure to keep and drive {@link DataChunk}\r\n */\r\nimport MediaController from './controllers/MediaController.js';\r\nimport CustomTimeRanges from './utils/CustomTimeRanges.js';\r\nimport HTTPRequest from './vo/metrics/HTTPRequest.js';\r\nimport EventBus from '../core/EventBus.js';\r\nimport Events from '../core/events/Events.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\n\r\nfunction VirtualBuffer() {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        data,\r\n        sourceBufferController;\r\n\r\n    function setup() {\r\n        data = {};\r\n    }\r\n\r\n    /**\r\n     * Adds DataChunk to array of chunks\r\n     * @param {@link DataChunk}\r\n     * @memberof VirtualBuffer#\r\n     */\r\n    function append(chunk) {\r\n        var streamId = chunk.streamId;\r\n        var mediaType = chunk.mediaInfo.type;\r\n        var segmentType = chunk.segmentType;\r\n        var start = chunk.start;\r\n        var end = chunk.end;\r\n\r\n        data[streamId] = data[streamId] || createDataStorage();\r\n        data[streamId][mediaType][segmentType].push(chunk);\r\n        sortArrayByProperty(data[streamId][mediaType][segmentType], 'index');\r\n\r\n        if (!isNaN(start) && !isNaN(end)) {\r\n            data[streamId][mediaType].calculatedBufferedRanges.add(start, end);\r\n            eventBus.trigger(Events.CHUNK_APPENDED, {chunk: chunk, sender: this});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds DataChunk to array of appended chunks and updates virual ranges of appended chunks\r\n     * @param {@link DataChunk}\r\n     * @param buffer {SourceBuffer}\r\n     * @memberof VirtualBuffer#\r\n     */\r\n    function storeAppendedChunk(chunk, buffer) {\r\n        if (!chunk || !buffer) return;\r\n\r\n        // after the media segment has bee appended we check how the buffered ranges of SourceBuffer have been change. The\r\n        // difference is the actual buffered range of the appended segment.\r\n        // We need to update actualBufferedRanges so that it reflects SourceBuffer ranges.\r\n        // Also we store the appended chunk so that any BufferController has access to the list\r\n        // of appended chunks.\r\n        var streamId = chunk.streamId;\r\n        var mediaType = chunk.mediaInfo.type;\r\n        var bufferedRanges = data[streamId][mediaType].actualBufferedRanges;\r\n        var oldChunk = getChunks({ streamId: streamId, mediaType: mediaType, appended: true, start: chunk.start })[0];\r\n\r\n        var diff,\r\n            idx;\r\n\r\n        if (oldChunk) {\r\n            idx = data[streamId][mediaType].appended.indexOf(oldChunk);\r\n            data[streamId][mediaType].appended[idx] = chunk;\r\n        } else {\r\n            data[streamId][mediaType].appended.push(chunk);\r\n        }\r\n\r\n        sortArrayByProperty(data[streamId][mediaType].appended, 'start');\r\n        diff = sourceBufferController.getRangeDifference(bufferedRanges, buffer);\r\n\r\n        if (!diff) {\r\n            if (oldChunk) {\r\n                chunk.bufferedRange = oldChunk.bufferedRange;\r\n            } else {\r\n                //TODO this is dirty fix for a case when segments are not aligned across representations and thus oldChunk is not found\r\n                // We should not use a calculated range here, only actual one should be used, but we don't know yet how to find it.\r\n                chunk.bufferedRange = {start: chunk.start, end: chunk.end};\r\n            }\r\n            return;\r\n        }\r\n\r\n        chunk.bufferedRange = diff;\r\n        bufferedRanges.add(diff.start, diff.end);\r\n\r\n        if (!oldChunk) return;\r\n\r\n        // if there is an old chunk already appended for the same index, we may need to adjust bufferedRange of a new chunk, because\r\n        // it may be not valid.\r\n        //\r\n        // Example:\r\n        //\r\n        // Before appending the old chunk\r\n        //\r\n        // 0|-----Range-------|4\r\n        // 0|--occupied space-|4\r\n        //\r\n        // After appending the old chunk\r\n        //\r\n        // 0|-----------------Range----------------|10\r\n        // 0|-occupied space-4|-------Old chunk----|10\r\n        //\r\n        // After clearing the buffer from 7s to 10s\r\n        //\r\n        // 0|-----------------Range----|7\r\n        // 0|-occupied space-4|OldChunk|7\r\n        //\r\n        // Since the old chunk has been cut only partially, after appending the new chunk its range will be detected as\r\n        //\r\n        // |-----------------Range-----------------|10\r\n        // |----occupied space--------7|-New chunk-|10\r\n        // This is not a valid value because the actual range of a new chunk is the same as the original range of\r\n        // the old chunk, so we do the following adjustment\r\n        chunk.bufferedRange.start = Math.min(oldChunk.bufferedRange.start, diff.start);\r\n        chunk.bufferedRange.end = Math.max(oldChunk.bufferedRange.end, diff.end);\r\n    }\r\n\r\n    /**\r\n     * Updates virual ranges of appended chunks according to the given ranges\r\n     * @param filter\r\n     * @param ranges\r\n     * @memberof VirtualBuffer#\r\n     */\r\n    function updateBufferedRanges(filter, ranges) {\r\n        if (!filter) return;\r\n\r\n        var streamId = filter.streamId;\r\n        var mediaType = filter.mediaType;\r\n        var appendedChunks = getChunks({ streamId: streamId, mediaType: mediaType, appended: true });\r\n\r\n        var remainingChunks = [];\r\n        var start,\r\n            end;\r\n\r\n        data[streamId][mediaType].actualBufferedRanges = CustomTimeRanges(context).create();\r\n\r\n        if (!ranges || ranges.length === 0) {\r\n            data[streamId][mediaType].appended = [];\r\n            return;\r\n        }\r\n\r\n        for (var i = 0, ln = ranges.length; i < ln; i++) {\r\n            start = ranges.start(i);\r\n            end = ranges.end(i);\r\n            data[streamId][mediaType].actualBufferedRanges.add(start, end);\r\n            // we need to select chunks that belong only to the new ranges\r\n            remainingChunks = remainingChunks.concat(findChunksForRange(appendedChunks, {start: start, end: end}, true));\r\n        }\r\n\r\n        data[streamId][mediaType].appended = remainingChunks;\r\n    }\r\n\r\n    /**\r\n     * Finds and returns {@link DataChunk} that satisfies filtering options\r\n     * @param filter - an object that contains properties by which the method search for chunks\r\n     * @returns {Array}\r\n     * @memberof VirtualBuffer#\r\n     */\r\n    function getChunks(filter) {\r\n        var originData = findData(filter);\r\n        var segmentType = filter.segmentType;\r\n        var appended = filter.appended;\r\n        var removeOrigin = filter.removeOrigin;\r\n        var limit = filter.limit || Number.POSITIVE_INFINITY;\r\n        var mediaController = MediaController(context).getInstance();\r\n\r\n        var ln = 0;\r\n        var result = [];\r\n        var sourceArr;\r\n\r\n        if (!originData) return result;\r\n\r\n        delete filter.streamId;\r\n        delete filter.mediaType;\r\n        delete filter.segmentType;\r\n        delete filter.removeOrigin;\r\n        delete filter.limit;\r\n        delete filter.appended;\r\n\r\n        sourceArr = appended ? originData.appended : (segmentType ? originData[segmentType] : []);\r\n\r\n        result = sourceArr.filter(function (item, idx, arr) {\r\n            if (ln >= limit) return false;\r\n\r\n            for (var prop in filter) {\r\n                if (prop === 'mediaInfo') {\r\n                    return mediaController.isTracksEqual(item[prop], filter[prop]);\r\n                }\r\n\r\n                if (filter.hasOwnProperty(prop) && item[prop] != filter[prop]) return false;\r\n            }\r\n\r\n            if (removeOrigin) {\r\n                originData.calculatedBufferedRanges.remove(item.start, item.end);\r\n                arr.splice(idx, 1);\r\n            }\r\n\r\n            ln++;\r\n\r\n            return true;\r\n        });\r\n\r\n        if (filter.forRange) {\r\n            result = findChunksForRange(result, filter.forRange, false);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Finds and returns {@link DataChunk} that satisfies filtering options. Filtered chunks are removed\r\n     * from the original array\r\n     * @param filter - an object that contains properties by which the method search for chunks\r\n     * @returns {Array}\r\n     * @memberof VirtualBuffer#\r\n     */\r\n    function extract(filter) {\r\n        filter.removeOrigin = true;\r\n        return getChunks(filter);\r\n    }\r\n\r\n    /**\r\n     * Calculates total buffer size across all Periods\r\n     * @param {@link MediaInfo}\r\n     * @returns {Number}\r\n     * @memberof VirtualBuffer#\r\n     */\r\n    function getTotalBufferLevel(mediaInfo) {\r\n        var mediaType = mediaInfo.type;\r\n        var level = 0;\r\n\r\n        for (var streamId in data) {\r\n            if (data.hasOwnProperty(streamId)) {\r\n                level += sourceBufferController.getTotalBufferedTime({buffered: data[streamId][mediaType].calculatedBufferedRanges});\r\n            }\r\n        }\r\n\r\n        return level;\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.sourceBufferController) {\r\n            sourceBufferController = config.sourceBufferController;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @memberof VirtualBuffer#\r\n     */\r\n    function reset() {\r\n        data = {};\r\n    }\r\n\r\n    function sortArrayByProperty(array, sortProp) {\r\n        var compare = function (obj1, obj2) {\r\n            if (obj1[sortProp] < obj2[sortProp]) return -1;\r\n            if (obj1[sortProp] > obj2[sortProp]) return 1;\r\n            return 0;\r\n        };\r\n\r\n        array.sort(compare);\r\n    }\r\n\r\n    function findData(filter) {\r\n        var streamId = filter.streamId;\r\n        var mediaType = filter.mediaType;\r\n\r\n        if (!data[streamId]) return null;\r\n\r\n        return data[streamId][mediaType];\r\n    }\r\n\r\n    function findChunksForRange(chunks, range, truncateChunk) {\r\n        var rangeStart = range.start;\r\n        var rangeEnd = range.end;\r\n        var chunksForRange = [];\r\n\r\n        var chunkStart,\r\n            chunkEnd,\r\n            isStartIncluded,\r\n            isEndIncluded;\r\n\r\n        chunks.forEach(function (chunk) {\r\n            chunkStart = chunk.bufferedRange.start;\r\n            chunkEnd = chunk.bufferedRange.end;\r\n            isStartIncluded = (chunkStart >= rangeStart && chunkStart < rangeEnd);\r\n            isEndIncluded = (chunkEnd > rangeStart && chunkEnd <= rangeEnd);\r\n\r\n            // if a segment has been partially removed from SourceBuffer we select it as well, but we\r\n            // need to update its bufferedRange\r\n            //\r\n            // Example 1:\r\n            // |-----------------Range----------------|\r\n            //                            |----Chunk-----|\r\n            // becomes\r\n            // |-----------------Range----------------|\r\n            //                            |----Chunk--|\r\n            // Example 2:\r\n            //       |-----------------Range----------------|\r\n            // |-------Chunk-----|\r\n            // becomes\r\n            //       |-----------------Range----------------|\r\n            //       |-Chunk-----|\r\n\r\n            if (isStartIncluded || isEndIncluded) {\r\n                chunksForRange.push(chunk);\r\n\r\n                if (truncateChunk) {\r\n                    chunk.bufferedRange.start = isStartIncluded ? chunkStart : rangeStart;\r\n                    chunk.bufferedRange.end = isEndIncluded ? chunkEnd : rangeEnd;\r\n                }\r\n            }\r\n        });\r\n\r\n        return chunksForRange;\r\n    }\r\n\r\n    function createDataStorage() {\r\n        var data = {};\r\n\r\n        data.audio = {calculatedBufferedRanges: CustomTimeRanges(context).create(),\r\n            actualBufferedRanges: CustomTimeRanges(context).create(),\r\n            appended: []};\r\n        data.audio[HTTPRequest.MEDIA_SEGMENT_TYPE] = [];\r\n        data.audio[HTTPRequest.INIT_SEGMENT_TYPE] = [];\r\n        data.video = {calculatedBufferedRanges: CustomTimeRanges(context).create(),\r\n            actualBufferedRanges: CustomTimeRanges(context).create(),\r\n            appended: []};\r\n        data.video[HTTPRequest.MEDIA_SEGMENT_TYPE] = [];\r\n        data.video[HTTPRequest.INIT_SEGMENT_TYPE] = [];\r\n        data.fragmentedText = {calculatedBufferedRanges: CustomTimeRanges(context).create(),\r\n            actualBufferedRanges: CustomTimeRanges(context).create(),\r\n            appended: []};\r\n        data.fragmentedText[HTTPRequest.MEDIA_SEGMENT_TYPE] = [];\r\n        data.fragmentedText[HTTPRequest.INIT_SEGMENT_TYPE] = [];\r\n\r\n        return data;\r\n    }\r\n\r\n    instance = {\r\n        append: append,\r\n        extract: extract,\r\n        getChunks: getChunks,\r\n        storeAppendedChunk: storeAppendedChunk,\r\n        updateBufferedRanges: updateBufferedRanges,\r\n        getTotalBufferLevel: getTotalBufferLevel,\r\n        setConfig: setConfig,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\nVirtualBuffer.__dashjs_factory_name = 'VirtualBuffer';\r\nexport default FactoryMaker.getSingletonFactory(VirtualBuffer);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport HTTPRequest from './vo/metrics/HTTPRequest.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\nimport MediaPlayerModel from './models/MediaPlayerModel.js';\r\n\r\n/**\r\n * @Module XHRLoader\r\n * @description Manages download of resources via HTTP.\r\n */\r\nfunction XHRLoader(cfg) {\r\n    const context = this.context;\r\n\r\n    //const log = Debug(context).getInstance().log;\r\n    const mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n\r\n    const errHandler = cfg.errHandler;\r\n    const metricsModel = cfg.metricsModel;\r\n    const requestModifier = cfg.requestModifier;\r\n\r\n    let instance;\r\n    let xhrs;\r\n    let delayedXhrs;\r\n    let retryTimers;\r\n    let downloadErrorToRequestTypeMap;\r\n\r\n    function setup() {\r\n        xhrs = [];\r\n        delayedXhrs = [];\r\n        retryTimers = [];\r\n\r\n        downloadErrorToRequestTypeMap = {\r\n            [HTTPRequest.MPD_TYPE]:                         errHandler.DOWNLOAD_ERROR_ID_MANIFEST,\r\n            [HTTPRequest.XLINK_EXPANSION_TYPE]:             errHandler.DOWNLOAD_ERROR_ID_XLINK,\r\n            [HTTPRequest.INIT_SEGMENT_TYPE]:                errHandler.DOWNLOAD_ERROR_ID_CONTENT,\r\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]:               errHandler.DOWNLOAD_ERROR_ID_CONTENT,\r\n            [HTTPRequest.INDEX_SEGMENT_TYPE]:               errHandler.DOWNLOAD_ERROR_ID_CONTENT,\r\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: errHandler.DOWNLOAD_ERROR_ID_CONTENT,\r\n            [HTTPRequest.OTHER_TYPE]:                       errHandler.DOWNLOAD_ERROR_ID_CONTENT\r\n        };\r\n    }\r\n\r\n    function internalLoad(config, remainingAttempts) {\r\n\r\n        var request = config.request;\r\n        var xhr = new XMLHttpRequest();\r\n        var traces = [];\r\n        var firstProgress = true;\r\n        var needFailureReport = true;\r\n        const requestStartTime = new Date();\r\n        var lastTraceTime = requestStartTime;\r\n        var lastTraceReceivedCount = 0;\r\n\r\n        const handleLoaded = function (success) {\r\n            needFailureReport = false;\r\n\r\n            request.requestStartDate = requestStartTime;\r\n            request.requestEndDate = new Date();\r\n            request.firstByteDate = request.firstByteDate || requestStartTime;\r\n\r\n            if (!request.checkExistenceOnly) {\r\n                metricsModel.addHttpRequest(\r\n                    request.mediaType,\r\n                    null,\r\n                    request.type,\r\n                    request.url,\r\n                    xhr.responseURL || null,\r\n                    request.serviceLocation || null,\r\n                    request.range || null,\r\n                    request.requestStartDate,\r\n                    request.firstByteDate,\r\n                    request.requestEndDate,\r\n                    xhr.status,\r\n                    request.duration,\r\n                    xhr.getAllResponseHeaders(),\r\n                    success ? traces : null\r\n                );\r\n            }\r\n        };\r\n\r\n        const onloadend = function () {\r\n            if (xhrs.indexOf(xhr) === -1) {\r\n                return;\r\n            } else {\r\n                xhrs.splice(xhrs.indexOf(xhr), 1);\r\n            }\r\n\r\n            if (needFailureReport) {\r\n                handleLoaded(false);\r\n\r\n                if (remainingAttempts > 0) {\r\n                    remainingAttempts--;\r\n                    retryTimers.push(\r\n                        setTimeout(function () {\r\n                            internalLoad(config, remainingAttempts);\r\n                        }, mediaPlayerModel.getRetryIntervalForType(request.type))\r\n                    );\r\n                } else {\r\n                    errHandler.downloadError(\r\n                        downloadErrorToRequestTypeMap[request.type],\r\n                        request.url,\r\n                        request\r\n                    );\r\n\r\n                    if (config.error) {\r\n                        config.error(request, 'error', xhr.statusText);\r\n                    }\r\n\r\n                    if (config.complete) {\r\n                        config.complete(request, xhr.statusText);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const progress = function (event) {\r\n            var currentTime = new Date();\r\n\r\n            if (firstProgress) {\r\n                firstProgress = false;\r\n                if (!event.lengthComputable ||\r\n                    (event.lengthComputable && event.total !== event.loaded)) {\r\n                    request.firstByteDate = currentTime;\r\n                }\r\n            }\r\n\r\n            if (event.lengthComputable) {\r\n                request.bytesLoaded = event.loaded;\r\n                request.bytesTotal = event.total;\r\n            }\r\n\r\n            traces.push({\r\n                s: lastTraceTime,\r\n                d: currentTime.getTime() - lastTraceTime.getTime(),\r\n                b: [event.loaded ? event.loaded - lastTraceReceivedCount : 0]\r\n            });\r\n\r\n            lastTraceTime = currentTime;\r\n            lastTraceReceivedCount = event.loaded;\r\n\r\n            if (config.progress) {\r\n                config.progress();\r\n            }\r\n        };\r\n\r\n        const onload = function () {\r\n            if (xhr.status >= 200 && xhr.status <= 299) {\r\n                handleLoaded(true);\r\n\r\n                if (config.success) {\r\n                    config.success(xhr.response, xhr.statusText, xhr);\r\n                }\r\n\r\n                if (config.complete) {\r\n                    config.complete(request, xhr.statusText);\r\n                }\r\n            }\r\n        };\r\n\r\n        try {\r\n            const modifiedUrl = requestModifier.modifyRequestURL(request.url);\r\n            const verb = request.checkExistenceOnly ? 'HEAD' : 'GET';\r\n\r\n            xhr.open(verb, modifiedUrl, true);\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.range) {\r\n                xhr.setRequestHeader('Range', 'bytes=' + request.range);\r\n            }\r\n\r\n            if (!request.requestStartDate) {\r\n                request.requestStartDate = requestStartTime;\r\n            }\r\n\r\n            xhr = requestModifier.modifyRequestHeader(xhr);\r\n\r\n            xhr.onload = onload;\r\n            xhr.onloadend = onloadend;\r\n            xhr.onerror = onloadend;\r\n            xhr.onprogress = progress;\r\n\r\n            // Adds the ability to delay single fragment loading time to control buffer.\r\n            let now = new Date().getTime();\r\n            if (isNaN(request.delayLoadingTime) || now >= request.delayLoadingTime) {\r\n                // no delay - just send xhr\r\n\r\n                xhrs.push(xhr);\r\n                xhr.send();\r\n            } else {\r\n                // delay\r\n                let delayedXhr = {xhr: xhr};\r\n                delayedXhrs.push(delayedXhr);\r\n                delayedXhr.delayTimeout = setTimeout(function () {\r\n                    if (delayedXhrs.indexOf(delayedXhr) === -1) {\r\n                        return;\r\n                    } else {\r\n                        delayedXhrs.splice(delayedXhrs.indexOf(delayedXhr), 1);\r\n                    }\r\n                    try {\r\n                        xhrs.push(delayedXhr.xhr);\r\n                        delayedXhr.xhr.send();\r\n                    } catch (e) {\r\n                        delayedXhr.xhr.onerror();\r\n                    }\r\n                }, (request.delayLoadingTime - now));\r\n            }\r\n\r\n        } catch (e) {\r\n            xhr.onerror();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initiates a download of the resource described by config.request\r\n     * @param {Object} config - contains request (FragmentRequest or derived type), and callbacks\r\n     * @memberof module:XHRLoader\r\n     * @instance\r\n     */\r\n    function load(config) {\r\n        if (config.request) {\r\n            internalLoad(\r\n                config,\r\n                mediaPlayerModel.getRetryAttemptsForType(\r\n                    config.request.type\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Aborts any inflight downloads\r\n     * @memberof module:XHRLoader\r\n     * @instance\r\n     */\r\n    function abort() {\r\n        retryTimers.forEach(t => clearTimeout(t));\r\n        retryTimers = [];\r\n\r\n        delayedXhrs.forEach(x => clearTimeout(x.delayTimeout));\r\n        delayedXhrs = [];\r\n\r\n        xhrs.forEach(x => {\r\n            // abort will trigger onloadend which we don't want\r\n            // when deliberately aborting inflight requests -\r\n            // set them to undefined so they are not called\r\n            x.onloadend = x.onerror = undefined;\r\n            x.abort();\r\n        });\r\n        xhrs = [];\r\n    }\r\n\r\n    instance = {\r\n        load: load,\r\n        abort: abort\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nXHRLoader.__dashjs_factory_name = 'XHRLoader';\r\n\r\nconst factory = FactoryMaker.getClassFactory(XHRLoader);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Error from './vo/Error.js';\r\nimport XHRLoader from './XHRLoader.js';\r\nimport HTTPRequest from './vo/metrics/HTTPRequest.js';\r\nimport TextRequest from './vo/TextRequest.js';\r\nimport EventBus from '../core/EventBus.js';\r\nimport Events from '../core/events/Events.js';\r\nimport FactoryMaker from '../core/FactoryMaker.js';\r\n\r\nconst XLINK_LOADER_ERROR_LOADING_FAILURE = 1;\r\n\r\nfunction XlinkLoader(config) {\r\n\r\n    const RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\r\n\r\n    const context  = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n\r\n    let xhrLoader = XHRLoader(context).create({\r\n        errHandler: config.errHandler,\r\n        metricsModel: config.metricsModel,\r\n        requestModifier: config.requestModifier\r\n    });\r\n\r\n    let instance;\r\n\r\n    function load(url, element, resolveObject) {\r\n        const report = function (content, resolveToZero) {\r\n            element.resolved = true;\r\n            element.resolvedContent = content ? content : null;\r\n\r\n            eventBus.trigger(Events.XLINK_ELEMENT_LOADED, {\r\n                element: element,\r\n                resolveObject: resolveObject,\r\n                error: content || resolveToZero ?\r\n                    null :\r\n                    new Error(\r\n                        XLINK_LOADER_ERROR_LOADING_FAILURE,\r\n                        'Failed loading Xlink element: ' + url\r\n                    )\r\n            });\r\n        };\r\n\r\n        if (url === RESOLVE_TO_ZERO) {\r\n            report(null, true);\r\n        } else {\r\n            const request = new TextRequest(url, HTTPRequest.XLINK_TYPE);\r\n\r\n            xhrLoader.load({\r\n                request: request,\r\n                success: function (data) {\r\n                    report(data);\r\n                },\r\n                error: function () {\r\n                    report(null);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        if (xhrLoader) {\r\n            xhrLoader.abort();\r\n            xhrLoader = null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        load: load,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nXlinkLoader.__dashjs_factory_name = 'XlinkLoader';\r\n\r\nconst factory = FactoryMaker.getClassFactory(XlinkLoader);\r\nfactory.XLINK_LOADER_ERROR_LOADING_FAILURE = XLINK_LOADER_ERROR_LOADING_FAILURE;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport SwitchRequest from '../rules/SwitchRequest';\r\nimport BitrateInfo from '../vo/BitrateInfo.js';\r\nimport DOMStorage from '../utils/DOMStorage.js';\r\nimport ABRRulesCollection from '../rules/abr/ABRRulesCollection.js';\r\nimport MediaPlayerModel from '../models/MediaPlayerModel.js';\r\nimport FragmentModel from '../models/FragmentModel.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport ManifestModel from '../models/ManifestModel.js';\r\nimport DashManifestModel from '../../dash/models/DashManifestModel.js';\r\nimport VideoModel from '../models/VideoModel.js';\r\n\r\nconst ABANDON_LOAD = 'abandonload';\r\nconst ALLOW_LOAD = 'allowload';\r\nconst DEFAULT_VIDEO_BITRATE = 1000;\r\nconst DEFAULT_AUDIO_BITRATE = 100;\r\n\r\nfunction AbrController() {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        abrRulesCollection,\r\n        rulesController,\r\n        streamController,\r\n        autoSwitchBitrate,\r\n        topQualities,\r\n        qualityDict,\r\n        confidenceDict,\r\n        bitrateDict,\r\n        ratioDict,\r\n        averageThroughputDict,\r\n        streamProcessorDict,\r\n        abandonmentStateDict,\r\n        abandonmentTimeout,\r\n        limitBitrateByPortal,\r\n        manifestModel,\r\n        dashManifestModel,\r\n        videoModel,\r\n        mediaPlayerModel,\r\n        domStorage;\r\n\r\n    function setup() {\r\n        autoSwitchBitrate = {video: true, audio: true};\r\n        topQualities = {};\r\n        qualityDict = {};\r\n        confidenceDict = {};\r\n        bitrateDict = {};\r\n        ratioDict = {};\r\n        averageThroughputDict = {};\r\n        abandonmentStateDict = {};\r\n        streamProcessorDict = {};\r\n        limitBitrateByPortal = false;\r\n        domStorage = DOMStorage(context).getInstance();\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n        manifestModel = ManifestModel(context).getInstance();\r\n        dashManifestModel = DashManifestModel(context).getInstance();\r\n        videoModel = VideoModel(context).getInstance();\r\n    }\r\n\r\n    function initialize(type, streamProcessor) {\r\n        streamProcessorDict[type] = streamProcessor;\r\n        abandonmentStateDict[type] = abandonmentStateDict[type] || {};\r\n        abandonmentStateDict[type].state = ALLOW_LOAD;\r\n        eventBus.on(Events.LOADING_PROGRESS, onFragmentLoadProgress, this);\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.abrRulesCollection) {\r\n            abrRulesCollection = config.abrRulesCollection;\r\n        }\r\n        if (config.rulesController) {\r\n            rulesController = config.rulesController;\r\n        }\r\n        if (config.streamController) {\r\n            streamController = config.streamController;\r\n        }\r\n    }\r\n\r\n    function getTopQualityIndexFor(type, id) {\r\n        var idx;\r\n        topQualities[id] = topQualities[id] || {};\r\n\r\n        if (!topQualities[id].hasOwnProperty(type)) {\r\n            topQualities[id][type] = 0;\r\n        }\r\n\r\n        idx = checkMaxBitrate(topQualities[id][type], type);\r\n        idx = checkMaxRepresentationRatio(idx, type, topQualities[id][type]);\r\n        idx = checkPortalSize(idx, type);\r\n        return idx;\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @returns {number} A value of the initial bitrate, kbps\r\n     * @memberof AbrController#\r\n     */\r\n    function getInitialBitrateFor(type) {\r\n\r\n        let savedBitrate = domStorage.getSavedBitrateSettings(type);\r\n\r\n        if (!bitrateDict.hasOwnProperty(type)) {\r\n            if (ratioDict.hasOwnProperty(type)) {\r\n                let manifest = manifestModel.getValue();\r\n                let representation = dashManifestModel.getAdaptationForType(manifest, 0, type).Representation;\r\n\r\n                if (Array.isArray(representation)) {\r\n                    let repIdx = Math.max(Math.round(representation.length * ratioDict[type]) - 1, 0);\r\n                    bitrateDict[type] = representation[repIdx].bandwidth;\r\n                } else {\r\n                    bitrateDict[type] = 0;\r\n                }\r\n            } else if (!isNaN(savedBitrate)) {\r\n                bitrateDict[type] = savedBitrate;\r\n            } else {\r\n                bitrateDict[type] = (type === 'video') ? DEFAULT_VIDEO_BITRATE : DEFAULT_AUDIO_BITRATE;\r\n            }\r\n        }\r\n\r\n        return bitrateDict[type];\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @param {number} value A value of the initial bitrate, kbps\r\n     * @memberof AbrController#\r\n     */\r\n    function setInitialBitrateFor(type, value) {\r\n        bitrateDict[type] = value;\r\n    }\r\n\r\n    function getInitialRepresentationRatioFor(type) {\r\n        if (!ratioDict.hasOwnProperty(type)) {\r\n            return null;\r\n        }\r\n\r\n        return ratioDict[type];\r\n    }\r\n\r\n    function setInitialRepresentationRatioFor(type, value) {\r\n        ratioDict[type] = value;\r\n    }\r\n\r\n    function getMaxAllowedBitrateFor(type) {\r\n        if (bitrateDict.hasOwnProperty('max') && bitrateDict.max.hasOwnProperty(type)) {\r\n            return bitrateDict.max[type];\r\n        }\r\n        return NaN;\r\n    }\r\n\r\n    //TODO  change bitrateDict structure to hold one object for video and audio with initial and max values internal.\r\n    // This means you need to update all the logic around initial bitrate DOMStorage, RebController etc...\r\n    function setMaxAllowedBitrateFor(type, value) {\r\n        bitrateDict.max = bitrateDict.max || {};\r\n        bitrateDict.max[type] = value;\r\n    }\r\n\r\n    function getMaxAllowedRepresentationRatioFor(type) {\r\n        if (ratioDict.hasOwnProperty('max') && ratioDict.max.hasOwnProperty(type)) {\r\n            return ratioDict.max[type];\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    function setMaxAllowedRepresentationRatioFor(type, value) {\r\n        ratioDict.max = ratioDict.max || {};\r\n        ratioDict.max[type] = value;\r\n    }\r\n\r\n    function getAutoSwitchBitrateFor(type) {\r\n        return autoSwitchBitrate[type];\r\n    }\r\n\r\n    function setAutoSwitchBitrateFor(type, value) {\r\n        autoSwitchBitrate[type] = value;\r\n    }\r\n\r\n    function getLimitBitrateByPortal() {\r\n        return limitBitrateByPortal;\r\n    }\r\n\r\n    function setLimitBitrateByPortal(value) {\r\n        limitBitrateByPortal = value;\r\n    }\r\n\r\n    function getPlaybackQuality(streamProcessor, completedCallback) {\r\n        var type = streamProcessor.getType();\r\n        var streamInfo = streamProcessor.getStreamInfo();\r\n        var streamId = streamInfo.id;\r\n        var quality,\r\n            oldQuality,\r\n            rules,\r\n            confidence;\r\n        var callback = function (res) {\r\n            var topQualityIdx = getTopQualityIndexFor(type, streamId);\r\n\r\n            quality = res.value;\r\n            confidence = res.confidence;\r\n\r\n            // be sure the quality valid!\r\n            if (quality < 0) {\r\n                quality = 0;\r\n            }\r\n            // zero based\r\n            if (quality > topQualityIdx) {\r\n                quality = topQualityIdx;\r\n            }\r\n\r\n            oldQuality = getQualityFor(type, streamInfo);\r\n            if (quality !== oldQuality && (abandonmentStateDict[type].state === ALLOW_LOAD ||  quality > oldQuality)) {\r\n                setInternalQuality(type, streamId, quality);\r\n                setConfidenceFor(type, streamId, confidence);\r\n                eventBus.trigger(Events.QUALITY_CHANGED, {mediaType: type, streamInfo: streamProcessor.getStreamInfo(), oldQuality: oldQuality, newQuality: quality});\r\n            }\r\n            if (completedCallback) {\r\n                completedCallback();\r\n            }\r\n        };\r\n\r\n        quality = getQualityFor(type, streamInfo);\r\n        confidence = getConfidenceFor(type, streamId);\r\n\r\n        //log(\"ABR enabled? (\" + autoSwitchBitrate + \")\");\r\n        if (!getAutoSwitchBitrateFor(type)) {\r\n            if (completedCallback) {\r\n                completedCallback();\r\n            }\r\n        } else {\r\n            rules = abrRulesCollection.getRules(ABRRulesCollection.QUALITY_SWITCH_RULES);\r\n            rulesController.applyRules(rules, streamProcessor, callback, quality, function (currentValue, newValue) {\r\n                currentValue = currentValue === SwitchRequest.NO_CHANGE ? 0 : currentValue;\r\n                return Math.max(currentValue, newValue);\r\n            });\r\n        }\r\n    }\r\n\r\n    function setPlaybackQuality(type, streamInfo, newPlaybackQuality) {\r\n        var id = streamInfo.id;\r\n        var quality = getQualityFor(type, streamInfo);\r\n        var isInt = newPlaybackQuality !== null && !isNaN(newPlaybackQuality) && (newPlaybackQuality % 1 === 0);\r\n\r\n        if (!isInt) throw 'argument is not an integer';\r\n\r\n        if (newPlaybackQuality !== quality && newPlaybackQuality >= 0 && newPlaybackQuality <= getTopQualityIndexFor(type, id)) {\r\n            setInternalQuality(type, id, newPlaybackQuality);\r\n            eventBus.trigger(Events.QUALITY_CHANGED, {mediaType: type, streamInfo: streamInfo, oldQuality: quality, newQuality: newPlaybackQuality});\r\n        }\r\n    }\r\n\r\n    function setAbandonmentStateFor(type, state) {\r\n        abandonmentStateDict[type].state = state;\r\n    }\r\n\r\n    function getAbandonmentStateFor(type) {\r\n        return abandonmentStateDict[type].state;\r\n    }\r\n\r\n    /**\r\n     * @param mediaInfo\r\n     * @param bitrate A bitrate value, kbps\r\n     * @returns {number} A quality index <= for the given bitrate\r\n     * @memberof AbrController#\r\n     */\r\n    function getQualityForBitrate(mediaInfo, bitrate) {\r\n\r\n        let bitrateList = getBitrateList(mediaInfo);\r\n        let bitrateInfo;\r\n\r\n        if (!bitrateList || bitrateList.length === 0) {\r\n            return -1;\r\n        }\r\n\r\n        for (let i = bitrateList.length - 1; i >= 0; i--) {\r\n            bitrateInfo = bitrateList[i];\r\n            if (bitrate * 1000 >= bitrateInfo.bitrate) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @param mediaInfo\r\n     * @returns {Array} A list of {@link BitrateInfo} objects\r\n     * @memberof AbrController#\r\n     */\r\n    function getBitrateList(mediaInfo) {\r\n        if (!mediaInfo || !mediaInfo.bitrateList) return null;\r\n\r\n        var bitrateList = mediaInfo.bitrateList;\r\n        var type = mediaInfo.type;\r\n\r\n        var infoList = [];\r\n        var bitrateInfo;\r\n\r\n        for (var i = 0, ln = bitrateList.length; i < ln; i++) {\r\n            bitrateInfo = new BitrateInfo();\r\n            bitrateInfo.mediaType = type;\r\n            bitrateInfo.qualityIndex = i;\r\n            bitrateInfo.bitrate = bitrateList[i].bandwidth;\r\n            bitrateInfo.width = bitrateList[i].width;\r\n            bitrateInfo.height = bitrateList[i].height;\r\n            infoList.push(bitrateInfo);\r\n        }\r\n\r\n        return infoList;\r\n    }\r\n\r\n    function setAverageThroughput(type, value) {\r\n        averageThroughputDict[type] = value;\r\n    }\r\n\r\n    function getAverageThroughput(type) {\r\n        return averageThroughputDict[type];\r\n    }\r\n\r\n    function updateTopQualityIndex(mediaInfo) {\r\n        var type = mediaInfo.type;\r\n        var streamId = mediaInfo.streamInfo.id;\r\n        var max = mediaInfo.representationCount - 1;\r\n\r\n        setTopQualityIndex(type, streamId, max);\r\n\r\n        return max;\r\n    }\r\n\r\n    function isPlayingAtTopQuality(streamInfo) {\r\n        var isAtTop;\r\n        var streamId = streamInfo.id;\r\n        var audioQuality = getQualityFor('audio', streamInfo);\r\n        var videoQuality = getQualityFor('video', streamInfo);\r\n\r\n        isAtTop = (audioQuality === getTopQualityIndexFor('audio', streamId)) &&\r\n            (videoQuality === getTopQualityIndexFor('video', streamId));\r\n\r\n        return isAtTop;\r\n    }\r\n\r\n    function reset () {\r\n        eventBus.off(Events.LOADING_PROGRESS, onFragmentLoadProgress, this);\r\n        clearTimeout(abandonmentTimeout);\r\n        abandonmentTimeout = null;\r\n        setup();\r\n    }\r\n\r\n    function getQualityFor(type, streamInfo) {\r\n        var id = streamInfo.id;\r\n        var quality;\r\n\r\n        qualityDict[id] = qualityDict[id] || {};\r\n\r\n        if (!qualityDict[id].hasOwnProperty(type)) {\r\n            qualityDict[id][type] = 0;\r\n        }\r\n\r\n        quality = qualityDict[id][type];\r\n        return quality;\r\n    }\r\n\r\n    function setInternalQuality(type, id, value) {\r\n        qualityDict[id] = qualityDict[id] || {};\r\n        qualityDict[id][type] = value;\r\n    }\r\n\r\n    function getConfidenceFor(type, id) {\r\n        var confidence;\r\n\r\n        confidenceDict[id] = confidenceDict[id] || {};\r\n\r\n        if (!confidenceDict[id].hasOwnProperty(type)) {\r\n            confidenceDict[id][type] = 0;\r\n        }\r\n\r\n        confidence = confidenceDict[id][type];\r\n\r\n        return confidence;\r\n    }\r\n\r\n    function setConfidenceFor(type, id, value) {\r\n        confidenceDict[id] = confidenceDict[id] || {};\r\n        confidenceDict[id][type] = value;\r\n    }\r\n\r\n    function setTopQualityIndex(type, id, value) {\r\n        topQualities[id] = topQualities[id] || {};\r\n        topQualities[id][type] = value;\r\n    }\r\n\r\n    function checkMaxBitrate(idx, type) {\r\n        var maxBitrate = getMaxAllowedBitrateFor(type);\r\n        if (isNaN(maxBitrate) || !streamProcessorDict[type]) {\r\n            return idx;\r\n        }\r\n        var maxIdx = getQualityForBitrate(streamProcessorDict[type].getMediaInfo(), maxBitrate);\r\n        return Math.min (idx , maxIdx);\r\n    }\r\n\r\n    function checkMaxRepresentationRatio(idx, type, maxIdx) {\r\n        var maxRepresentationRatio = getMaxAllowedRepresentationRatioFor(type);\r\n        if (isNaN(maxRepresentationRatio) || maxRepresentationRatio >= 1 || maxRepresentationRatio < 0) {\r\n            return idx;\r\n        }\r\n        return Math.min( idx , Math.round(maxIdx * maxRepresentationRatio) );\r\n    }\r\n\r\n    function checkPortalSize(idx, type) {\r\n        if (type !== 'video' || !limitBitrateByPortal || !streamProcessorDict[type]) {\r\n            return idx;\r\n        }\r\n\r\n        let element = videoModel.getElement();\r\n        let elementWidth = element.clientWidth;\r\n        let elementHeight = element.clientHeight;\r\n        let manifest = manifestModel.getValue();\r\n        let representation = dashManifestModel.getAdaptationForType(manifest, 0, type).Representation;\r\n        let newIdx = idx;\r\n\r\n        if (elementWidth > 0 && elementHeight > 0) {\r\n            while (\r\n                newIdx > 0 &&\r\n                representation[newIdx] &&\r\n                elementWidth < representation[newIdx].width &&\r\n                elementWidth - representation[newIdx - 1].width < representation[newIdx].width - elementWidth\r\n            ) {\r\n                newIdx = newIdx - 1;\r\n            }\r\n\r\n            if (representation.length - 2 >= newIdx && representation[newIdx].width === representation[newIdx + 1].width) {\r\n                newIdx = Math.min(idx, newIdx + 1);\r\n            }\r\n        }\r\n\r\n        return newIdx;\r\n    }\r\n\r\n    function onFragmentLoadProgress(e) {\r\n        var type = e.request.mediaType;\r\n        if (getAutoSwitchBitrateFor(type)) { //check to see if we are in manual or auto switch mode.\r\n\r\n            var rules = abrRulesCollection.getRules(ABRRulesCollection.ABANDON_FRAGMENT_RULES);\r\n            var scheduleController = streamProcessorDict[type].getScheduleController();\r\n\r\n            // There may be a fragment load in progress when we switch periods and recreated some controllers.\r\n            // so return if that is the case.\r\n            if (!scheduleController) return;\r\n\r\n            var fragmentModel = scheduleController.getFragmentModel();\r\n            var callback = function (switchRequest) {\r\n\r\n                function setupTimeout(type) {\r\n                    abandonmentTimeout = setTimeout(function () {\r\n                        setAbandonmentStateFor(type, ALLOW_LOAD);\r\n                    }, mediaPlayerModel.getAbandonLoadTimeout());\r\n                }\r\n\r\n                if (switchRequest.confidence === SwitchRequest.STRONG) {\r\n\r\n                    var requests = fragmentModel.getRequests({ state: FragmentModel.FRAGMENT_MODEL_LOADING});\r\n                    var newQuality = switchRequest.value;\r\n                    var currentQuality = getQualityFor(type, streamController.getActiveStreamInfo());\r\n\r\n                    if (newQuality < currentQuality) {\r\n\r\n                        fragmentModel.abortRequests();\r\n                        setAbandonmentStateFor(type, ABANDON_LOAD);\r\n                        setPlaybackQuality(type, streamController.getActiveStreamInfo(), newQuality);\r\n                        scheduleController.replaceCanceledRequests(requests);\r\n                        setupTimeout(type);\r\n                    }\r\n                }\r\n            };\r\n\r\n            rulesController.applyRules(rules, streamProcessorDict[type], callback, e, function (currentValue, newValue) {\r\n                return newValue;\r\n            });\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        isPlayingAtTopQuality: isPlayingAtTopQuality,\r\n        updateTopQualityIndex: updateTopQualityIndex,\r\n        getAverageThroughput: getAverageThroughput,\r\n        getBitrateList: getBitrateList,\r\n        getQualityForBitrate: getQualityForBitrate,\r\n        getMaxAllowedBitrateFor: getMaxAllowedBitrateFor,\r\n        setMaxAllowedBitrateFor: setMaxAllowedBitrateFor,\r\n        getMaxAllowedRepresentationRatioFor: getMaxAllowedRepresentationRatioFor,\r\n        setMaxAllowedRepresentationRatioFor: setMaxAllowedRepresentationRatioFor,\r\n        getInitialBitrateFor: getInitialBitrateFor,\r\n        setInitialBitrateFor: setInitialBitrateFor,\r\n        getInitialRepresentationRatioFor: getInitialRepresentationRatioFor,\r\n        setInitialRepresentationRatioFor: setInitialRepresentationRatioFor,\r\n        setAutoSwitchBitrateFor: setAutoSwitchBitrateFor,\r\n        getAutoSwitchBitrateFor: getAutoSwitchBitrateFor,\r\n        setLimitBitrateByPortal: setLimitBitrateByPortal,\r\n        getLimitBitrateByPortal: getLimitBitrateByPortal,\r\n        getConfidenceFor: getConfidenceFor,\r\n        getQualityFor: getQualityFor,\r\n        getAbandonmentStateFor: getAbandonmentStateFor,\r\n        setAbandonmentStateFor: setAbandonmentStateFor,\r\n        setPlaybackQuality: setPlaybackQuality,\r\n        getPlaybackQuality: getPlaybackQuality,\r\n        setAverageThroughput: setAverageThroughput,\r\n        getTopQualityIndexFor: getTopQualityIndexFor,\r\n        initialize: initialize,\r\n        setConfig: setConfig,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nAbrController.__dashjs_factory_name = 'AbrController';\r\nlet factory = FactoryMaker.getSingletonFactory(AbrController);\r\nfactory.ABANDON_LOAD = ABANDON_LOAD;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport BaseURLTreeModel from '../models/BaseURLTreeModel.js';\r\nimport BaseURLSelector from '../utils/BaseURLSelector.js';\r\nimport URLUtils from '../utils/URLUtils.js';\r\nimport BaseURL from '../../dash/vo/BaseURL.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\n\r\nfunction BaseURLController() {\r\n\r\n    let instance;\r\n\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n    const urlUtils = URLUtils(context).getInstance();\r\n\r\n    let baseURLTreeModel,\r\n        baseURLSelector;\r\n\r\n    function onBlackListChanged(e) {\r\n        baseURLTreeModel.invalidateSelectedIndexes(e.entry);\r\n    }\r\n\r\n    function setup() {\r\n        baseURLTreeModel = BaseURLTreeModel(context).create();\r\n        baseURLSelector = BaseURLSelector(context).create();\r\n\r\n        eventBus.on(Events.SERVICE_LOCATION_BLACKLIST_CHANGED, onBlackListChanged, instance);\r\n    }\r\n\r\n    function update(manifest) {\r\n        baseURLTreeModel.update(manifest);\r\n        baseURLSelector.chooseSelectorFromManifest(manifest);\r\n    }\r\n\r\n    function resolve(path) {\r\n        const baseUrls = baseURLTreeModel.getForPath(path);\r\n\r\n        const baseUrl = baseUrls.reduce((p, c) => {\r\n            const b = baseURLSelector.select(c);\r\n\r\n            if (b) {\r\n                if (!urlUtils.isRelative(b.url)) {\r\n                    p.url = b.url;\r\n                    p.serviceLocation = b.serviceLocation;\r\n                } else {\r\n                    p.url += b.url;\r\n                }\r\n            }\r\n\r\n            return p;\r\n        }, new BaseURL());\r\n\r\n        if (!urlUtils.isRelative(baseUrl.url)) {\r\n            return baseUrl;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        baseURLTreeModel.reset();\r\n        baseURLSelector.reset();\r\n    }\r\n\r\n    function initialize(data) {\r\n        update(data);\r\n    }\r\n\r\n    instance = {\r\n        reset: reset,\r\n        initialize: initialize,\r\n        resolve: resolve\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\r\nexport default FactoryMaker.getSingletonFactory(BaseURLController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport EventBus from '../../core/EventBus.js';\r\n\r\nfunction BlackListController(config) {\r\n\r\n    let blacklist = [];\r\n\r\n    const eventBus = EventBus(this.context).getInstance();\r\n    const updateEventName = config.updateEventName;\r\n    const loadFailedEventName = config.loadFailedEventName;\r\n\r\n    function contains(query) {\r\n        if (!blacklist.length || !query || !query.length) {\r\n            return false;\r\n        }\r\n\r\n        return (blacklist.indexOf(query) !== -1);\r\n    }\r\n\r\n    function add(entry) {\r\n        if (blacklist.indexOf(entry) !== -1) {\r\n            return;\r\n        }\r\n\r\n        blacklist.push(entry);\r\n\r\n        eventBus.trigger(\r\n            updateEventName,\r\n            {\r\n                entry: entry\r\n            }\r\n        );\r\n    }\r\n\r\n    function onLoadFailed(e) {\r\n        if (e.error) {\r\n            add(e.request.serviceLocation);\r\n        }\r\n    }\r\n\r\n    function setup() {\r\n        if (loadFailedEventName) {\r\n            eventBus.on(loadFailedEventName, onLoadFailed, this);\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        blacklist = [];\r\n    }\r\n\r\n    setup();\r\n\r\n    return {\r\n        add: add,\r\n        contains: contains,\r\n        reset: reset\r\n    };\r\n}\r\n\r\nBlackListController.__dashjs_factory_name = 'BlackListController';\r\nexport default FactoryMaker.getClassFactory(BlackListController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FragmentModel from '../models/FragmentModel.js';\r\nimport MediaPlayerModel from '../models/MediaPlayerModel.js';\r\nimport HTTPRequest from '../vo/metrics/HTTPRequest.js';\r\nimport SourceBufferController from './SourceBufferController.js';\r\nimport AbrController from './AbrController.js';\r\nimport PlaybackController from './PlaybackController.js';\r\nimport MediaController from './MediaController.js';\r\nimport CustomTimeRanges from '../utils/CustomTimeRanges.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport BoxParser from '../utils/BoxParser.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport Debug from '../../core/Debug.js';\r\n\r\nconst BUFFER_LOADED = 'bufferLoaded';\r\nconst BUFFER_EMPTY = 'bufferStalled';\r\nconst STALL_THRESHOLD = 0.5;\r\n\r\nfunction BufferController(config) {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let metricsModel = config.metricsModel;\r\n    let manifestModel = config.manifestModel;\r\n    let sourceBufferController = config.sourceBufferController;\r\n    let errHandler = config.errHandler;\r\n    let mediaSourceController = config.mediaSourceController;\r\n    let streamController = config.streamController;\r\n    let mediaController = config.mediaController;\r\n    let adapter = config.adapter;\r\n    let virtualBuffer = config.virtualBuffer;\r\n    let textSourceBuffer = config.textSourceBuffer;\r\n\r\n    let instance,\r\n        requiredQuality,\r\n        currentQuality,\r\n        isBufferingCompleted,\r\n        bufferLevel,\r\n        bufferTarget,\r\n        criticalBufferLevel,\r\n        mediaSource,\r\n        maxAppendedIndex,\r\n        lastIndex,\r\n        type,\r\n        buffer,\r\n        bufferState,\r\n        appendedBytesInfo,\r\n        wallclockTicked,\r\n        appendingMediaChunk,\r\n        isAppendingInProgress,\r\n        isPruningInProgress,\r\n        inbandEventFound,\r\n        playbackController,\r\n        streamProcessor,\r\n        abrController,\r\n        fragmentController,\r\n        scheduleController,\r\n        mediaPlayerModel,\r\n        clearBufferTimeout;\r\n\r\n    function setup() {\r\n        requiredQuality = -1;\r\n        currentQuality = -1;\r\n        isBufferingCompleted = false;\r\n        bufferLevel = 0;\r\n        bufferTarget = 0;\r\n        criticalBufferLevel = Number.POSITIVE_INFINITY;\r\n        maxAppendedIndex = -1;\r\n        lastIndex = -1;\r\n        buffer = null;\r\n        bufferState = BUFFER_EMPTY;\r\n        wallclockTicked = 0;\r\n        appendingMediaChunk = false;\r\n        isAppendingInProgress = false;\r\n        isPruningInProgress = false;\r\n        inbandEventFound = false;\r\n        clearBufferTimeout = null;\r\n    }\r\n\r\n    function initialize(Type, Source, StreamProcessor) {\r\n        type = Type;\r\n        setMediaSource(Source);\r\n        streamProcessor = StreamProcessor;\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n        playbackController = PlaybackController(context).getInstance();\r\n        abrController = AbrController(context).getInstance();\r\n        fragmentController = streamProcessor.getFragmentController();\r\n        scheduleController = streamProcessor.getScheduleController();\r\n        requiredQuality = abrController.getQualityFor(type, streamProcessor.getStreamInfo());\r\n\r\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\r\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, this);\r\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, this);\r\n        eventBus.on(Events.QUALITY_CHANGED, onQualityChanged, this);\r\n        eventBus.on(Events.STREAM_COMPLETED, onStreamCompleted, this);\r\n        eventBus.on(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\r\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\r\n        eventBus.on(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\r\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\r\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, this);\r\n        eventBus.on(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, this);\r\n        eventBus.on(Events.SOURCEBUFFER_APPEND_COMPLETED, onAppended, this);\r\n        eventBus.on(Events.SOURCEBUFFER_REMOVE_COMPLETED, onRemoved, this);\r\n        eventBus.on(Events.CHUNK_APPENDED, onChunkAppended, this);\r\n    }\r\n\r\n    function createBuffer(mediaInfo) {\r\n        if (!mediaInfo || !mediaSource || !streamProcessor) return null;\r\n\r\n        var sourceBuffer = null;\r\n\r\n        try {\r\n            sourceBuffer = sourceBufferController.createSourceBuffer(mediaSource, mediaInfo);\r\n\r\n            if (sourceBuffer && sourceBuffer.hasOwnProperty('initialize')) {\r\n                sourceBuffer.initialize(type, this);\r\n            }\r\n        } catch (e) {\r\n            errHandler.mediaSourceError('Error creating ' + type + ' source buffer.');\r\n        }\r\n\r\n        setBuffer(sourceBuffer);\r\n        updateBufferTimestampOffset(streamProcessor.getRepresentationInfoForQuality(requiredQuality).MSETimeOffset);\r\n        // We may already have some segments in a virtual buffer by this moment. Let's try to append them to the real one.\r\n        appendNext();\r\n\r\n        return sourceBuffer;\r\n    }\r\n\r\n    function isActive() {\r\n        var thisStreamId = streamProcessor.getStreamInfo().id;\r\n        var activeStreamId = streamController.getActiveStreamInfo().id;\r\n\r\n        return thisStreamId === activeStreamId;\r\n    }\r\n\r\n    function onInitFragmentLoaded(e) {\r\n        // We received a new init chunk.\r\n        // We just want to cache it in the virtual buffer here.\r\n        // Then pass control to appendNext() to handle any other logic.\r\n\r\n        var chunk;\r\n\r\n        if (e.fragmentModel !== streamProcessor.getFragmentModel()) return;\r\n\r\n        log('Initialization finished loading');\r\n        chunk = e.chunk;\r\n        // cache the initialization data to use it next time the quality has changed\r\n        virtualBuffer.append(chunk);\r\n        switchInitData(getStreamId(),  requiredQuality);\r\n    }\r\n\r\n    function onMediaFragmentLoaded(e) {\r\n        if (e.fragmentModel !== streamProcessor.getFragmentModel()) return;\r\n\r\n        var events;\r\n        var chunk = e.chunk;\r\n        var bytes = chunk.bytes;\r\n        var quality = chunk.quality;\r\n        var index = chunk.index;\r\n        var request = streamProcessor.getFragmentModel().getRequests({ state: FragmentModel.FRAGMENT_MODEL_EXECUTED, quality: quality, index: index })[0];\r\n        var currentRepresentation = streamProcessor.getRepresentationInfoForQuality(quality);\r\n        var manifest = manifestModel.getValue();\r\n        var eventStreamMedia = adapter.getEventsFor(manifest, currentRepresentation.mediaInfo, streamProcessor);\r\n        var eventStreamTrack = adapter.getEventsFor(manifest, currentRepresentation, streamProcessor);\r\n\r\n        if (eventStreamMedia.length > 0 || eventStreamTrack.length > 0) {\r\n            events = handleInbandEvents(bytes, request, eventStreamMedia, eventStreamTrack);\r\n            streamProcessor.getEventController().addInbandEvents(events);\r\n        }\r\n\r\n        chunk.bytes = deleteInbandEvents(bytes);\r\n\r\n        virtualBuffer.append(chunk);\r\n        appendNext();\r\n    }\r\n\r\n    function appendNext() {\r\n        // If we have an appendingMediaChunk in progress, process it.\r\n        // Otherwise, try to get a media chunk from the virtual buffer.\r\n        // If we have no media chunk available, do nothing - return.\r\n        // If the media chunk we have matches currentQuality, append the media chunk to the source buffer.\r\n        // Otherwise, leave the media chunk in appendingMediaChunk and check the init chunk corresponding to the media chunk.\r\n        // If we have the corresponding init chunk, append the init chunk to the source buffer; appendingMediaChunk will be processed shortly through onAppended().\r\n        // Otherwise, fire the Events.INIT_REQUESTED event.\r\n        if (!buffer || isAppendingInProgress || !hasEnoughSpaceToAppend()) return;\r\n\r\n        var streamId = getStreamId();\r\n        var chunk;\r\n\r\n        if (appendingMediaChunk) {\r\n            chunk = appendingMediaChunk;\r\n        } else {\r\n\r\n            chunk = virtualBuffer.extract({streamId: streamId, mediaType: type, segmentType: HTTPRequest.MEDIA_SEGMENT_TYPE, limit: 1})[0];\r\n            if (!chunk) {\r\n                return;\r\n            }\r\n\r\n            appendingMediaChunk = chunk;\r\n        }\r\n\r\n        if (chunk.quality === currentQuality) {\r\n            appendingMediaChunk = false;\r\n            appendToBuffer(chunk);\r\n        }\r\n        else {\r\n            // we need to change currentQuality by init data\r\n            switchInitData(streamId, appendingMediaChunk.quality);\r\n        }\r\n    }\r\n\r\n    function switchInitData(streamId, quality) {\r\n\r\n        var filter = { streamId: streamId, mediaType: type, segmentType: HTTPRequest.INIT_SEGMENT_TYPE, quality: quality };\r\n        var chunk = virtualBuffer.getChunks(filter)[0];\r\n\r\n        if (chunk) {\r\n            if (!buffer) return;\r\n\r\n            appendToBuffer(chunk);\r\n        } else {\r\n            // if we have not loaded the init fragment for the current quality, do it\r\n            eventBus.trigger(Events.INIT_REQUESTED, {sender: instance, requiredQuality: quality});\r\n        }\r\n    }\r\n\r\n    function appendToBuffer(chunk) {\r\n        isAppendingInProgress = true;\r\n        appendedBytesInfo = chunk;\r\n        sourceBufferController.append(buffer, chunk);\r\n\r\n        if (chunk.mediaInfo.type === 'video') {\r\n            if (chunk.mediaInfo.embeddedCaptions) {\r\n                textSourceBuffer.append(chunk.bytes, chunk);\r\n            }\r\n        }\r\n    }\r\n\r\n    function onAppended(e) {\r\n        if (buffer !== e.buffer) return;\r\n\r\n        onPlaybackProgression();\r\n\r\n        if (isBufferingCompleted && streamProcessor.getStreamInfo().isLast) {\r\n            mediaSourceController.signalEndOfStream(mediaSource);\r\n        }\r\n\r\n        var ranges;\r\n\r\n        if (e.error) {\r\n            // if the append has failed because the buffer is full we should store the data\r\n            // that has not been appended and stop request scheduling. We also need to store\r\n            // the promise for this append because the next data can be appended only after\r\n            // this promise is resolved.\r\n            if (e.error.code === SourceBufferController.QUOTA_EXCEEDED_ERROR_CODE) {\r\n                virtualBuffer.append(appendedBytesInfo);\r\n                criticalBufferLevel = sourceBufferController.getTotalBufferedTime(buffer) * 0.8;\r\n                eventBus.trigger(Events.QUOTA_EXCEEDED, {sender: instance, criticalBufferLevel: criticalBufferLevel});\r\n                clearBuffer(getClearRange());\r\n            }\r\n            isAppendingInProgress = false;\r\n            return;\r\n        }\r\n\r\n        if (!hasEnoughSpaceToAppend()) {\r\n            eventBus.trigger(Events.QUOTA_EXCEEDED, {sender: instance, criticalBufferLevel: criticalBufferLevel});\r\n            clearBuffer(getClearRange());\r\n        }\r\n\r\n        ranges = sourceBufferController.getAllRanges(buffer);\r\n\r\n        if (ranges) {\r\n            //log(\"Append complete: \" + ranges.length);\r\n            if (ranges.length > 0) {\r\n                var i,\r\n                    len;\r\n\r\n                //log(\"Number of buffered ranges: \" + ranges.length);\r\n                for (i = 0, len = ranges.length; i < len; i++) {\r\n                    log('Buffered Range: ' + ranges.start(i) + ' - ' + ranges.end(i));\r\n                }\r\n            }\r\n        }\r\n\r\n        //finish appending\r\n        isAppendingInProgress = false;\r\n        if (!isNaN(appendedBytesInfo.index)) {\r\n            virtualBuffer.storeAppendedChunk(appendedBytesInfo, buffer);\r\n            removeOldTrackData();\r\n            maxAppendedIndex = Math.max(appendedBytesInfo.index, maxAppendedIndex);\r\n            checkIfBufferingCompleted();\r\n        } else {\r\n            currentQuality = appendedBytesInfo.quality;\r\n            if (!streamProcessor.isDynamic()) {\r\n                appendNext();\r\n            }\r\n        }\r\n\r\n        eventBus.trigger(Events.BYTES_APPENDED, {sender: instance, quality: appendedBytesInfo.quality, startTime: appendedBytesInfo.start, index: appendedBytesInfo.index, bufferedRanges: ranges});\r\n    }\r\n\r\n    function onQualityChanged(e) {\r\n        var newQuality = e.newQuality;\r\n        if (requiredQuality === newQuality || type !== e.mediaType || streamProcessor.getStreamInfo().id !== e.streamInfo.id) return;\r\n\r\n        updateBufferTimestampOffset(streamProcessor.getRepresentationInfoForQuality(newQuality).MSETimeOffset);\r\n        requiredQuality = newQuality;\r\n    }\r\n\r\n    //**********************************************************************\r\n    // START Buffer Level, State & Sufficiency Handling.\r\n    //**********************************************************************\r\n    function onPlaybackSeeking() {\r\n        isAppendingInProgress = false;\r\n        onPlaybackProgression();\r\n\r\n    }\r\n\r\n    function onPlaybackProgression() {\r\n        updateBufferLevel();\r\n        addBufferMetrics();\r\n    }\r\n\r\n    function updateBufferLevel() {\r\n        var currentTime = playbackController.getTime();\r\n\r\n        bufferLevel = sourceBufferController.getBufferLength(buffer, currentTime);\r\n        eventBus.trigger(Events.BUFFER_LEVEL_UPDATED, {sender: instance, bufferLevel: bufferLevel});\r\n        checkIfSufficientBuffer();\r\n    }\r\n\r\n    function addBufferMetrics() {\r\n        if (!isActive()) return;\r\n\r\n        //TODO will need to fix how we get bufferTarget... since we ony load one at a time. but do it in the addBufferMetrics call not here\r\n        //bufferTarget = fragmentsToLoad > 0 ? (fragmentsToLoad * fragmentDuration) + bufferLevel : bufferTarget;\r\n        metricsModel.addBufferState(type, bufferState, bufferTarget);\r\n\r\n        //TODO may be needed for MULTIPERIOD PLEASE CHECK Turning this off for now... not really needed since we load sync...\r\n        //var level = bufferLevel,\r\n        //    virtualLevel;\r\n        //virtualLevel = virtualBuffer.getTotalBufferLevel(streamProcessor.getMediaInfo());\r\n        //if (virtualLevel) {\r\n        //    level += virtualLevel;\r\n        //}\r\n\r\n        metricsModel.addBufferLevel(type, new Date(), bufferLevel * 1000);\r\n    }\r\n\r\n    function checkIfBufferingCompleted() {\r\n        var isLastIdxAppended = maxAppendedIndex === (lastIndex - 1);\r\n\r\n        if (!isLastIdxAppended || isBufferingCompleted) return;\r\n\r\n        isBufferingCompleted = true;\r\n        eventBus.trigger(Events.BUFFERING_COMPLETED, {sender: instance, streamInfo: streamProcessor.getStreamInfo()});\r\n    }\r\n\r\n    function checkIfSufficientBuffer() {\r\n        if (bufferLevel < STALL_THRESHOLD && !isBufferingCompleted) {\r\n            notifyBufferStateChanged(BUFFER_EMPTY);\r\n        } else {\r\n            notifyBufferStateChanged(BUFFER_LOADED);\r\n        }\r\n    }\r\n\r\n    function notifyBufferStateChanged(state) {\r\n        if (bufferState === state || (type === 'fragmentedText' && textSourceBuffer.getAllTracksAreDisabled())) return;\r\n\r\n        bufferState = state;\r\n        addBufferMetrics();\r\n        eventBus.trigger(Events.BUFFER_LEVEL_STATE_CHANGED, {sender: instance, state: state, mediaType: type, streamInfo: streamProcessor.getStreamInfo()});\r\n        let eventType = state === BUFFER_LOADED ? Events.BUFFER_LOADED : Events.BUFFER_EMPTY;\r\n        eventBus.trigger(eventType, {mediaType: type});\r\n        log(state === BUFFER_LOADED ? ('Got enough buffer to start.') : ('Waiting for more buffer before starting playback.'));\r\n    }\r\n\r\n\r\n    function handleInbandEvents(data, request, mediaInbandEvents, trackInbandEvents) {\r\n        var fragmentStarttime = Math.max(isNaN(request.startTime) ? 0 : request.startTime, 0);\r\n        var eventStreams = [];\r\n        var events = [];\r\n\r\n        var eventBoxes,\r\n            event,\r\n            isoFile,\r\n            inbandEvents;\r\n\r\n        inbandEventFound = false;\r\n        /* Extract the possible schemeIdUri : If a DASH client detects an event message box with a scheme that is not defined in MPD, the client is expected to ignore it */\r\n        inbandEvents = mediaInbandEvents.concat(trackInbandEvents);\r\n        for (var loop = 0; loop < inbandEvents.length; loop++) {\r\n            eventStreams[inbandEvents[loop].schemeIdUri] = inbandEvents[loop];\r\n        }\r\n\r\n        isoFile = BoxParser(context).getInstance().parse(data);\r\n        eventBoxes = isoFile.getBoxes('emsg');\r\n\r\n        for (var i = 0, ln = eventBoxes.length; i < ln; i++) {\r\n            event = adapter.getEvent(eventBoxes[i], eventStreams, fragmentStarttime);\r\n\r\n            if (event) {\r\n                events.push(event);\r\n            }\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n    function deleteInbandEvents(data) {\r\n\r\n        if (!inbandEventFound) {\r\n            return data;\r\n        }\r\n\r\n        var length = data.length;\r\n        var expTwo = Math.pow(256, 2);\r\n        var expThree = Math.pow(256, 3);\r\n        var modData = new Uint8Array(data.length);\r\n\r\n        var identifier,\r\n            size;\r\n        var i = 0;\r\n        var j = 0;\r\n\r\n        while (i < length) {\r\n\r\n            identifier = String.fromCharCode(data[i + 4],data[i + 5],data[i + 6],data[i + 7]);\r\n            size = data[i] * expThree + data[i + 1] * expTwo + data[i + 2] * 256 + data[i + 3] * 1;\r\n\r\n            if (identifier != 'emsg' ) {\r\n                for (var l = i ; l < i + size; l++) {\r\n                    modData[j] = data[l];\r\n                    j++;\r\n                }\r\n            }\r\n            i += size;\r\n\r\n        }\r\n\r\n        return modData.subarray(0,j);\r\n    }\r\n\r\n    function hasEnoughSpaceToAppend() {\r\n        var totalBufferedTime = sourceBufferController.getTotalBufferedTime(buffer);\r\n        return (totalBufferedTime < criticalBufferLevel);\r\n    }\r\n\r\n    /* prune buffer on our own in background to avoid browsers pruning buffer silently */\r\n    function pruneBuffer() {\r\n        if (type === 'fragmentedText') return;\r\n\r\n        log('try to prune buffer');\r\n\r\n        var start = buffer.buffered.length ? buffer.buffered.start(0) : 0;\r\n        var currentTime = playbackController.getTime();\r\n        // we want to get rid off buffer that is more than x seconds behind current time\r\n        var bufferToPrune = currentTime - start - mediaPlayerModel.getBufferToKeep();\r\n\r\n        if (bufferToPrune > 0) {\r\n            log('pruning buffer: ' + bufferToPrune + ' seconds.');\r\n            isPruningInProgress = true;\r\n            sourceBufferController.remove(buffer, 0, Math.round(start + bufferToPrune), mediaSource);\r\n        }\r\n    }\r\n\r\n    function getClearRange() {\r\n        var currentTime,\r\n            removeStart,\r\n            removeEnd,\r\n            range,\r\n            req;\r\n\r\n        if (!buffer) return null;\r\n\r\n        currentTime = playbackController.getTime();\r\n        // we need to remove data that is more than one fragment before the video currentTime\r\n        req = streamProcessor.getFragmentModel().getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, time: currentTime})[0];\r\n        removeEnd = (req && !isNaN(req.startTime)) ? req.startTime : Math.floor(currentTime);\r\n\r\n        range = sourceBufferController.getBufferRange(buffer, currentTime);\r\n\r\n        if ((range === null) && (buffer.buffered.length > 0)) {\r\n            removeEnd = buffer.buffered.end(buffer.buffered.length - 1 );\r\n        }\r\n\r\n        removeStart = buffer.buffered.start(0);\r\n\r\n        return {start: removeStart, end: removeEnd};\r\n    }\r\n\r\n    function clearBuffer(range) {\r\n        if (!range || !buffer) return;\r\n\r\n        var removeStart = range.start;\r\n        var removeEnd = range.end;\r\n\r\n        sourceBufferController.remove(buffer, removeStart, removeEnd, mediaSource);\r\n    }\r\n\r\n    function onRemoved(e) {\r\n        if (buffer !== e.buffer) return;\r\n\r\n        // After the buffer has been cleared we need to update the virtual range that reflects the actual ranges\r\n        // of SourceBuffer. We also need to update the list of appended chunks\r\n        if (isPruningInProgress) {\r\n            isPruningInProgress = false;\r\n        }\r\n        virtualBuffer.updateBufferedRanges({streamId: getStreamId(), mediaType: type}, sourceBufferController.getAllRanges(buffer));\r\n        updateBufferLevel();\r\n        eventBus.trigger(Events.BUFFER_CLEARED, {sender: instance, from: e.from, to: e.to, hasEnoughSpaceToAppend: hasEnoughSpaceToAppend()});\r\n        if (hasEnoughSpaceToAppend()) return;\r\n\r\n        if (clearBufferTimeout === null) {\r\n            clearBufferTimeout = setTimeout(function () {\r\n                clearBufferTimeout = null;\r\n                clearBuffer(getClearRange());\r\n            }, streamProcessor.getStreamInfo().manifestInfo.minBufferTime * 1000);\r\n        }\r\n    }\r\n\r\n    function updateBufferTimestampOffset(MSETimeOffset) {\r\n        // each track can have its own @presentationTimeOffset, so we should set the offset\r\n        // if it has changed after switching the quality or updating an mpd\r\n        if (buffer && buffer.timestampOffset !== MSETimeOffset && !isNaN(MSETimeOffset)) {\r\n            buffer.timestampOffset = MSETimeOffset;\r\n        }\r\n    }\r\n\r\n    function getStreamId() {\r\n        return streamProcessor.getStreamInfo().id;\r\n    }\r\n\r\n    function removeOldTrackData() {\r\n        var allAppendedChunks = virtualBuffer.getChunks({ streamId: getStreamId(), mediaType: type, segmentType: HTTPRequest.MEDIA_SEGMENT_TYPE, appended: true });\r\n\r\n        const customTimeRangesFactory = CustomTimeRanges(context);\r\n        var rangesToClear = customTimeRangesFactory.create();\r\n        var rangesToLeave = customTimeRangesFactory.create();\r\n\r\n        var currentTime = playbackController.getTime();\r\n        var safeBufferLength = streamProcessor.getCurrentRepresentationInfo().fragmentDuration * 2;\r\n\r\n        var currentTrackBufferLength,\r\n            ranges,\r\n            range;\r\n\r\n        allAppendedChunks.forEach(function (chunk) {\r\n            ranges = mediaController.isCurrentTrack(chunk.mediaInfo) ? rangesToLeave : rangesToClear;\r\n            ranges.add(chunk.bufferedRange.start, chunk.bufferedRange.end);\r\n        });\r\n\r\n        if ((rangesToClear.length === 0) || (rangesToLeave.length === 0)) return;\r\n\r\n        currentTrackBufferLength = sourceBufferController.getBufferLength({buffered: rangesToLeave}, currentTime);\r\n\r\n        if (currentTrackBufferLength < safeBufferLength) return;\r\n\r\n        for (var i = 0, ln = rangesToClear.length; i < ln; i++) {\r\n            range = {start: rangesToClear.start(i), end: rangesToClear.end(i)};\r\n            if (mediaController.getSwitchMode(type) === MediaController.TRACK_SWITCH_MODE_ALWAYS_REPLACE || range.start > currentTime) {\r\n                clearBuffer(range);\r\n            }\r\n        }\r\n    }\r\n\r\n    function onDataUpdateCompleted(e) {\r\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\r\n        if (e.error) return;\r\n\r\n        updateBufferTimestampOffset(e.currentRepresentation.MSETimeOffset);\r\n    }\r\n\r\n    function onStreamCompleted(e) {\r\n        if (e.fragmentModel !== streamProcessor.getFragmentModel()) return;\r\n        lastIndex = e.request.index;\r\n        checkIfBufferingCompleted();\r\n    }\r\n\r\n    function onChunkAppended(e) {\r\n        if (e.sender !== virtualBuffer) return;\r\n        addBufferMetrics();\r\n    }\r\n\r\n    function onCurrentTrackChanged(e) {\r\n        if (!buffer || (e.newMediaInfo.type !== type) || (e.newMediaInfo.streamInfo.id !== streamProcessor.getStreamInfo().id)) return;\r\n\r\n        var newMediaInfo = e.newMediaInfo;\r\n        var mediaType = newMediaInfo.type;\r\n        var switchMode = e.switchMode;\r\n        var currentTime = playbackController.getTime();\r\n        var range = { start: 0, end: currentTime };\r\n\r\n        if (type !== mediaType) return;\r\n\r\n        switch (switchMode) {\r\n            case MediaController.TRACK_SWITCH_MODE_ALWAYS_REPLACE:\r\n                clearBuffer(range);\r\n                break;\r\n            case MediaController.TRACK_SWITCH_MODE_NEVER_REPLACE:\r\n                break;\r\n            default:\r\n                log('track switch mode is not supported: ' + switchMode);\r\n        }\r\n    }\r\n\r\n    function onWallclockTimeUpdated() {\r\n        var secondsElapsed;\r\n        //constantly prune buffer every x seconds\r\n        wallclockTicked++;\r\n        secondsElapsed = (wallclockTicked * (mediaPlayerModel.getWallclockTimeUpdateInterval() / 1000));\r\n        if ((secondsElapsed >= mediaPlayerModel.getBufferPruningInterval()) && !isAppendingInProgress) {\r\n            wallclockTicked = 0;\r\n            pruneBuffer();\r\n        }\r\n    }\r\n\r\n    function onPlaybackRateChanged() {\r\n        checkIfSufficientBuffer();\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    function getStreamProcessor() {\r\n        return streamProcessor;\r\n    }\r\n\r\n    function setStreamProcessor(value) {\r\n        streamProcessor = value;\r\n    }\r\n\r\n    function getBuffer() {\r\n        return buffer;\r\n    }\r\n\r\n    function setBuffer(value) {\r\n        buffer = value;\r\n    }\r\n\r\n    function getBufferLevel() {\r\n        return bufferLevel;\r\n    }\r\n\r\n    function getCriticalBufferLevel() {\r\n        return criticalBufferLevel;\r\n    }\r\n\r\n    function setMediaSource(value) {\r\n        mediaSource = value;\r\n    }\r\n\r\n    function getMediaSource() {\r\n        return mediaSource;\r\n    }\r\n\r\n    function getIsBufferingCompleted() {\r\n        return isBufferingCompleted;\r\n    }\r\n\r\n    function getIsAppendingInProgress() {\r\n        return isAppendingInProgress;\r\n    }\r\n\r\n    function reset(errored) {\r\n\r\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\r\n        eventBus.off(Events.QUALITY_CHANGED, onQualityChanged, this);\r\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, this);\r\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, this);\r\n        eventBus.off(Events.STREAM_COMPLETED, onStreamCompleted, this);\r\n        eventBus.off(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, this);\r\n        eventBus.off(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\r\n        eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\r\n        eventBus.off(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\r\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\r\n        eventBus.off(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, this);\r\n        eventBus.off(Events.SOURCEBUFFER_APPEND_COMPLETED, onAppended, this);\r\n        eventBus.off(Events.SOURCEBUFFER_REMOVE_COMPLETED, onRemoved, this);\r\n        eventBus.off(Events.CHUNK_APPENDED, onChunkAppended, this);\r\n\r\n        clearTimeout(clearBufferTimeout);\r\n        clearBufferTimeout = null;\r\n\r\n        criticalBufferLevel = Number.POSITIVE_INFINITY;\r\n        bufferState = BUFFER_EMPTY;\r\n        currentQuality = -1;\r\n        lastIndex = -1;\r\n        maxAppendedIndex = -1;\r\n        requiredQuality = 0;\r\n        appendedBytesInfo = null;\r\n        appendingMediaChunk = false;\r\n        isBufferingCompleted = false;\r\n        isAppendingInProgress = false;\r\n        isPruningInProgress = false;\r\n        playbackController = null;\r\n        streamProcessor = null;\r\n        abrController = null;\r\n        fragmentController = null;\r\n        scheduleController = null;\r\n\r\n        if (!errored) {\r\n            sourceBufferController.abort(mediaSource, buffer);\r\n            sourceBufferController.removeSourceBuffer(mediaSource, buffer);\r\n        }\r\n\r\n        buffer = null;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        createBuffer: createBuffer,\r\n        getType: getType,\r\n        getStreamProcessor: getStreamProcessor,\r\n        setStreamProcessor: setStreamProcessor,\r\n        getBuffer: getBuffer,\r\n        setBuffer: setBuffer,\r\n        getBufferLevel: getBufferLevel,\r\n        getCriticalBufferLevel: getCriticalBufferLevel,\r\n        setMediaSource: setMediaSource,\r\n        getMediaSource: getMediaSource,\r\n        getIsBufferingCompleted: getIsBufferingCompleted,\r\n        getIsAppendingInProgress: getIsAppendingInProgress,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nBufferController.__dashjs_factory_name = 'BufferController';\r\nlet factory = FactoryMaker.getClassFactory(BufferController);\r\nfactory.BUFFER_LOADED = BUFFER_LOADED;\r\nfactory.BUFFER_EMPTY = BUFFER_EMPTY;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport PlaybackController from '../controllers/PlaybackController.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport Debug from '../../core/Debug.js';\r\nimport EventBus from '../../core/EventBus.js';\r\n\r\nfunction EventController() {\r\n\r\n    const MPD_RELOAD_SCHEME = 'urn:mpeg:dash:event:2012';\r\n    const MPD_RELOAD_VALUE = 1;\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        inlineEvents, // Holds all Inline Events not triggered yet\r\n        inbandEvents, // Holds all Inband Events not triggered yet\r\n        activeEvents, // Holds all Events currently running\r\n        eventInterval, // variable holding the setInterval\r\n        refreshDelay, // refreshTime for the setInterval\r\n        presentationTimeThreshold,\r\n        manifestModel,\r\n        manifestUpdater,\r\n        playbackController,\r\n        isStarted;\r\n\r\n    function initialize() {\r\n        isStarted = false;\r\n        inlineEvents = {};\r\n        inbandEvents = {};\r\n        activeEvents = {};\r\n        eventInterval = null;\r\n        refreshDelay = 100;\r\n        presentationTimeThreshold = refreshDelay / 1000;\r\n        playbackController = PlaybackController(context).getInstance();\r\n    }\r\n\r\n    function clear() {\r\n        if (eventInterval !== null && isStarted) {\r\n            clearInterval(eventInterval);\r\n            eventInterval = null;\r\n            isStarted = false;\r\n        }\r\n    }\r\n\r\n    function start() {\r\n        log('Start Event Controller');\r\n        if (!isStarted && !isNaN(refreshDelay)) {\r\n            isStarted = true;\r\n            eventInterval = setInterval(onEventTimer, refreshDelay);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add events to the eventList. Events that are not in the mpd anymore but not triggered yet will still be deleted\r\n     * @param values\r\n     */\r\n    function addInlineEvents(values) {\r\n        inlineEvents = {};\r\n\r\n        if (values) {\r\n            for (var i = 0; i < values.length; i++) {\r\n                var event = values[i];\r\n                inlineEvents[event.id] = event;\r\n                log('Add inline event with id ' + event.id);\r\n            }\r\n        }\r\n        log('Added ' + values.length + ' inline events');\r\n    }\r\n\r\n    /**\r\n     * i.e. processing of any one event message box with the same id is sufficient\r\n     * @param values\r\n     */\r\n    function addInbandEvents(values) {\r\n        for (var i = 0; i < values.length; i++) {\r\n            var event = values[i];\r\n            if (!(event.id in inbandEvents)) {\r\n                inbandEvents[event.id] = event;\r\n                log('Add inband event with id ' + event.id);\r\n            } else {\r\n                log('Repeated event with id ' + event.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove events which are over from the list\r\n     */\r\n    function removeEvents() {\r\n        if (activeEvents) {\r\n            var currentVideoTime = playbackController.getTime();\r\n            var eventIds = Object.keys(activeEvents);\r\n\r\n            for (var i = 0; i < eventIds.length; i++) {\r\n                var eventId = eventIds[i];\r\n                var curr = activeEvents[eventId];\r\n                if (curr !== null && (curr.duration + curr.presentationTime) / curr.eventStream.timescale < currentVideoTime) {\r\n                    log('Remove Event ' + eventId + ' at time ' + currentVideoTime);\r\n                    curr = null;\r\n                    delete activeEvents[eventId];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Iterate through the eventList and trigger/remove the events\r\n     */\r\n    function onEventTimer() {\r\n        triggerEvents(inbandEvents);\r\n        triggerEvents(inlineEvents);\r\n        removeEvents();\r\n    }\r\n\r\n    function refreshManifest() {\r\n        var manifest = manifestModel.getValue();\r\n        var url = manifest.url;\r\n\r\n        if (manifest.hasOwnProperty('Location')) {\r\n            url = manifest.Location;\r\n        }\r\n        log('Refresh manifest @ ' + url);\r\n        manifestUpdater.getManifestLoader().load(url);\r\n    }\r\n\r\n    function triggerEvents(events) {\r\n        var currentVideoTime = playbackController.getTime();\r\n        var presentationTime;\r\n\r\n        /* == Trigger events that are ready == */\r\n        if (events) {\r\n            var eventIds = Object.keys(events);\r\n            for (var i = 0; i < eventIds.length; i++) {\r\n                var eventId = eventIds[i];\r\n                var curr = events[eventId];\r\n\r\n                if (curr !== undefined) {\r\n                    presentationTime = curr.presentationTime / curr.eventStream.timescale;\r\n                    if (presentationTime === 0 || (presentationTime <= currentVideoTime && presentationTime + presentationTimeThreshold > currentVideoTime)) {\r\n                        log('Start Event ' + eventId + ' at ' + currentVideoTime);\r\n                        if (curr.duration > 0) {\r\n                            activeEvents[eventId] = curr;\r\n                        }\r\n                        if (curr.eventStream.schemeIdUri == MPD_RELOAD_SCHEME && curr.eventStream.value == MPD_RELOAD_VALUE) {\r\n                            refreshManifest();\r\n                        } else {\r\n                            eventBus.trigger(curr.eventStream.schemeIdUri, {event: curr});\r\n                        }\r\n                        delete events[eventId];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.manifestModel) {\r\n            manifestModel = config.manifestModel;\r\n        }\r\n\r\n        if (config.manifestUpdater) {\r\n            manifestUpdater = config.manifestUpdater;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        clear();\r\n        inlineEvents = null;\r\n        inbandEvents = null;\r\n        activeEvents = null;\r\n        playbackController = null;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        addInlineEvents: addInlineEvents,\r\n        addInbandEvents: addInbandEvents,\r\n        clear: clear,\r\n        start: start,\r\n        setConfig: setConfig,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nEventController.__dashjs_factory_name = 'EventController';\r\nexport default FactoryMaker.getSingletonFactory(EventController);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport HTTPRequest from '../vo/metrics/HTTPRequest.js';\r\nimport DataChunk from '../vo/DataChunk.js';\r\nimport FragmentModel from '../models/FragmentModel.js';\r\nimport MetricsModel from '../models/MetricsModel.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport Debug from '../../core/Debug.js';\r\n\r\nfunction FragmentController(/*config*/) {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        fragmentModels;\r\n\r\n    function setup() {\r\n        fragmentModels = [];\r\n        eventBus.on(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, instance);\r\n    }\r\n\r\n    function process(bytes) {\r\n        var result = null;\r\n\r\n        if (bytes !== null && bytes !== undefined && bytes.byteLength > 0) {\r\n            result = new Uint8Array(bytes);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function getModel(scheduleController) {\r\n        if (!scheduleController) return null;\r\n        // Wrap the buffer controller into model and store it to track the loading state and execute the requests\r\n        var model = findModel(scheduleController);\r\n\r\n        if (!model) {\r\n            model = FragmentModel(context).create({metricsModel: MetricsModel(context).getInstance()});\r\n            model.setScheduleController(scheduleController);\r\n            fragmentModels.push(model);\r\n        }\r\n\r\n        return model;\r\n    }\r\n\r\n    function detachModel(model) {\r\n        var idx = fragmentModels.indexOf(model);\r\n        // If we have the model for the given buffer just remove it from array\r\n        if (idx > -1) {\r\n            fragmentModels.splice(idx, 1);\r\n        }\r\n    }\r\n\r\n    function isInitializationRequest(request) {\r\n        return (request && request.type && request.type === HTTPRequest.INIT_SEGMENT_TYPE);\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\r\n        fragmentModels = [];\r\n    }\r\n\r\n    function findModel(scheduleController) {\r\n        var ln = fragmentModels.length;\r\n        // We expect one-to-one relation between FragmentModel and context,\r\n        // so just compare the given context object with the one that stored in the model to find the model for it\r\n        for (var i = 0; i < ln; i++) {\r\n            if (fragmentModels[i].getScheduleController() == scheduleController) {\r\n                return fragmentModels[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function createDataChunk(bytes, request, streamId) {\r\n        var chunk = new DataChunk();\r\n\r\n        chunk.streamId = streamId;\r\n        chunk.mediaInfo = request.mediaInfo;\r\n        chunk.segmentType = request.type;\r\n        chunk.start = request.startTime;\r\n        chunk.duration = request.duration;\r\n        chunk.end = chunk.start + chunk.duration;\r\n        chunk.bytes = bytes;\r\n        chunk.index = request.index;\r\n        chunk.quality = request.quality;\r\n\r\n        return chunk;\r\n    }\r\n\r\n    function onFragmentLoadingCompleted(e) {\r\n        let scheduleController = e.sender.getScheduleController();\r\n        if (!findModel(scheduleController)) return;\r\n\r\n        let request = e.request;\r\n        let bytes = e.response;\r\n        let isInit = isInitializationRequest(request);\r\n        let streamId = scheduleController.getStreamProcessor().getStreamInfo().id;\r\n        let chunk;\r\n\r\n        if (!bytes) {\r\n            log('No ' + request.mediaType + ' bytes to push.');\r\n            return;\r\n        }\r\n\r\n        chunk = createDataChunk(bytes, request, streamId);\r\n        eventBus.trigger(isInit ? Events.INIT_FRAGMENT_LOADED : Events.MEDIA_FRAGMENT_LOADED, {chunk: chunk, fragmentModel: e.sender});\r\n    }\r\n\r\n    instance = {\r\n        process: process,\r\n        getModel: getModel,\r\n        detachModel: detachModel,\r\n        isInitializationRequest: isInitializationRequest,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nFragmentController.__dashjs_factory_name = 'FragmentController';\r\nexport default FactoryMaker.getClassFactory(FragmentController);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Events from '../../core/events/Events.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport Debug from '../../core/Debug.js';\r\nimport TextSourceBuffer from '../TextSourceBuffer.js';\r\nimport DOMStorage from '../utils/DOMStorage.js';\r\n\r\nconst TRACK_SWITCH_MODE_NEVER_REPLACE = 'neverReplace';\r\nconst TRACK_SWITCH_MODE_ALWAYS_REPLACE = 'alwaysReplace';\r\nconst TRACK_SELECTION_MODE_HIGHEST_BITRATE = 'highestBitrate';\r\nconst TRACK_SELECTION_MODE_WIDEST_RANGE = 'widestRange';\r\nconst DEFAULT_INIT_TRACK_SELECTION_MODE = TRACK_SELECTION_MODE_HIGHEST_BITRATE;\r\n\r\nfunction MediaController() {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n    let textSourceBuffer = TextSourceBuffer(context).getInstance();\r\n    let domStorage = DOMStorage(context).getInstance();\r\n\r\n    let instance,\r\n        tracks,\r\n        initialSettings,\r\n        selectionMode,\r\n        switchMode,\r\n        errHandler;\r\n\r\n    const validTrackSwitchModes = [\r\n        TRACK_SWITCH_MODE_ALWAYS_REPLACE,\r\n        TRACK_SWITCH_MODE_NEVER_REPLACE\r\n    ];\r\n\r\n    const validTrackSelectionModes = [\r\n        TRACK_SELECTION_MODE_HIGHEST_BITRATE,\r\n        TRACK_SELECTION_MODE_WIDEST_RANGE\r\n    ];\r\n\r\n    function initialize() {\r\n        tracks = {};\r\n        resetInitialSettings();\r\n        resetSwitchMode();\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @param streamInfo\r\n     * @memberof MediaController#\r\n     */\r\n    function checkInitialMediaSettingsForType(type, streamInfo) {\r\n        var settings = getInitialSettings(type);\r\n        var tracksForType = getTracksFor(type, streamInfo);\r\n        var tracks = [];\r\n\r\n        if (type === 'fragmentedText') {\r\n            // Choose the first track\r\n            setTrack(tracksForType[0]);\r\n            return;\r\n        }\r\n\r\n        if (!settings) {\r\n            settings = domStorage.getSavedMediaSettings(type);\r\n            setInitialSettings(type, settings);\r\n        }\r\n\r\n        if (!tracksForType || (tracksForType.length === 0)) return;\r\n\r\n        if (settings) {\r\n            tracksForType.forEach(function (track) {\r\n                if (matchSettings(settings, track)) {\r\n                    tracks.push(track);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (tracks.length === 0) {\r\n            setTrack(selectInitialTrack(tracksForType));\r\n        } else {\r\n            if (tracks.length > 1) {\r\n                setTrack(selectInitialTrack(tracks));\r\n            } else {\r\n                setTrack(tracks[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param track\r\n     * @returns {Boolean}\r\n     * @memberof MediaController#\r\n     */\r\n    function addTrack(track) {\r\n        var mediaType = track ? track.type : null;\r\n        var streamId = track ? track.streamInfo.id : null;\r\n        var initSettings = getInitialSettings(mediaType);\r\n\r\n        if (!track || (!isMultiTrackSupportedByType(mediaType))) return false;\r\n\r\n        tracks[streamId] = tracks[streamId] || createTrackInfo();\r\n\r\n        if (tracks[streamId][mediaType].list.indexOf(track) >= 0) return false;\r\n\r\n        tracks[streamId][mediaType].list.push(track);\r\n\r\n        if (initSettings && (matchSettings(initSettings, track)) && !getCurrentTrackFor(mediaType, track.streamInfo)) {\r\n            setTrack(track);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @param streamInfo\r\n     * @returns {Array}\r\n     * @memberof MediaController#\r\n     */\r\n    function getTracksFor(type, streamInfo) {\r\n        if (!type || !streamInfo) return [];\r\n\r\n        var id = streamInfo.id;\r\n\r\n        if (!tracks[id] || !tracks[id][type]) return [];\r\n\r\n        return tracks[id][type].list;\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @param streamInfo\r\n     * @returns {Object}\r\n     * @memberof MediaController#\r\n     */\r\n    function getCurrentTrackFor(type, streamInfo) {\r\n        if (!type || !streamInfo) return null;\r\n\r\n        return tracks[streamInfo.id][type].current;\r\n    }\r\n\r\n    /**\r\n     * @param track\r\n     * @returns {Boolean}\r\n     * @memberof MediaController#\r\n     */\r\n    function isCurrentTrack(track) {\r\n        var type = track.type;\r\n        var id = track.streamInfo.id;\r\n\r\n        return (tracks[id] && tracks[id][type] && isTracksEqual(tracks[id][type].current, track));\r\n    }\r\n\r\n    /**\r\n     * @param track\r\n     * @memberof MediaController#\r\n     */\r\n    function setTrack(track) {\r\n        if (!track) return;\r\n\r\n        var type = track.type;\r\n        var streamInfo = track.streamInfo;\r\n        var id = streamInfo.id;\r\n        var current = getCurrentTrackFor(type, streamInfo);\r\n\r\n        if (!tracks[id] || !tracks[id][type] || (current && isTracksEqual(track, current))) return;\r\n\r\n        tracks[id][type].current = track;\r\n\r\n        if (current) {\r\n            eventBus.trigger(Events.CURRENT_TRACK_CHANGED, {oldMediaInfo: current, newMediaInfo: track, switchMode: switchMode[type]});\r\n        }\r\n\r\n        var settings = extractSettings(track);\r\n\r\n        if (!settings || !tracks[id][type].storeLastSettings) return;\r\n\r\n        if (settings.roles) {\r\n            settings.role = settings.roles[0];\r\n            delete settings.roles;\r\n        }\r\n\r\n        if (settings.accessibility) {\r\n            settings.accessibility = settings.accessibility[0];\r\n        }\r\n\r\n        if (settings.audioChannelConfiguration) {\r\n            settings.audioChannelConfiguration = settings.audioChannelConfiguration[0];\r\n        }\r\n\r\n        domStorage.setSavedMediaSettings(type, settings);\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @param {Object}\r\n     * @memberof MediaController#\r\n     */\r\n    function setInitialSettings(type, value) {\r\n        if (!type || !value) return;\r\n\r\n        initialSettings[type] = value;\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @returns {Object}\r\n     * @memberof MediaController#\r\n     */\r\n    function getInitialSettings(type) {\r\n        if (!type) return null;\r\n\r\n        return initialSettings[type];\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @param mode\r\n     * @memberof MediaController#\r\n     */\r\n    function setSwitchMode(type, mode) {\r\n        const isModeSupported = (validTrackSwitchModes.indexOf(mode) !== -1);\r\n\r\n        if (!isModeSupported) {\r\n            log('track switch mode is not supported: ' + mode);\r\n            return;\r\n        }\r\n\r\n        switchMode[type] = mode;\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @returns mode\r\n     * @memberof MediaController#\r\n     */\r\n    function getSwitchMode(type) {\r\n        return switchMode[type];\r\n    }\r\n\r\n    /**\r\n     * @param mode\r\n     * @memberof MediaController#\r\n     */\r\n    function setSelectionModeForInitialTrack(mode) {\r\n        const isModeSupported = (validTrackSelectionModes.indexOf(mode) !== -1);\r\n\r\n        if (!isModeSupported) {\r\n            log('track selection mode is not supported: ' + mode);\r\n            return;\r\n        }\r\n        selectionMode = mode;\r\n    }\r\n\r\n    /**\r\n     * @returns mode\r\n     * @memberof MediaController#\r\n     */\r\n    function getSelectionModeForInitialTrack() {\r\n        return selectionMode || DEFAULT_INIT_TRACK_SELECTION_MODE;\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @returns {Boolean}\r\n     * @memberof MediaController#\r\n     */\r\n    function isMultiTrackSupportedByType(type) {\r\n        return (type === 'audio' || type === 'video' || type === 'text' || type === 'fragmentedText');\r\n    }\r\n\r\n    /**\r\n     * @param t1 first track to compare\r\n     * @param t2 second track to compare\r\n     * @returns {Boolean}\r\n     * @memberof MediaController#\r\n     */\r\n    function isTracksEqual(t1, t2) {\r\n        var sameId = t1.id === t2.id;\r\n        var sameViewpoint = t1.viewpoint === t2.viewpoint;\r\n        var sameLang = t1.lang === t2.lang;\r\n        var sameRoles = t1.roles.toString() == t2.roles.toString();\r\n        var sameAccessibility = t1.accessibility.toString() == t2.accessibility.toString();\r\n        var sameAudioChannelConfiguration = t1.audioChannelConfiguration.toString() == t2.audioChannelConfiguration.toString();\r\n\r\n        return (sameId && sameViewpoint && sameLang && sameRoles && sameAccessibility && sameAudioChannelConfiguration);\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.errHandler) {\r\n            errHandler = config.errHandler;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @memberof MediaController#\r\n     */\r\n    function reset() {\r\n        initialize();\r\n        textSourceBuffer.resetEmbedded();\r\n    }\r\n\r\n    function extractSettings(mediaInfo) {\r\n        var settings = {\r\n            lang: mediaInfo.lang,\r\n            viewpoint: mediaInfo.viewpoint,\r\n            roles: mediaInfo.roles,\r\n            accessibility: mediaInfo.accessibility,\r\n            audioChannelConfiguration: mediaInfo.audioChannelConfiguration\r\n        };\r\n        var notEmpty = settings.lang || settings.viewpoint || (settings.role && settings.role.length > 0) ||\r\n        (settings.accessibility && settings.accessibility.length > 0) || (settings.audioChannelConfiguration && settings.audioChannelConfiguration.length > 0);\r\n\r\n        return notEmpty ? settings : null;\r\n    }\r\n\r\n    function matchSettings(settings, track) {\r\n        var matchLang = !settings.lang || (settings.lang === track.lang);\r\n        var matchViewPoint = !settings.viewpoint || (settings.viewpoint === track.viewpoint);\r\n        var matchRole = !settings.role || !!track.roles.filter(function (item) {\r\n            return item === settings.role;\r\n        })[0];\r\n        var matchAccessibility = !settings.accessibility || !!track.accessibility.filter(function (item) {\r\n            return item === settings.accessibility;\r\n        })[0];\r\n        var matchAudioChannelConfiguration = !settings.audioChannelConfiguration || !!track.audioChannelConfiguration.filter(function (item) {\r\n            return item === settings.audioChannelConfiguration;\r\n        })[0];\r\n\r\n        return (matchLang && matchViewPoint && matchRole && matchAccessibility && matchAudioChannelConfiguration);\r\n    }\r\n\r\n    function resetSwitchMode() {\r\n        switchMode = {\r\n            audio: TRACK_SWITCH_MODE_ALWAYS_REPLACE,\r\n            video: TRACK_SWITCH_MODE_NEVER_REPLACE\r\n        };\r\n    }\r\n\r\n    function resetInitialSettings() {\r\n        initialSettings = {\r\n            audio: null,\r\n            video: null\r\n        };\r\n    }\r\n\r\n    function selectInitialTrack(tracks) {\r\n        var mode = getSelectionModeForInitialTrack();\r\n        var tmpArr = [];\r\n        var getTracksWithHighestBitrate = function (trackArr) {\r\n            var max = 0;\r\n            var result = [];\r\n            var tmp;\r\n\r\n            trackArr.forEach(function (track) {\r\n                tmp = Math.max.apply(Math, track.bitrateList.map(function (obj) { return obj.bandwidth; }));\r\n\r\n                if (tmp > max) {\r\n                    max = tmp;\r\n                    result = [track];\r\n                } else if (tmp === max) {\r\n                    result.push(track);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        };\r\n        var getTracksWithWidestRange = function (trackArr) {\r\n            var max = 0;\r\n            var result = [];\r\n            var tmp;\r\n\r\n            trackArr.forEach(function (track) {\r\n                tmp = track.representationCount;\r\n\r\n                if (tmp > max) {\r\n                    max = tmp;\r\n                    result = [track];\r\n                } else if (tmp === max) {\r\n                    result.push(track);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        };\r\n\r\n        switch (mode) {\r\n            case TRACK_SELECTION_MODE_HIGHEST_BITRATE:\r\n                tmpArr = getTracksWithHighestBitrate(tracks);\r\n\r\n                if (tmpArr.length > 1) {\r\n                    tmpArr = getTracksWithWidestRange(tmpArr);\r\n                }\r\n                break;\r\n            case TRACK_SELECTION_MODE_WIDEST_RANGE:\r\n                tmpArr = getTracksWithWidestRange(tracks);\r\n\r\n                if (tmpArr.length > 1) {\r\n                    tmpArr = getTracksWithHighestBitrate(tracks);\r\n                }\r\n                break;\r\n            default:\r\n                log('track selection mode is not supported: ' + mode);\r\n                break;\r\n        }\r\n\r\n        return tmpArr[0];\r\n    }\r\n\r\n    function createTrackInfo() {\r\n        return {\r\n            audio: {\r\n                list: [],\r\n                storeLastSettings: true,\r\n                current: null\r\n            },\r\n            video: {\r\n                list: [],\r\n                storeLastSettings: true,\r\n                current: null\r\n            },\r\n            text: {\r\n                list: [],\r\n                storeLastSettings: true,\r\n                current: null\r\n            },\r\n            fragmentedText: {\r\n                list: [],\r\n                storeLastSettings: true,\r\n                current: null\r\n            }\r\n        };\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        checkInitialMediaSettingsForType: checkInitialMediaSettingsForType,\r\n        addTrack: addTrack,\r\n        getTracksFor: getTracksFor,\r\n        getCurrentTrackFor: getCurrentTrackFor,\r\n        isCurrentTrack: isCurrentTrack,\r\n        setTrack: setTrack,\r\n        setInitialSettings: setInitialSettings,\r\n        getInitialSettings: getInitialSettings,\r\n        setSwitchMode: setSwitchMode,\r\n        getSwitchMode: getSwitchMode,\r\n        setSelectionModeForInitialTrack: setSelectionModeForInitialTrack,\r\n        getSelectionModeForInitialTrack: getSelectionModeForInitialTrack,\r\n        isMultiTrackSupportedByType: isMultiTrackSupportedByType,\r\n        isTracksEqual: isTracksEqual,\r\n        setConfig: setConfig,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMediaController.__dashjs_factory_name = 'MediaController';\r\nlet factory = FactoryMaker.getSingletonFactory(MediaController);\r\nfactory.TRACK_SWITCH_MODE_NEVER_REPLACE = TRACK_SWITCH_MODE_NEVER_REPLACE;\r\nfactory.TRACK_SWITCH_MODE_ALWAYS_REPLACE = TRACK_SWITCH_MODE_ALWAYS_REPLACE;\r\nfactory.TRACK_SELECTION_MODE_HIGHEST_BITRATE = TRACK_SELECTION_MODE_HIGHEST_BITRATE;\r\nfactory.TRACK_SELECTION_MODE_WIDEST_RANGE = TRACK_SELECTION_MODE_WIDEST_RANGE;\r\nfactory.DEFAULT_INIT_TRACK_SELECTION_MODE = DEFAULT_INIT_TRACK_SELECTION_MODE;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction MediaSourceController() {\r\n\r\n    let instance;\r\n\r\n    function createMediaSource() {\r\n\r\n        var hasWebKit = ('WebKitMediaSource' in window);\r\n        var hasMediaSource = ('MediaSource' in window);\r\n\r\n        if (hasMediaSource) {\r\n            return new MediaSource();\r\n        } else if (hasWebKit) {\r\n            return new WebKitMediaSource();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function attachMediaSource(source, videoModel) {\r\n\r\n        var objectURL = window.URL.createObjectURL(source);\r\n\r\n        videoModel.setSource(objectURL);\r\n\r\n        return objectURL;\r\n    }\r\n\r\n    function detachMediaSource(videoModel) {\r\n        videoModel.setSource(null);\r\n    }\r\n\r\n    function setDuration(source, value) {\r\n\r\n        if (source.duration != value)\r\n            source.duration = value;\r\n\r\n        return source.duration;\r\n    }\r\n\r\n    function signalEndOfStream(source) {\r\n\r\n        var buffers = source.sourceBuffers;\r\n        var ln = buffers.length;\r\n        var i = 0;\r\n\r\n        if (source.readyState !== 'open') return;\r\n\r\n        for (i; i < ln; i++) {\r\n            if (buffers[i].updating) return;\r\n            if (buffers[i].buffered.length === 0) return;\r\n        }\r\n\r\n        source.endOfStream();\r\n    }\r\n\r\n    instance = {\r\n        createMediaSource: createMediaSource,\r\n        attachMediaSource: attachMediaSource,\r\n        detachMediaSource: detachMediaSource,\r\n        setDuration: setDuration,\r\n        signalEndOfStream: signalEndOfStream\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMediaSourceController.__dashjs_factory_name = 'MediaSourceController';\r\nexport default FactoryMaker.getSingletonFactory(MediaSourceController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport BufferController from './BufferController.js';\r\nimport URIQueryAndFragmentModel from '../models/URIQueryAndFragmentModel.js';\r\nimport MediaPlayerModel from '../../streaming/models/MediaPlayerModel.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport Debug from '../../core/Debug.js';\r\n\r\nfunction PlaybackController() {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        element,\r\n        streamController,\r\n        timelineConverter,\r\n        metricsModel,\r\n        dashMetrics,\r\n        manifestModel,\r\n        dashManifestModel,\r\n        adapter,\r\n        videoModel,\r\n        currentTime,\r\n        liveStartTime,\r\n        wallclockTimeIntervalId,\r\n        commonEarliestTime,\r\n        streamInfo,\r\n        isDynamic,\r\n        mediaPlayerModel,\r\n        playOnceInitialized;\r\n\r\n    function setup() {\r\n        currentTime = 0;\r\n        liveStartTime = NaN;\r\n        wallclockTimeIntervalId = null;\r\n        isDynamic = null;\r\n        playOnceInitialized = false;\r\n        commonEarliestTime = {};\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n    }\r\n\r\n    function initialize(StreamInfo) {\r\n        streamInfo = StreamInfo;\r\n        element = videoModel.getElement();\r\n        addAllListeners();\r\n        isDynamic = streamInfo.manifestInfo.isDynamic;\r\n        liveStartTime = streamInfo.start;\r\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\r\n        eventBus.on(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);\r\n        eventBus.on(Events.BYTES_APPENDED, onBytesAppended, this);\r\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\r\n        eventBus.on(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, this);\r\n\r\n        if (playOnceInitialized) {\r\n            playOnceInitialized = false;\r\n            play();\r\n        }\r\n    }\r\n\r\n    function onPeriodSwitchStarted(e) {\r\n        if (e.fromStreamInfo && commonEarliestTime[e.fromStreamInfo.id]) {\r\n            delete commonEarliestTime[e.fromStreamInfo.id];\r\n        }\r\n    }\r\n\r\n    function getTimeToStreamEnd() {\r\n        return ((getStreamStartTime(true) + streamInfo.duration) - getTime());\r\n    }\r\n\r\n    function isPlaybackStarted() {\r\n        return getTime() > 0;\r\n    }\r\n\r\n    function getStreamId() {\r\n        return streamInfo.id;\r\n    }\r\n\r\n    function getStreamDuration() {\r\n        return streamInfo.duration;\r\n    }\r\n\r\n    function play() {\r\n        if (element) {\r\n            element.autoplay = true;\r\n            element.play();\r\n        } else {\r\n            playOnceInitialized = true;\r\n        }\r\n    }\r\n\r\n    function isPaused() {\r\n        if (!element) return;\r\n        return element.paused;\r\n    }\r\n\r\n    function pause() {\r\n        if (!element) return;\r\n        element.pause();\r\n        element.autoplay = false;\r\n    }\r\n\r\n    function isSeeking() {\r\n        if (!element) return;\r\n        return element.seeking;\r\n    }\r\n\r\n    function seek(time) {\r\n        if (!videoModel) return;\r\n        log('Requesting seek to time: ' + time);\r\n        videoModel.setCurrentTime(time);\r\n    }\r\n\r\n    function getTime() {\r\n        if (!element) return;\r\n        return element.currentTime;\r\n    }\r\n\r\n    function getPlaybackRate() {\r\n        if (!element) return;\r\n        return element.playbackRate;\r\n    }\r\n\r\n    function getPlayedRanges() {\r\n        if (!element) return;\r\n        return element.played;\r\n    }\r\n\r\n    function getEnded() {\r\n        if (!element) return;\r\n        return element.ended;\r\n    }\r\n\r\n    function getIsDynamic() {\r\n        return isDynamic;\r\n    }\r\n\r\n    function setLiveStartTime(value) {\r\n        liveStartTime = value;\r\n    }\r\n\r\n    function getLiveStartTime() {\r\n        return liveStartTime;\r\n    }\r\n\r\n    /**\r\n     * Computes the desirable delay for the live edge to avoid a risk of getting 404 when playing at the bleeding edge\r\n     * @returns {Number} object\r\n     * @memberof PlaybackController#\r\n     * */\r\n    function computeLiveDelay(fragmentDuration, dvrWindowSize) {\r\n        var mpd = dashManifestModel.getMpd(manifestModel.getValue());\r\n\r\n        let delay;\r\n        const END_OF_PLAYLIST_PADDING = 10;\r\n\r\n        if (mediaPlayerModel.getUseSuggestedPresentationDelay() && mpd.hasOwnProperty('suggestedPresentationDelay')) {\r\n            delay = mpd.suggestedPresentationDelay;\r\n        } else if (mediaPlayerModel.getLiveDelay()) {\r\n            delay = mediaPlayerModel.getLiveDelay(); // If set by user, this value takes precedence\r\n        } else if (!isNaN(fragmentDuration)) {\r\n            delay = fragmentDuration * mediaPlayerModel.getLiveDelayFragmentCount();\r\n        } else {\r\n            delay = streamInfo.manifestInfo.minBufferTime * 2;\r\n        }\r\n\r\n        // cap target latency to:\r\n        // - dvrWindowSize / 2 for short playlists\r\n        // - dvrWindowSize - END_OF_PLAYLIST_PADDING for longer playlists\r\n        let targetDelayCapping = Math.max(dvrWindowSize - END_OF_PLAYLIST_PADDING, dvrWindowSize / 2);\r\n\r\n        return Math.min(delay, targetDelayCapping);\r\n    }\r\n\r\n    function reset() {\r\n        if (videoModel && element) {\r\n            eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\r\n            eventBus.off(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\r\n            eventBus.off(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);\r\n            eventBus.off(Events.BYTES_APPENDED, onBytesAppended, this);\r\n            stopUpdatingWallclockTime();\r\n            removeAllListeners();\r\n        }\r\n        videoModel = null;\r\n        streamInfo = null;\r\n        element = null;\r\n        isDynamic = null;\r\n        setup();\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.streamController) {\r\n            streamController = config.streamController;\r\n        }\r\n        if (config.timelineConverter) {\r\n            timelineConverter = config.timelineConverter;\r\n        }\r\n        if (config.metricsModel) {\r\n            metricsModel = config.metricsModel;\r\n        }\r\n        if (config.dashMetrics) {\r\n            dashMetrics = config.dashMetrics;\r\n        }\r\n        if (config.manifestModel) {\r\n            manifestModel = config.manifestModel;\r\n        }\r\n        if (config.dashManifestModel) {\r\n            dashManifestModel = config.dashManifestModel;\r\n        }\r\n        if (config.adapter) {\r\n            adapter = config.adapter;\r\n        }\r\n        if (config.videoModel) {\r\n            videoModel = config.videoModel;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param streamInfo object\r\n     * @returns {Number} object\r\n     * @memberof PlaybackController#\r\n     */\r\n    function getStreamStartTime(ignoreStartOffset) {\r\n        let presentationStartTime;\r\n        let startTimeOffset = !ignoreStartOffset ? parseInt(URIQueryAndFragmentModel(context).getInstance().getURIFragmentData().s, 10) : NaN;\r\n\r\n        if (isDynamic) {\r\n            if (!isNaN(startTimeOffset) && startTimeOffset > 1262304000) {\r\n\r\n                presentationStartTime = startTimeOffset - (streamInfo.manifestInfo.availableFrom.getTime() / 1000);\r\n\r\n                if (presentationStartTime > liveStartTime ||\r\n                    presentationStartTime < (liveStartTime - streamInfo.manifestInfo.DVRWindowSize)) {\r\n                    presentationStartTime = null;\r\n                }\r\n            }\r\n            presentationStartTime = presentationStartTime || liveStartTime;\r\n\r\n        } else {\r\n            if (!isNaN(startTimeOffset) && startTimeOffset < Math.max(streamInfo.manifestInfo.duration, streamInfo.duration) && startTimeOffset >= 0) {\r\n                presentationStartTime = startTimeOffset;\r\n            } else {\r\n                let earliestTime = commonEarliestTime[streamInfo.id]; //set by ready bufferStart after first onBytesAppended\r\n                if (earliestTime === undefined) {\r\n                    earliestTime = streamController.getActiveStreamCommonEarliestTime(); //deal with calculated PST that is none 0 when streamInfo.start is 0\r\n                }\r\n                presentationStartTime = Math.max(earliestTime, streamInfo.start);\r\n            }\r\n        }\r\n\r\n        return presentationStartTime;\r\n    }\r\n\r\n    function getActualPresentationTime(currentTime) {\r\n        var metrics = metricsModel.getReadOnlyMetricsFor('video') || metricsModel.getReadOnlyMetricsFor('audio');\r\n        var DVRMetrics = dashMetrics.getCurrentDVRInfo(metrics);\r\n        var DVRWindow = DVRMetrics ? DVRMetrics.range : null;\r\n        var actualTime;\r\n\r\n        if (!DVRWindow) return NaN;\r\n\r\n        if ((currentTime >= DVRWindow.start) && (currentTime <= DVRWindow.end)) {\r\n            return currentTime;\r\n        }\r\n\r\n        actualTime = Math.max(DVRWindow.end - streamInfo.manifestInfo.minBufferTime * 2, DVRWindow.start);\r\n\r\n        return actualTime;\r\n    }\r\n\r\n    function startUpdatingWallclockTime() {\r\n        if (wallclockTimeIntervalId !== null) return;\r\n\r\n        var tick = function () {\r\n            onWallclockTime();\r\n        };\r\n\r\n        wallclockTimeIntervalId = setInterval(tick, mediaPlayerModel.getWallclockTimeUpdateInterval());\r\n    }\r\n\r\n    function stopUpdatingWallclockTime() {\r\n        clearInterval(wallclockTimeIntervalId);\r\n        wallclockTimeIntervalId = null;\r\n    }\r\n\r\n    function seekToStartTimeOffset() {\r\n        let initialSeekTime = getStreamStartTime(false);\r\n        if (initialSeekTime > 0) {\r\n            seek(initialSeekTime);\r\n            log('Starting playback at offset: ' + initialSeekTime);\r\n        }\r\n    }\r\n\r\n    function updateCurrentTime() {\r\n        if (isPaused() || !isDynamic || element.readyState === 0) return;\r\n        var currentTime = getTime();\r\n        var actualTime = getActualPresentationTime(currentTime);\r\n        var timeChanged = (!isNaN(actualTime) && actualTime !== currentTime);\r\n        if (timeChanged) {\r\n            seek(actualTime);\r\n        }\r\n    }\r\n\r\n    function onDataUpdateCompleted(e) {\r\n        if (e.error) return;\r\n\r\n        let representationInfo = adapter.convertDataToTrack(manifestModel.getValue(), e.currentRepresentation);\r\n        let info = representationInfo.mediaInfo.streamInfo;\r\n\r\n        if (streamInfo.id !== info.id) return;\r\n        streamInfo = info;\r\n\r\n        updateCurrentTime();\r\n    }\r\n\r\n    function onLiveEdgeSearchCompleted(e) {\r\n        //This is here to catch the case when live edge search takes longer than playback metadata\r\n        if (e.error || element.readyState === 0) return;\r\n        seekToStartTimeOffset();\r\n    }\r\n\r\n    function onCanPlay() {\r\n        eventBus.trigger(Events.CAN_PLAY);\r\n    }\r\n\r\n    function onPlaybackStart() {\r\n        log('Native video element event: play');\r\n        updateCurrentTime();\r\n        startUpdatingWallclockTime();\r\n        eventBus.trigger(Events.PLAYBACK_STARTED, {startTime: getTime()});\r\n    }\r\n\r\n    function onPlaybackPlaying() {\r\n        log('Native video element event: playing');\r\n        eventBus.trigger(Events.PLAYBACK_PLAYING, {playingTime: getTime()});\r\n    }\r\n\r\n    function onPlaybackPaused() {\r\n        log('Native video element event: pause');\r\n        eventBus.trigger(Events.PLAYBACK_PAUSED, {ended: getEnded()});\r\n    }\r\n\r\n    function onPlaybackSeeking() {\r\n        let seekTime = getTime();\r\n        log('Seeking to: ' + seekTime);\r\n        startUpdatingWallclockTime();\r\n        eventBus.trigger(Events.PLAYBACK_SEEKING, {seekTime: seekTime});\r\n    }\r\n\r\n    function onPlaybackSeeked() {\r\n        log('Native video element event: seeked');\r\n        eventBus.trigger(Events.PLAYBACK_SEEKED);\r\n    }\r\n\r\n    function onPlaybackTimeUpdated() {\r\n        //log(\"Native video element event: timeupdate\");\r\n        var time = getTime();\r\n        if (time === currentTime) return;\r\n        currentTime = time;\r\n        eventBus.trigger(Events.PLAYBACK_TIME_UPDATED, {timeToEnd: getTimeToStreamEnd(), time: time});\r\n    }\r\n\r\n    function onPlaybackProgress() {\r\n        //log(\"Native video element event: progress\");\r\n        eventBus.trigger(Events.PLAYBACK_PROGRESS);\r\n    }\r\n\r\n    function onPlaybackRateChanged() {\r\n        var rate = getPlaybackRate();\r\n        log('Native video element event: ratechange: ', rate);\r\n        eventBus.trigger(Events.PLAYBACK_RATE_CHANGED, { playbackRate: rate });\r\n    }\r\n\r\n    function onPlaybackMetaDataLoaded() {\r\n        log('Native video element event: loadedmetadata');\r\n        if ((!isDynamic && streamInfo.isFirst) || timelineConverter.isTimeSyncCompleted()) {\r\n            seekToStartTimeOffset();\r\n        }\r\n        eventBus.trigger(Events.PLAYBACK_METADATA_LOADED);\r\n        startUpdatingWallclockTime();\r\n    }\r\n\r\n    function onPlaybackEnded() {\r\n        log('Native video element event: ended');\r\n        pause();\r\n        stopUpdatingWallclockTime();\r\n        eventBus.trigger(Events.PLAYBACK_ENDED);\r\n    }\r\n\r\n    function onPlaybackError(event) {\r\n        let target = event.target || event.srcElement;\r\n        eventBus.trigger(Events.PLAYBACK_ERROR, {error: target.error});\r\n    }\r\n\r\n    function onWallclockTime() {\r\n        eventBus.trigger(Events.WALLCLOCK_TIME_UPDATED, {isDynamic: isDynamic, time: new Date()});\r\n    }\r\n\r\n    function onBytesAppended(e) {\r\n        let ranges = e.bufferedRanges;\r\n        if (!ranges || !ranges.length) return;\r\n        let bufferedStart = Math.max(ranges.start(0), streamInfo.start);\r\n        //let earliestTime = commonEarliestTime[streamInfo.id] === undefined ? bufferedStart : Math.max(commonEarliestTime[streamInfo.id], bufferedStart);\r\n        let earliestTime = commonEarliestTime[streamInfo.id] === undefined ? bufferedStart : Math.min(commonEarliestTime[streamInfo.id], bufferedStart);\r\n        if (earliestTime === commonEarliestTime[streamInfo.id]) return;\r\n        if (!isDynamic  && getStreamStartTime(true) < earliestTime) {\r\n            seek(earliestTime);\r\n        }\r\n        commonEarliestTime[streamInfo.id] = earliestTime;\r\n    }\r\n\r\n    function onBufferLevelStateChanged(e) {\r\n        // do not stall playback when get an event from Stream that is not active\r\n        if (e.streamInfo.id !== streamInfo.id) return;\r\n        videoModel.setStallState(e.mediaType, e.state === BufferController.BUFFER_EMPTY);\r\n    }\r\n\r\n    function addAllListeners() {\r\n        element.addEventListener('canplay', onCanPlay);\r\n        element.addEventListener('play', onPlaybackStart);\r\n        element.addEventListener('playing', onPlaybackPlaying);\r\n        element.addEventListener('pause', onPlaybackPaused);\r\n        element.addEventListener('error', onPlaybackError);\r\n        element.addEventListener('seeking', onPlaybackSeeking);\r\n        element.addEventListener('seeked', onPlaybackSeeked);\r\n        element.addEventListener('timeupdate', onPlaybackTimeUpdated);\r\n        element.addEventListener('progress', onPlaybackProgress);\r\n        element.addEventListener('ratechange', onPlaybackRateChanged);\r\n        element.addEventListener('loadedmetadata', onPlaybackMetaDataLoaded);\r\n        element.addEventListener('ended', onPlaybackEnded);\r\n    }\r\n\r\n    function removeAllListeners() {\r\n        element.removeEventListener('canplay', onCanPlay);\r\n        element.removeEventListener('play', onPlaybackStart);\r\n        element.removeEventListener('playing', onPlaybackPlaying);\r\n        element.removeEventListener('pause', onPlaybackPaused);\r\n        element.removeEventListener('error', onPlaybackError);\r\n        element.removeEventListener('seeking', onPlaybackSeeking);\r\n        element.removeEventListener('seeked', onPlaybackSeeked);\r\n        element.removeEventListener('timeupdate', onPlaybackTimeUpdated);\r\n        element.removeEventListener('progress', onPlaybackProgress);\r\n        element.removeEventListener('ratechange', onPlaybackRateChanged);\r\n        element.removeEventListener('loadedmetadata', onPlaybackMetaDataLoaded);\r\n        element.removeEventListener('ended', onPlaybackEnded);\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        setConfig: setConfig,\r\n        getStreamStartTime: getStreamStartTime,\r\n        getTimeToStreamEnd: getTimeToStreamEnd,\r\n        isPlaybackStarted: isPlaybackStarted,\r\n        getStreamId: getStreamId,\r\n        getStreamDuration: getStreamDuration,\r\n        getTime: getTime,\r\n        getPlaybackRate: getPlaybackRate,\r\n        getPlayedRanges: getPlayedRanges,\r\n        getEnded: getEnded,\r\n        getIsDynamic: getIsDynamic,\r\n        setLiveStartTime: setLiveStartTime,\r\n        getLiveStartTime: getLiveStartTime,\r\n        computeLiveDelay: computeLiveDelay,\r\n        play: play,\r\n        isPaused: isPaused,\r\n        pause: pause,\r\n        isSeeking: isSeeking,\r\n        seek: seek,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nPlaybackController.__dashjs_factory_name = 'PlaybackController';\r\nexport default FactoryMaker.getSingletonFactory(PlaybackController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport PlayList from '../vo/metrics/PlayList.js';\r\nimport PlaybackController from './PlaybackController.js';\r\nimport AbrController from './AbrController.js';\r\nimport BufferController from './BufferController.js';\r\nimport BufferLevelRule from '../rules/scheduling/BufferLevelRule.js';\r\nimport NextFragmentRequestRule from '../rules/scheduling/NextFragmentRequestRule.js';\r\nimport TextSourceBuffer from '../TextSourceBuffer.js';\r\nimport MetricsModel from '../models/MetricsModel.js';\r\nimport DashMetrics from '../../dash/DashMetrics.js';\r\nimport DashAdapter from '../../dash/DashAdapter.js';\r\nimport SourceBufferController from '../controllers/SourceBufferController.js';\r\nimport VirtualBuffer from '../VirtualBuffer.js';\r\nimport LiveEdgeFinder from '../utils/LiveEdgeFinder.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport Debug from '../../core/Debug.js';\r\n\r\nfunction ScheduleController(config) {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let metricsModel = config.metricsModel;\r\n    let manifestModel = config.manifestModel;\r\n    let adapter = config.adapter;\r\n    let dashMetrics = config.dashMetrics;\r\n    let dashManifestModel = config.dashManifestModel;\r\n    let timelineConverter = config.timelineConverter;\r\n    let mediaPlayerModel = config.mediaPlayerModel;\r\n\r\n    let instance,\r\n        type,\r\n        ready,\r\n        fragmentModel,\r\n        isDynamic,\r\n        currentRepresentationInfo,\r\n        initialPlayback,\r\n        isStopped,\r\n        playListMetrics,\r\n        playListTraceMetrics,\r\n        playListTraceMetricsClosed,\r\n        isFragmentLoading,\r\n        timeToLoadDelay,\r\n        validateTimeout,\r\n        seekTarget,\r\n        playbackController,\r\n        abrController,\r\n        streamProcessor,\r\n        fragmentController,\r\n        liveEdgeFinder,\r\n        bufferController,\r\n        bufferLevelRule,\r\n        nextFragmentRequestRule,\r\n        scheduleWhilePaused;\r\n\r\n\r\n    function setup() {\r\n        initialPlayback = true;\r\n        isStopped = false;\r\n        playListMetrics = null;\r\n        playListTraceMetrics = null;\r\n        playListTraceMetricsClosed = true;\r\n        isFragmentLoading = false;\r\n        timeToLoadDelay = 0;\r\n        seekTarget = NaN;\r\n    }\r\n\r\n    function initialize(Type, StreamProcessor) {\r\n        type = Type;\r\n        streamProcessor = StreamProcessor;\r\n        liveEdgeFinder = LiveEdgeFinder(context).getInstance();\r\n        playbackController = PlaybackController(context).getInstance();\r\n        abrController = AbrController(context).getInstance();\r\n        fragmentController = streamProcessor.getFragmentController();\r\n        bufferController = streamProcessor.getBufferController();\r\n        fragmentModel = fragmentController.getModel(this);\r\n        isDynamic = streamProcessor.isDynamic();\r\n        scheduleWhilePaused = mediaPlayerModel.getScheduleWhilePaused();\r\n\r\n        bufferLevelRule = BufferLevelRule(context).create({\r\n            dashMetrics: DashMetrics(context).getInstance(),\r\n            metricsModel: MetricsModel(context).getInstance(),\r\n            textSourceBuffer: TextSourceBuffer(context).getInstance()\r\n        });\r\n\r\n        nextFragmentRequestRule = NextFragmentRequestRule(context).create({\r\n            adapter: DashAdapter(context).getInstance(),\r\n            sourceBufferController: SourceBufferController(context).getInstance(),\r\n            virtualBuffer: VirtualBuffer(context).getInstance(),\r\n            textSourceBuffer: TextSourceBuffer(context).getInstance()\r\n\r\n        });\r\n\r\n\r\n        if (dashManifestModel.getIsTextTrack(type)) {\r\n            eventBus.on(Events.TIMED_TEXT_REQUESTED, onTimedTextRequested, this);\r\n        }\r\n\r\n        eventBus.on(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);\r\n        eventBus.on(Events.QUALITY_CHANGED, onQualityChanged, this);\r\n        eventBus.on(Events.DATA_UPDATE_STARTED, onDataUpdateStarted, this);\r\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\r\n        eventBus.on(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\r\n        eventBus.on(Events.STREAM_COMPLETED, onStreamCompleted, this);\r\n        eventBus.on(Events.STREAM_INITIALIZED, onStreamInitialized, this);\r\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\r\n        eventBus.on(Events.BUFFER_CLEARED, onBufferCleared, this);\r\n        eventBus.on(Events.BYTES_APPENDED, onBytesAppended, this);\r\n        eventBus.on(Events.INIT_REQUESTED, onInitRequested, this);\r\n        eventBus.on(Events.QUOTA_EXCEEDED, onQuotaExceeded, this);\r\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\r\n        eventBus.on(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\r\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\r\n        eventBus.on(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\r\n        eventBus.on(Events.URL_RESOLUTION_FAILED, onURLResolutionFailed, this);\r\n    }\r\n\r\n    function clearPlayListTraceMetrics(endTime, stopreason) {\r\n        var duration = 0;\r\n        var startTime = null;\r\n\r\n        if (playListMetrics && playListTraceMetricsClosed === false) {\r\n            startTime = playListTraceMetrics.start;\r\n            duration = endTime.getTime() - startTime.getTime();\r\n\r\n            playListTraceMetrics.duration = duration;\r\n            playListTraceMetrics.stopreason = stopreason;\r\n\r\n            playListMetrics.trace.push(playListTraceMetrics);\r\n\r\n            playListTraceMetricsClosed = true;\r\n        }\r\n    }\r\n\r\n    function start() {\r\n        if (!ready) return;\r\n        addPlaylistTraceMetrics();\r\n        isStopped = false;\r\n\r\n        if (initialPlayback) {\r\n            getInitRequest(currentRepresentationInfo.quality);\r\n        } else {\r\n            //Validate will be first called after the init segment is appended. But in the case where we stop and start\r\n            //the ScheduleController E.g dateUpdate on manifest refresh for live streams. we need to start validate again.\r\n            validate();\r\n        }\r\n\r\n        if (initialPlayback) {\r\n            initialPlayback = false;\r\n        }\r\n        log('Schedule controller starting for ' + type);\r\n    }\r\n\r\n\r\n\r\n    function stop() {\r\n        if (isStopped) return;\r\n        isStopped = true;\r\n        clearInterval(validateTimeout);\r\n        log('Schedule controller stopping for ' + type);\r\n    }\r\n\r\n    function getInitRequest(quality) {\r\n        var request = adapter.getInitRequest(streamProcessor, quality);\r\n\r\n        if (request !== null) {\r\n            fragmentModel.executeRequest(request);\r\n        }\r\n\r\n        return request;\r\n    }\r\n\r\n    function replaceCanceledRequests(canceledRequests) {\r\n        var ln = canceledRequests.length;\r\n        // EPSILON is used to avoid javascript floating point issue, e.g. if request.startTime = 19.2,\r\n        // request.duration = 3.83, than request.startTime + request.startTime = 19.2 + 1.92 = 21.119999999999997\r\n        var EPSILON = 0.1;\r\n        var request,\r\n            time,\r\n            i;\r\n\r\n        for (i = 0; i < ln; i++) {\r\n            request = canceledRequests[i];\r\n            time = request.startTime + (request.duration / 2) + EPSILON;\r\n            request = adapter.getFragmentRequestForTime(streamProcessor, currentRepresentationInfo, time, {timeThreshold: 0, ignoreIsFinished: true});\r\n            if (request) {\r\n                fragmentModel.executeRequest(request);\r\n            }\r\n        }\r\n    }\r\n\r\n    function validate() {\r\n        if (isStopped || playbackController.isPaused() && !scheduleWhilePaused) return;\r\n        //log(\"validating\", type);\r\n        let readyToLoad = bufferLevelRule.execute(streamProcessor);\r\n        if (readyToLoad && !isFragmentLoading &&\r\n            (dashManifestModel.getIsTextTrack(type) || !bufferController.getIsAppendingInProgress())) {\r\n            isFragmentLoading = true;\r\n\r\n            const getNextFragment = function () {\r\n                let request = nextFragmentRequestRule.execute(streamProcessor);\r\n                if (request) {\r\n                    fragmentModel.executeRequest(request); // we load\r\n                } else {\r\n                    isFragmentLoading = false;\r\n                    startValidateTimer(1000); //we loop\r\n                }\r\n            };\r\n            //Run ABR rules - let it callback to getNextFragment once it is done running.\r\n            abrController.getPlaybackQuality(streamProcessor,  getNextFragment);\r\n\r\n        } else {\r\n            startValidateTimer(1000); //we loop\r\n        }\r\n    }\r\n\r\n    function startValidateTimer(value) {\r\n        validateTimeout = setTimeout(validate, value);\r\n    }\r\n\r\n    function onQualityChanged(e) {\r\n        if (type !== e.mediaType || streamProcessor.getStreamInfo().id !== e.streamInfo.id) return;\r\n\r\n        currentRepresentationInfo = streamProcessor.getRepresentationInfoForQuality(e.newQuality);\r\n        if (currentRepresentationInfo === null || currentRepresentationInfo === undefined) {\r\n            throw 'Unexpected error! - currentRepresentationInfo is null or undefined';\r\n        }\r\n\r\n        clearPlayListTraceMetrics(new Date(), PlayList.Trace.REPRESENTATION_SWITCH_STOP_REASON);\r\n        addPlaylistTraceMetrics();\r\n    }\r\n\r\n    function onDataUpdateCompleted(e) {\r\n        if (e.error) return;\r\n        currentRepresentationInfo = adapter.convertDataToTrack(manifestModel.getValue(), e.currentRepresentation);\r\n    }\r\n\r\n    function onStreamInitialized(e) {\r\n        if (e.error) return;\r\n\r\n        currentRepresentationInfo = streamProcessor.getCurrentRepresentationInfo();\r\n\r\n        if (!isDynamic || liveEdgeFinder.getLiveEdge() !== null) {\r\n            ready = true;\r\n        }\r\n\r\n        start();\r\n    }\r\n\r\n    function onStreamCompleted(e) {\r\n        if (e.fragmentModel !== fragmentModel) return;\r\n        stop();\r\n        log('Stream is complete');\r\n    }\r\n\r\n    function onFragmentLoadingCompleted(e) {\r\n        if (e.sender !== fragmentModel) return;\r\n\r\n        if (!isNaN(e.request.index)) {\r\n            isFragmentLoading = false;\r\n        }\r\n\r\n        if (e.error && e.serviceLocation && !isStopped) {\r\n            replaceCanceledRequests([e.request]);\r\n        }\r\n    }\r\n\r\n    function onBytesAppended(e) {\r\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\r\n        validate();\r\n    }\r\n\r\n    function onDataUpdateStarted(e) {\r\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\r\n        stop();\r\n    }\r\n\r\n    function onInitRequested(e) {\r\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\r\n\r\n        getInitRequest(e.requiredQuality);\r\n    }\r\n\r\n    function onBufferCleared(e) {\r\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\r\n        // after the data has been removed from the buffer we should remove the requests from the list of\r\n        // the executed requests for which playback time is inside the time interval that has been removed from the buffer\r\n        fragmentModel.removeExecutedRequestsBeforeTime(e.to);\r\n\r\n        if (e.hasEnoughSpaceToAppend && !bufferController.getIsBufferingCompleted()) {\r\n            start();\r\n        }\r\n    }\r\n\r\n    function onBufferLevelStateChanged(e) {\r\n        if ((e.sender.getStreamProcessor() === streamProcessor) && e.state === BufferController.BUFFER_EMPTY && !playbackController.isSeeking()) {\r\n            log('Stalling Buffer');\r\n            clearPlayListTraceMetrics(new Date(), PlayList.Trace.REBUFFERING_REASON);\r\n        }\r\n    }\r\n\r\n    function onQuotaExceeded(e) {\r\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\r\n        stop();\r\n    }\r\n\r\n    function onURLResolutionFailed() {\r\n        fragmentModel.abortRequests();\r\n        stop();\r\n    }\r\n\r\n    function addPlaylistTraceMetrics() {\r\n        if (playListMetrics && playListTraceMetricsClosed === true && currentRepresentationInfo) {\r\n            playListTraceMetricsClosed = false;\r\n\r\n            playListTraceMetrics = new PlayList.Trace();\r\n            playListTraceMetrics.representationid = currentRepresentationInfo.id;\r\n            playListTraceMetrics.start = new Date();\r\n            playListTraceMetrics.mstart = playbackController.getTime() * 1000;\r\n            playListTraceMetrics.playbackspeed = playbackController.getPlaybackRate().toString();\r\n        }\r\n    }\r\n\r\n    function onTimedTextRequested(e) {\r\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\r\n        getInitRequest(e.index);\r\n    }\r\n\r\n    function onPlaybackStarted() {\r\n        start();\r\n    }\r\n\r\n    function onPlaybackSeeking(e) {\r\n\r\n        seekTarget = e.seekTime;\r\n\r\n        if (!initialPlayback) {\r\n            isFragmentLoading = false;\r\n        }\r\n        if (isStopped) {\r\n            start();\r\n        }\r\n\r\n        let metrics = metricsModel.getMetricsFor('stream');\r\n        let manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(metrics);\r\n        let latency = currentRepresentationInfo.DVRWindow ? currentRepresentationInfo.DVRWindow.end - playbackController.getTime() : NaN;\r\n        metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {latency: latency});\r\n    }\r\n\r\n    function onPlaybackRateChanged(e) {\r\n        if (playListTraceMetrics) {\r\n            playListTraceMetrics.playbackspeed = e.playbackRate.toString();\r\n        }\r\n    }\r\n\r\n    function onLiveEdgeSearchCompleted (e) {\r\n        if (e.error) return;\r\n\r\n        let liveEdgeTime = e.liveEdge;\r\n        let manifestInfo = currentRepresentationInfo.mediaInfo.streamInfo.manifestInfo;\r\n        let startTime = liveEdgeTime - playbackController.computeLiveDelay(currentRepresentationInfo.fragmentDuration, manifestInfo.DVRWindowSize / 2);\r\n        let metrics = metricsModel.getMetricsFor('stream');\r\n        let manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(metrics);\r\n        let currentLiveStart = playbackController.getLiveStartTime();\r\n\r\n        let request,\r\n            actualStartTime;\r\n\r\n        // get a request for a start time\r\n        request = adapter.getFragmentRequestForTime(streamProcessor, currentRepresentationInfo, startTime, {ignoreIsFinished: true});\r\n        actualStartTime = request.startTime;\r\n        seekTarget = actualStartTime; //Setting seekTarget will allow NextFragmentRequestRule's first request time to be accurate.\r\n        if (isNaN(currentLiveStart) || (actualStartTime > currentLiveStart)) {\r\n            playbackController.setLiveStartTime(actualStartTime);\r\n        }\r\n\r\n        metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {currentTime: actualStartTime, presentationStartTime: liveEdgeTime, latency: liveEdgeTime - actualStartTime, clientTimeOffset: timelineConverter.getClientTimeOffset()});\r\n        ready = true;\r\n        start();\r\n    }\r\n\r\n    function getSeekTarget() {\r\n        return seekTarget;\r\n    }\r\n\r\n    function setSeekTarget(value) {\r\n        seekTarget = value;\r\n    }\r\n\r\n    function getFragmentModel() {\r\n        return fragmentModel;\r\n    }\r\n\r\n    function setTimeToLoadDelay(value) {\r\n        timeToLoadDelay = value;\r\n    }\r\n\r\n    function getTimeToLoadDelay() {\r\n        return timeToLoadDelay;\r\n    }\r\n\r\n    function getStreamProcessor() {\r\n        return streamProcessor;\r\n    }\r\n\r\n    function setPlayList(playList) {\r\n        playListMetrics = playList;\r\n    }\r\n\r\n    function finalisePlayList(time, reason) {\r\n        clearPlayListTraceMetrics(time, reason);\r\n        playListMetrics = null;\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);\r\n        eventBus.off(Events.DATA_UPDATE_STARTED, onDataUpdateStarted, this);\r\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\r\n        eventBus.off(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\r\n        eventBus.off(Events.QUALITY_CHANGED, onQualityChanged, this);\r\n        eventBus.off(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\r\n        eventBus.off(Events.STREAM_COMPLETED, onStreamCompleted, this);\r\n        eventBus.off(Events.STREAM_INITIALIZED, onStreamInitialized, this);\r\n        eventBus.off(Events.QUOTA_EXCEEDED, onQuotaExceeded, this);\r\n        eventBus.off(Events.BYTES_APPENDED, onBytesAppended, this);\r\n        eventBus.off(Events.BUFFER_CLEARED, onBufferCleared, this);\r\n        eventBus.off(Events.INIT_REQUESTED, onInitRequested, this);\r\n        eventBus.off(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\r\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\r\n        eventBus.off(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\r\n        eventBus.off(Events.URL_RESOLUTION_FAILED, onURLResolutionFailed, this);\r\n\r\n        if (dashManifestModel.getIsTextTrack(type)) {\r\n            eventBus.off(Events.TIMED_TEXT_REQUESTED, onTimedTextRequested, this);\r\n        }\r\n\r\n        stop();\r\n        fragmentController.detachModel(fragmentModel);\r\n        isFragmentLoading = false;\r\n        timeToLoadDelay = 0;\r\n        seekTarget = NaN;\r\n        playbackController = null;\r\n        playListMetrics = null;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        getStreamProcessor: getStreamProcessor,\r\n        getSeekTarget: getSeekTarget,\r\n        setSeekTarget: setSeekTarget,\r\n        getFragmentModel: getFragmentModel,\r\n        setTimeToLoadDelay: setTimeToLoadDelay,\r\n        getTimeToLoadDelay: getTimeToLoadDelay,\r\n        replaceCanceledRequests: replaceCanceledRequests,\r\n        start: start,\r\n        stop: stop,\r\n        reset: reset,\r\n        setPlayList: setPlayList,\r\n        finalisePlayList: finalisePlayList\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nScheduleController.__dashjs_factory_name = 'ScheduleController';\r\nexport default FactoryMaker.getClassFactory(ScheduleController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport TextSourceBuffer from '../TextSourceBuffer.js';\r\nimport MediaController from './MediaController.js';\r\nimport DashAdapter from '../../dash/DashAdapter.js';\r\nimport ErrorHandler from '../utils/ErrorHandler.js';\r\nimport StreamController from './StreamController.js';\r\nimport TextTracks from '../TextTracks.js';\r\nimport VTTParser from '../utils/VTTParser.js';\r\nimport TTMLParser from '../utils/TTMLParser.js';\r\nimport VideoModel from '../models/VideoModel.js';\r\nimport Error from '../vo/Error.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\n\r\nconst QUOTA_EXCEEDED_ERROR_CODE = 22;\r\n\r\nfunction SourceBufferController() {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        dashManifestModel;\r\n\r\n    function createSourceBuffer(mediaSource, mediaInfo) {\r\n\r\n        var codec = mediaInfo.codec;\r\n        var buffer = null;\r\n\r\n        try {\r\n            // Safari claims to support anything starting 'application/mp4'.\r\n            // it definitely doesn't understand 'application/mp4;codecs=\"stpp\"'\r\n            // - currently no browser does, so check for it and use our own\r\n            // implementation. The same is true for codecs=\"wvtt\".\r\n            if (codec.match(/application\\/mp4;\\s*codecs=\"(stpp|wvtt)\"/i)) {\r\n                throw new Error('not really supported');\r\n            }\r\n\r\n            buffer = mediaSource.addSourceBuffer(codec);\r\n\r\n        } catch (ex) {\r\n            if ((mediaInfo.isText) || (codec.indexOf('codecs=\"stpp\"') !== -1) ||  (codec.indexOf('codecs=\"wvtt\"') !== -1) ) {\r\n                buffer = TextSourceBuffer(context).getInstance();\r\n                buffer.setConfig({\r\n                    errHandler: ErrorHandler(context).getInstance(),\r\n                    adapter: DashAdapter(context).getInstance(),\r\n                    dashManifestModel: dashManifestModel,\r\n                    mediaController: MediaController(context).getInstance(),\r\n                    videoModel: VideoModel(context).getInstance(),\r\n                    streamController: StreamController(context).getInstance(),\r\n                    textTracks: TextTracks(context).getInstance(),\r\n                    VTTParser: VTTParser(context).getInstance(),\r\n                    TTMLParser: TTMLParser(context).getInstance()\r\n\r\n                });\r\n            } else {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        return buffer;\r\n    }\r\n\r\n    function removeSourceBuffer(mediaSource, buffer) {\r\n        try {\r\n            mediaSource.removeSourceBuffer(buffer);\r\n        } catch (ex) {\r\n        }\r\n    }\r\n\r\n    function getBufferRange(buffer, time, tolerance) {\r\n        var ranges = null;\r\n        var start = 0;\r\n        var end = 0;\r\n        var firstStart = null;\r\n        var lastEnd = null;\r\n        var gap = 0;\r\n\r\n        var len,\r\n            i;\r\n\r\n        var toler = (tolerance || 0.15);\r\n\r\n        try {\r\n            ranges = buffer.buffered;\r\n        } catch (ex) {\r\n            return null;\r\n        }\r\n\r\n        if (ranges !== null && ranges !== undefined) {\r\n            for (i = 0, len = ranges.length; i < len; i++) {\r\n                start = ranges.start(i);\r\n                end = ranges.end(i);\r\n                if (firstStart === null) {\r\n                    gap = Math.abs(start - time);\r\n                    if (time >= start && time < end) {\r\n                        // start the range\r\n                        firstStart = start;\r\n                        lastEnd = end;\r\n                    } else if (gap <= toler) {\r\n                        // start the range even though the buffer does not contain time 0\r\n                        firstStart = start;\r\n                        lastEnd = end;\r\n                    }\r\n                } else {\r\n                    gap = start - lastEnd;\r\n                    if (gap <= toler) {\r\n                        // the discontinuity is smaller than the tolerance, combine the ranges\r\n                        lastEnd = end;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (firstStart !== null) {\r\n                return {start: firstStart, end: lastEnd};\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getAllRanges(buffer) {\r\n        var ranges = null;\r\n\r\n        try {\r\n            ranges = buffer.buffered;\r\n            return ranges;\r\n        } catch (ex) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getTotalBufferedTime(buffer) {\r\n        var ranges = getAllRanges(buffer);\r\n        var totalBufferedTime = 0;\r\n        var ln,\r\n            i;\r\n\r\n        if (!ranges) return totalBufferedTime;\r\n\r\n        for (i = 0, ln = ranges.length; i < ln; i++) {\r\n            totalBufferedTime += ranges.end(i) - ranges.start(i);\r\n        }\r\n\r\n        return totalBufferedTime;\r\n    }\r\n\r\n    function getBufferLength(buffer, time, tolerance) {\r\n\r\n        var range,\r\n            length;\r\n\r\n        range = getBufferRange(buffer, time, tolerance);\r\n\r\n        if (range === null) {\r\n            length = 0;\r\n        } else {\r\n            length = range.end - time;\r\n        }\r\n\r\n        return length;\r\n    }\r\n\r\n    function getRangeDifference(currentRanges, buffer) {\r\n        if (!buffer) return null;\r\n\r\n        //TODO we may need to look for a more elegant and robust method\r\n        // The logic below checks that is the difference between currentRanges and actual SourceBuffer ranges\r\n\r\n        var newRanges = getAllRanges(buffer);\r\n        var newStart,\r\n            newEnd,\r\n            equalStart,\r\n            equalEnd,\r\n            currentRange,\r\n            nextCurrentRange,\r\n            nextNewRange,\r\n            hasRange,\r\n            diff;\r\n\r\n        if (!newRanges) return null;\r\n\r\n        for (var i = 0, ln = newRanges.length; i < ln; i++) {\r\n            hasRange = currentRanges.length > i;\r\n            currentRange = hasRange ? {start: currentRanges.start(i), end: currentRanges.end(i)} : null;\r\n            newStart = newRanges.start(i);\r\n            newEnd = newRanges.end(i);\r\n\r\n            // if there is no range with the same index it means that a new range has been added. This range is\r\n            // the difference we are looking for\r\n            // Example\r\n            // current ranges\r\n            // 0|---range1---|4  8|--range2--|12\r\n            // new ranges\r\n            // 0|---range1---|4| 8|--range2--|12  16|--range3--|20\r\n\r\n            if (!currentRange) {\r\n                diff = {start: newStart, end: newEnd};\r\n                return diff;\r\n            }\r\n\r\n            equalStart = currentRange.start === newStart;\r\n            equalEnd = currentRange.end === newEnd;\r\n\r\n            // if ranges are equal do nothing here and go the next ranges\r\n            if (equalStart && equalEnd) continue;\r\n\r\n            // start or/and end of the range has been changed\r\n            if (equalStart) {\r\n                diff = {start: currentRange.end, end: newEnd};\r\n            } else if (equalEnd) {\r\n                diff = {start: newStart, end: currentRange.start};\r\n            } else {\r\n                // new range has been added before the current one\r\n                diff = {start: newStart, end: newEnd};\r\n                return diff;\r\n            }\r\n\r\n            // if there is next current range but no next new range (it it is not equal the next current range) it means\r\n            // that the ranges have been merged\r\n            // Example 1\r\n            // current ranges\r\n            // 0|---range1---|4  8|--range2--|12  16|---range3---|\r\n            // new ranges\r\n            // 0|-----------range1-----------|12  16|---range3--|\r\n            nextCurrentRange = currentRanges.length > (i + 1) ? {start: currentRanges.start(i + 1), end: currentRanges.end(i + 1)} : null;\r\n            nextNewRange = (i + 1) < ln ? {start: newRanges.start(i + 1), end: newRanges.end(i + 1)} : null;\r\n\r\n            if (nextCurrentRange && (!nextNewRange || (nextNewRange.start !== nextCurrentRange.start || nextNewRange.end !== nextCurrentRange.end))) {\r\n                diff.end = nextCurrentRange.start;\r\n            }\r\n\r\n            return diff;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function append(buffer, chunk) {\r\n        var bytes = chunk.bytes;\r\n        var appendMethod = ('append' in buffer) ? 'append' : (('appendBuffer' in buffer) ? 'appendBuffer' : null);\r\n        // our user-defined sourcebuffer-like object has Object as its\r\n        // prototype whereas built-in SourceBuffers will have something\r\n        // more sensible. do not pass chunk to built-in append.\r\n        var acceptsChunk = Object.prototype.toString.call(buffer).slice(8, -1) === 'Object';\r\n\r\n        if (!appendMethod) return;\r\n\r\n        try {\r\n            waitForUpdateEnd(buffer, function () {\r\n                if (acceptsChunk) {\r\n                    // chunk.start is used in calculations by TextSourceBuffer\r\n                    buffer[appendMethod](bytes, chunk);\r\n                } else {\r\n                    buffer[appendMethod](bytes);\r\n                }\r\n                // updating is in progress, we should wait for it to complete before signaling that this operation is done\r\n                waitForUpdateEnd(buffer, function () {\r\n                    eventBus.trigger(Events.SOURCEBUFFER_APPEND_COMPLETED, {buffer: buffer, bytes: bytes});\r\n                });\r\n            });\r\n        } catch (err) {\r\n            eventBus.trigger(Events.SOURCEBUFFER_APPEND_COMPLETED, {buffer: buffer, bytes: bytes, error: new Error(err.code, err.message, null)});\r\n        }\r\n    }\r\n\r\n    function remove(buffer, start, end, mediaSource) {\r\n\r\n        try {\r\n            // make sure that the given time range is correct. Otherwise we will get InvalidAccessError\r\n            waitForUpdateEnd(buffer, function () {\r\n                if ((start >= 0) && (end > start) && (mediaSource.readyState !== 'ended')) {\r\n                    buffer.remove(start, end);\r\n                }\r\n                // updating is in progress, we should wait for it to complete before signaling that this operation is done\r\n                waitForUpdateEnd(buffer, function () {\r\n                    eventBus.trigger(Events.SOURCEBUFFER_REMOVE_COMPLETED, {buffer: buffer, from: start, to: end});\r\n                });\r\n            });\r\n        } catch (err) {\r\n            eventBus.trigger(Events.SOURCEBUFFER_REMOVE_COMPLETED, {buffer: buffer, from: start, to: end, error: new Error(err.code, err.message, null)});\r\n        }\r\n    }\r\n\r\n    function abort(mediaSource, buffer) {\r\n        try {\r\n            if (mediaSource.readyState === 'open') {\r\n                buffer.abort();\r\n            }\r\n        } catch (ex) {\r\n        }\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.dashManifestModel) {\r\n            dashManifestModel = config.dashManifestModel;\r\n        }\r\n    }\r\n\r\n    function waitForUpdateEnd(buffer, callback) {\r\n        var intervalId;\r\n        var CHECK_INTERVAL = 50;\r\n\r\n        var checkIsUpdateEnded = function () {\r\n            // if updating is still in progress do nothing and wait for the next check again.\r\n            if (buffer.updating) return;\r\n            // updating is completed, now we can stop checking and resolve the promise\r\n            clearInterval(intervalId);\r\n            callback();\r\n        };\r\n\r\n        var updateEndHandler = function () {\r\n            if (buffer.updating) return;\r\n\r\n            buffer.removeEventListener('updateend', updateEndHandler, false);\r\n            callback();\r\n        };\r\n\r\n        if (!buffer.updating) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        // use updateend event if possible\r\n        if (typeof buffer.addEventListener === 'function') {\r\n            try {\r\n                buffer.addEventListener('updateend', updateEndHandler, false);\r\n            } catch (err) {\r\n                // use setInterval to periodically check if updating has been completed\r\n                intervalId = setInterval(checkIsUpdateEnded, CHECK_INTERVAL);\r\n            }\r\n        } else {\r\n            // use setInterval to periodically check if updating has been completed\r\n            intervalId = setInterval(checkIsUpdateEnded, CHECK_INTERVAL);\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        append: append,\r\n        remove: remove,\r\n        abort: abort,\r\n        createSourceBuffer: createSourceBuffer,\r\n        removeSourceBuffer: removeSourceBuffer,\r\n        getBufferRange: getBufferRange,\r\n        getAllRanges: getAllRanges,\r\n        getTotalBufferedTime: getTotalBufferedTime,\r\n        getBufferLength: getBufferLength,\r\n        getRangeDifference: getRangeDifference,\r\n        setConfig: setConfig\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nSourceBufferController.__dashjs_factory_name = 'SourceBufferController';\r\nlet factory = FactoryMaker.getSingletonFactory(SourceBufferController);\r\nfactory.QUOTA_EXCEEDED_ERROR_CODE = QUOTA_EXCEEDED_ERROR_CODE;\r\nexport default factory;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport PlaybackController from './PlaybackController.js';\r\nimport Stream from '../Stream.js';\r\nimport ManifestUpdater from '../ManifestUpdater.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport URIQueryAndFragmentModel from '../models/URIQueryAndFragmentModel.js';\r\nimport VideoModel from '../models/VideoModel.js';\r\nimport MediaPlayerModel from '../models/MediaPlayerModel.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport PlayList from '../vo/metrics/PlayList.js';\r\nimport Debug from '../../core/Debug.js';\r\n\r\nfunction StreamController() {\r\n\r\n    const STREAM_END_THRESHOLD = 1.0;\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        capabilities,\r\n        manifestUpdater,\r\n        manifestLoader,\r\n        manifestModel,\r\n        dashManifestModel,\r\n        adapter,\r\n        metricsModel,\r\n        dashMetrics,\r\n        liveEdgeFinder,\r\n        mediaSourceController,\r\n        timeSyncController,\r\n        baseURLController,\r\n        virtualBuffer,\r\n        errHandler,\r\n        timelineConverter,\r\n        streams,\r\n        activeStream,\r\n        protectionController,\r\n        protectionData,\r\n        autoPlay,\r\n        isStreamSwitchingInProgress,\r\n        isUpdating,\r\n        hasMediaError,\r\n        hasInitialisationError,\r\n        mediaSource,\r\n        videoModel,\r\n        playbackController,\r\n        mediaPlayerModel,\r\n        isPaused,\r\n        initialPlayback,\r\n        playListMetrics;\r\n\r\n    function setup() {\r\n        protectionController = null;\r\n        streams = [];\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n        autoPlay = true;\r\n        isStreamSwitchingInProgress = false;\r\n        isUpdating = false;\r\n        isPaused = false;\r\n        initialPlayback = true;\r\n        playListMetrics = null;\r\n        hasMediaError = false;\r\n        hasInitialisationError = false;\r\n    }\r\n\r\n    function initialize(autoPl, protData) {\r\n        autoPlay = autoPl;\r\n        protectionData = protData;\r\n        timelineConverter.initialize();\r\n\r\n        manifestUpdater = ManifestUpdater(context).getInstance();\r\n        manifestUpdater.setConfig({\r\n            log: log,\r\n            manifestModel: manifestModel,\r\n            dashManifestModel: dashManifestModel\r\n        });\r\n        manifestUpdater.initialize(manifestLoader);\r\n\r\n        videoModel = VideoModel(context).getInstance();\r\n        playbackController = PlaybackController(context).getInstance();\r\n        playbackController.setConfig({\r\n            streamController: instance,\r\n            timelineConverter: timelineConverter,\r\n            metricsModel: metricsModel,\r\n            dashMetrics: dashMetrics,\r\n            manifestModel: manifestModel,\r\n            dashManifestModel: dashManifestModel,\r\n            adapter: adapter,\r\n            videoModel: videoModel\r\n        });\r\n\r\n        eventBus.on(Events.TIME_SYNCHRONIZATION_COMPLETED, onTimeSyncCompleted, this);\r\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\r\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackTimeUpdated, this);\r\n        eventBus.on(Events.PLAYBACK_ENDED, onEnded, this);\r\n        eventBus.on(Events.PLAYBACK_ERROR, onPlaybackError, this);\r\n        eventBus.on(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\r\n        eventBus.on(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\r\n        eventBus.on(Events.MANIFEST_UPDATED, onManifestUpdated, this);\r\n        eventBus.on(Events.STREAM_BUFFERING_COMPLETED, onStreamBufferingCompleted, this);\r\n    }\r\n\r\n    function flushPlaylistMetrics(reason, time) {\r\n        time = time || new Date();\r\n\r\n        if (playListMetrics) {\r\n            if (activeStream) {\r\n                activeStream.getProcessors().forEach(p => {\r\n                    var ctrlr = p.getScheduleController();\r\n                    if (ctrlr) {\r\n                        ctrlr.finalisePlayList(\r\n                            time,\r\n                            reason\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n\r\n            metricsModel.addPlayList(playListMetrics);\r\n\r\n            playListMetrics = null;\r\n        }\r\n    }\r\n\r\n    function addPlaylistMetrics(startReason) {\r\n        playListMetrics = new PlayList();\r\n        playListMetrics.start = new Date();\r\n        playListMetrics.mstart = playbackController.getTime() * 1000;\r\n        playListMetrics.starttype = startReason;\r\n\r\n        if (activeStream) {\r\n            activeStream.getProcessors().forEach(p => {\r\n                var ctrlr = p.getScheduleController();\r\n                if (ctrlr) {\r\n                    ctrlr.setPlayList(playListMetrics);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /*\r\n     * StreamController aggregates all streams defined in the manifest file\r\n     * and implements corresponding logic to switch between them.\r\n     */\r\n    function fireSwitchEvent(eventType, fromStream, toStream) {\r\n        eventBus.trigger(eventType, {fromStreamInfo: fromStream ? fromStream.getStreamInfo() : null, toStreamInfo: toStream.getStreamInfo()});\r\n    }\r\n\r\n    function startAutoPlay() {\r\n        if (!activeStream.isActivated() || !initialPlayback) return;\r\n        // only first stream must be played automatically during playback initialization\r\n        if (activeStream.getStreamInfo().index === 0) {\r\n            activeStream.startEventController();\r\n            if (autoPlay) {\r\n                playbackController.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    function onPlaybackError(e) {\r\n        var code = e.error ? e.error.code : 0;\r\n        var msg = '';\r\n\r\n        if (code === -1) {\r\n            // not an error!\r\n            return;\r\n        }\r\n\r\n        switch (code) {\r\n            case 1:\r\n                msg = 'MEDIA_ERR_ABORTED';\r\n                break;\r\n            case 2:\r\n                msg = 'MEDIA_ERR_NETWORK';\r\n                break;\r\n            case 3:\r\n                msg = 'MEDIA_ERR_DECODE';\r\n                break;\r\n            case 4:\r\n                msg = 'MEDIA_ERR_SRC_NOT_SUPPORTED';\r\n                break;\r\n            case 5:\r\n                msg = 'MEDIA_ERR_ENCRYPTED';\r\n                break;\r\n            default:\r\n                msg = 'UNKNOWN';\r\n                break;\r\n        }\r\n\r\n        hasMediaError = true;\r\n\r\n        if (e.error.msExtendedCode) {\r\n            msg += ' (0x' + (e.error.msExtendedCode >>> 0).toString(16).toUpperCase() + ')';\r\n        }\r\n\r\n        log('Video Element Error: ' + msg);\r\n        if (e.error) {\r\n            log(e.error);\r\n        }\r\n        errHandler.mediaSourceError(msg);\r\n        reset();\r\n    }\r\n\r\n    /*\r\n     * Called when current playback position is changed.\r\n     * Used to determine the time current stream is finished and we should switch to the next stream.\r\n     */\r\n    function onPlaybackTimeUpdated(e) {\r\n        var playbackQuality = videoModel.getPlaybackQuality();\r\n        if (playbackQuality) {\r\n            metricsModel.addDroppedFrames('video', playbackQuality);\r\n        }\r\n\r\n        // Sometimes after seeking timeUpdateHandler is called before seekingHandler and a new stream starts\r\n        // from beginning instead of from a chosen position. So we do nothing if the player is in the seeking state\r\n        if (playbackController.isSeeking()) return;\r\n\r\n        // check if stream end is reached\r\n        if (e.timeToEnd < STREAM_END_THRESHOLD) {\r\n            mediaSourceController.signalEndOfStream(mediaSource);\r\n        }\r\n    }\r\n\r\n    function onEnded() {\r\n\r\n        let nextStream = getNextStream();\r\n\r\n        if (nextStream) {\r\n            switchStream(activeStream, nextStream, NaN);\r\n        }\r\n\r\n        flushPlaylistMetrics(nextStream ? PlayList.Trace.END_OF_PERIOD_STOP_REASON : PlayList.Trace.END_OF_CONTENT_STOP_REASON);\r\n    }\r\n\r\n    function onPlaybackSeeking(e) {\r\n        var seekingStream = getStreamForTime(e.seekTime);\r\n\r\n        if (seekingStream && seekingStream !== activeStream) {\r\n            flushPlaylistMetrics(PlayList.Trace.END_OF_PERIOD_STOP_REASON);\r\n            switchStream(activeStream, seekingStream, e.seekTime);\r\n        } else {\r\n            flushPlaylistMetrics(PlayList.Trace.USER_REQUEST_STOP_REASON);\r\n        }\r\n\r\n        addPlaylistMetrics(PlayList.SEEK_START_REASON);\r\n    }\r\n\r\n    function onPlaybackStarted(/*e*/) {\r\n        if (initialPlayback) {\r\n            initialPlayback = false;\r\n            addPlaylistMetrics(PlayList.INITIAL_PLAYOUT_START_REASON);\r\n        } else {\r\n            if (isPaused) {\r\n                isPaused = false;\r\n                addPlaylistMetrics(PlayList.RESUME_FROM_PAUSE_START_REASON);\r\n            }\r\n        }\r\n    }\r\n\r\n    function onPlaybackPaused(e) {\r\n        if (!e.ended) {\r\n            isPaused = true;\r\n            flushPlaylistMetrics(PlayList.Trace.USER_REQUEST_STOP_REASON);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Handles the current stream buffering end moment to start the next stream buffering\r\n     * Removing MP logic from this for now, we removing the complexity of buffering into next period for now.\r\n     * this handler's logic caused Firefox and Safari to not period switch since the end event did not fire due to this.\r\n     */\r\n    function onStreamBufferingCompleted(e) {\r\n        //var nextStream = getNextStream();\r\n        var isLast = e.streamInfo.isLast;\r\n\r\n        if (mediaSource && isLast) {\r\n            mediaSourceController.signalEndOfStream(mediaSource);\r\n        }\r\n        //if (!nextStream) return;\r\n        //nextStream.activate(mediaSource);\r\n    }\r\n\r\n\r\n    function getNextStream() {\r\n        var start = activeStream.getStreamInfo().start;\r\n        var duration = activeStream.getStreamInfo().duration;\r\n\r\n        return streams.filter(function (stream) {\r\n            return (stream.getStreamInfo().start === (start + duration));\r\n        })[0];\r\n    }\r\n\r\n    function getStreamForTime(time) {\r\n        var duration = 0;\r\n        var stream = null;\r\n\r\n        var ln = streams.length;\r\n\r\n        if (ln > 0) {\r\n            duration += streams[0].getStartTime();\r\n        }\r\n\r\n        for (var i = 0; i < ln; i++) {\r\n            stream = streams[i];\r\n            duration += stream.getDuration();\r\n\r\n            if (time < duration) {\r\n                return stream;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Returns a playhead time, in seconds, converted to be relative\r\n     * to the start of an identified stream/period or null if no such stream\r\n     */\r\n    function getTimeRelativeToStreamId(time, id) {\r\n        var stream = null;\r\n        var baseStart = 0;\r\n        var streamStart = 0;\r\n        var streamDur = null;\r\n\r\n        var ln = streams.length;\r\n\r\n        for (var i = 0; i < ln; i++) {\r\n            stream = streams[i];\r\n            streamStart = stream.getStartTime();\r\n            streamDur = stream.getDuration();\r\n\r\n            // use start time, if not undefined or NaN or similar\r\n            if (Number.isFinite(streamStart)) {\r\n                baseStart = streamStart;\r\n            }\r\n\r\n            if (stream.getId() === id) {\r\n                return time - baseStart;\r\n            } else {\r\n                // use duration if not undefined or NaN or similar\r\n                if (Number.isFinite(streamDur)) {\r\n                    baseStart += streamDur;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getActiveStreamCommonEarliestTime() {\r\n        let commonEarliestTime = [];\r\n        activeStream.getProcessors().forEach(p => {\r\n            commonEarliestTime.push(p.getIndexHandler().getEarliestTime());\r\n        });\r\n        return Math.min.apply( Math, commonEarliestTime);\r\n    }\r\n\r\n    function switchStream(from, to, seekTime) {\r\n\r\n        if (isStreamSwitchingInProgress || !from || !to || from === to) return;\r\n\r\n        isStreamSwitchingInProgress = true;\r\n        fireSwitchEvent(Events.PERIOD_SWITCH_STARTED, from, to);\r\n\r\n        function onMediaSourceReady() {\r\n            if (!isNaN(seekTime)) {\r\n                playbackController.seek(seekTime); //we only need to call seek here, IndexHandlerTime was set from seeking event\r\n            } else {\r\n                let startTime = playbackController.getStreamStartTime(true);\r\n                activeStream.getProcessors().forEach(p => {\r\n                    adapter.setIndexHandlerTime(p, startTime);\r\n                });\r\n                playbackController.seek(startTime); //seek to period start time\r\n            }\r\n            playbackController.play();\r\n            activeStream.startEventController();\r\n            isStreamSwitchingInProgress = false;\r\n            fireSwitchEvent(Events.PERIOD_SWITCH_COMPLETED, from, to);\r\n        }\r\n\r\n        from.deactivate();\r\n        activeStream = to;\r\n        playbackController.initialize(activeStream.getStreamInfo());\r\n        setupMediaSource(onMediaSourceReady);\r\n    }\r\n\r\n    function setupMediaSource(callback) {\r\n\r\n        let sourceUrl;\r\n\r\n        function onMediaSourceOpen() {\r\n            log('MediaSource is open!');\r\n\r\n            window.URL.revokeObjectURL(sourceUrl);\r\n            mediaSource.removeEventListener('sourceopen', onMediaSourceOpen);\r\n            mediaSource.removeEventListener('webkitsourceopen', onMediaSourceOpen);\r\n            setMediaDuration();\r\n            activeStream.activate(mediaSource);\r\n\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n\r\n        if (!mediaSource) {\r\n            mediaSource = mediaSourceController.createMediaSource();\r\n        } else {\r\n            mediaSourceController.detachMediaSource(videoModel);\r\n        }\r\n\r\n        mediaSource.addEventListener('sourceopen', onMediaSourceOpen, false);\r\n        mediaSource.addEventListener('webkitsourceopen', onMediaSourceOpen, false);\r\n        sourceUrl = mediaSourceController.attachMediaSource(mediaSource, videoModel);\r\n        log('MediaSource attached to element.  Waiting on open...');\r\n    }\r\n\r\n    function setMediaDuration() {\r\n        var manifestDuration,\r\n            mediaDuration;\r\n\r\n        manifestDuration = activeStream.getStreamInfo().manifestInfo.duration;\r\n        mediaDuration = mediaSourceController.setDuration(mediaSource, manifestDuration);\r\n        log('Duration successfully set to: ' + mediaDuration);\r\n    }\r\n\r\n    function composeStreams() {\r\n        var manifest = manifestModel.getValue();\r\n        var metrics = metricsModel.getMetricsFor('stream');\r\n        var manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(metrics);\r\n        var remainingStreams = [];\r\n        var streamInfo,\r\n            pLen,\r\n            sLen,\r\n            pIdx,\r\n            sIdx,\r\n            streamsInfo,\r\n            stream;\r\n\r\n        if (!manifest) return;\r\n\r\n        streamsInfo = adapter.getStreamsInfo(manifest);\r\n        if ( protectionController) {\r\n            eventBus.trigger(Events.PROTECTION_CREATED, {controller: protectionController, manifest: manifest});\r\n            protectionController.setMediaElement(videoModel.getElement());\r\n            if (protectionData) {\r\n                protectionController.setProtectionData(protectionData);\r\n            }\r\n        }\r\n\r\n        try {\r\n            if (streamsInfo.length === 0) {\r\n                throw new Error('There are no streams');\r\n            }\r\n\r\n            metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {\r\n                currentTime: playbackController.getTime(),\r\n                buffered: videoModel.getElement().buffered,\r\n                presentationStartTime: streamsInfo[0].start,\r\n                clientTimeOffset: timelineConverter.getClientTimeOffset()\r\n            });\r\n\r\n            isUpdating = true;\r\n\r\n            for (pIdx = 0, pLen = streamsInfo.length; pIdx < pLen; pIdx++) {\r\n                streamInfo = streamsInfo[pIdx];\r\n                for (sIdx = 0, sLen = streams.length; sIdx < sLen; sIdx++) {\r\n                    // If the stream already exists we just need to update the values we got from the updated manifest\r\n                    if (streams[sIdx].getId() === streamInfo.id) {\r\n                        stream = streams[sIdx];\r\n                        remainingStreams.push(stream);\r\n                        stream.updateData(streamInfo);\r\n                    }\r\n                }\r\n                // If the Stream object does not exist we probably loaded the manifest the first time or it was\r\n                // introduced in the updated manifest, so we need to create a new Stream and perform all the initialization operations\r\n                if (!stream) {\r\n\r\n                    stream = Stream(context).create({\r\n                        manifestModel: manifestModel,\r\n                        manifestUpdater: manifestUpdater,\r\n                        adapter: adapter,\r\n                        timelineConverter: timelineConverter,\r\n                        capabilities: capabilities,\r\n                        errHandler: errHandler,\r\n                        baseURLController: baseURLController\r\n                    });\r\n                    stream.initialize(streamInfo, protectionController);\r\n\r\n                    eventBus.on(Events.STREAM_INITIALIZED, onStreamInitialized, this);\r\n                    remainingStreams.push(stream);\r\n\r\n                    if (activeStream) {\r\n                        stream.updateData(streamInfo);\r\n                    }\r\n                }\r\n                metricsModel.addManifestUpdateStreamInfo(manifestUpdateInfo, streamInfo.id, streamInfo.index, streamInfo.start, streamInfo.duration);\r\n                stream = null;\r\n            }\r\n\r\n            streams = remainingStreams;\r\n\r\n            // If the active stream has not been set up yet, let it be the first Stream in the list\r\n            if (!activeStream) {\r\n                activeStream = streams[0];\r\n                fireSwitchEvent(Events.PERIOD_SWITCH_STARTED, null, activeStream);\r\n                playbackController.initialize(activeStream.getStreamInfo());\r\n                fireSwitchEvent(Events.PERIOD_SWITCH_COMPLETED, null, activeStream);\r\n            }\r\n\r\n            if (!mediaSource) {\r\n                setupMediaSource();\r\n            }\r\n\r\n            isUpdating = false;\r\n            checkIfUpdateCompleted();\r\n        } catch (e) {\r\n            errHandler.manifestError(e.message, 'nostreamscomposed', manifest);\r\n            hasInitialisationError = true;\r\n            reset();\r\n        }\r\n    }\r\n\r\n    function checkIfUpdateCompleted() {\r\n        if (isUpdating) return;\r\n\r\n        var ln = streams.length;\r\n        var i = 0;\r\n\r\n\r\n        startAutoPlay();\r\n\r\n        for (i; i < ln; i++) {\r\n            if (!streams[i].isInitialized()) return;\r\n        }\r\n\r\n        eventBus.trigger(Events.STREAMS_COMPOSED);\r\n\r\n    }\r\n\r\n    function onStreamInitialized(/*e*/) {\r\n        checkIfUpdateCompleted();\r\n    }\r\n\r\n    function onTimeSyncCompleted(/*e*/) {\r\n        composeStreams();\r\n    }\r\n\r\n    function onManifestUpdated(e) {\r\n        if (!e.error) {\r\n            //Since streams are not composed yet , need to manually look up useCalculatedLiveEdgeTime to detect if stream\r\n            //is SegmentTimeline to avoid using time source\r\n            var manifest = e.manifest;\r\n            var streamInfo = adapter.getStreamsInfo(manifest)[0];\r\n            var mediaInfo = (\r\n                adapter.getMediaInfoForType(manifest, streamInfo, 'video') ||\r\n                    adapter.getMediaInfoForType(manifest, streamInfo, 'audio')\r\n            );\r\n\r\n            var adaptation,\r\n                useCalculatedLiveEdgeTime;\r\n\r\n            if (mediaInfo) {\r\n                adaptation = adapter.getDataForMedia(mediaInfo);\r\n                useCalculatedLiveEdgeTime = dashManifestModel.getRepresentationsForAdaptation(manifest, adaptation)[0].useCalculatedLiveEdgeTime;\r\n\r\n                if (useCalculatedLiveEdgeTime) {\r\n                    log('SegmentTimeline detected using calculated Live Edge Time');\r\n                    mediaPlayerModel.setUseManifestDateHeaderTimeSource(false);\r\n                }\r\n            }\r\n\r\n            var manifestUTCTimingSources = dashManifestModel.getUTCTimingSources(e.manifest);\r\n            var allUTCTimingSources = (!dashManifestModel.getIsDynamic(manifest) || useCalculatedLiveEdgeTime) ? manifestUTCTimingSources : manifestUTCTimingSources.concat(mediaPlayerModel.getUTCTimingSources());\r\n            var isHTTPS = URIQueryAndFragmentModel(context).getInstance().isManifestHTTPS();\r\n\r\n            //If https is detected on manifest then lets apply that protocol to only the default time source(s). In the future we may find the need to apply this to more then just default so left code at this level instead of in MediaPlayer.\r\n            allUTCTimingSources.forEach(function (item) {\r\n                if (item.value.replace(/.*?:\\/\\//g, '') === MediaPlayerModel.DEFAULT_UTC_TIMING_SOURCE.value.replace(/.*?:\\/\\//g, '')) {\r\n                    item.value = item.value.replace(isHTTPS ? new RegExp(/^(http:)?\\/\\//i) : new RegExp(/^(https:)?\\/\\//i), isHTTPS ? 'https://' : 'http://');\r\n                    log('Matching default timing source protocol to manifest protocol: ' , item.value);\r\n                }\r\n            });\r\n\r\n            baseURLController.initialize(manifest);\r\n\r\n            timeSyncController.setConfig({\r\n                metricsModel: metricsModel,\r\n                dashMetrics: dashMetrics\r\n            });\r\n            timeSyncController.initialize(allUTCTimingSources, mediaPlayerModel.getUseManifestDateHeaderTimeSource());\r\n        } else {\r\n            hasInitialisationError = true;\r\n            reset();\r\n        }\r\n    }\r\n\r\n    function getAutoPlay() {\r\n        return autoPlay;\r\n    }\r\n\r\n    function getActiveStreamInfo() {\r\n        return activeStream ? activeStream.getStreamInfo() : null;\r\n    }\r\n\r\n    function isStreamActive(streamInfo) {\r\n        return (activeStream.getId() === streamInfo.id);\r\n    }\r\n\r\n    function getStreamById(id) {\r\n        return streams.filter(function (item) {\r\n            return item.getId() === id;\r\n        })[0];\r\n    }\r\n\r\n    function load(url) {\r\n        manifestLoader.load(url);\r\n    }\r\n\r\n    function loadWithManifest(manifest) {\r\n        manifestUpdater.setManifest(manifest);\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.capabilities) {\r\n            capabilities = config.capabilities;\r\n        }\r\n        if (config.manifestLoader) {\r\n            manifestLoader = config.manifestLoader;\r\n        }\r\n        if (config.manifestModel) {\r\n            manifestModel = config.manifestModel;\r\n        }\r\n        if (config.dashManifestModel) {\r\n            dashManifestModel = config.dashManifestModel;\r\n        }\r\n        if (config.protectionController) {\r\n            protectionController = config.protectionController;\r\n        }\r\n        if (config.adapter) {\r\n            adapter = config.adapter;\r\n        }\r\n        if (config.metricsModel) {\r\n            metricsModel = config.metricsModel;\r\n        }\r\n        if (config.dashMetrics) {\r\n            dashMetrics = config.dashMetrics;\r\n        }\r\n        if (config.liveEdgeFinder) {\r\n            liveEdgeFinder = config.liveEdgeFinder;\r\n        }\r\n        if (config.mediaSourceController) {\r\n            mediaSourceController = config.mediaSourceController;\r\n        }\r\n        if (config.timeSyncController) {\r\n            timeSyncController = config.timeSyncController;\r\n        }\r\n        if (config.baseURLController) {\r\n            baseURLController = config.baseURLController;\r\n        }\r\n        if (config.virtualBuffer) {\r\n            virtualBuffer = config.virtualBuffer;\r\n        }\r\n        if (config.errHandler) {\r\n            errHandler = config.errHandler;\r\n        }\r\n        if (config.timelineConverter) {\r\n            timelineConverter = config.timelineConverter;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        timeSyncController.reset();\r\n\r\n        flushPlaylistMetrics(\r\n            hasMediaError || hasInitialisationError ?\r\n                PlayList.Trace.FAILURE_STOP_REASON :\r\n                PlayList.Trace.USER_REQUEST_STOP_REASON\r\n        );\r\n\r\n        for (let i = 0, ln = streams.length; i < ln; i++) {\r\n            let stream = streams[i];\r\n            eventBus.off(Events.STREAM_INITIALIZED, onStreamInitialized, this);\r\n            stream.reset(hasMediaError);\r\n        }\r\n\r\n        streams = [];\r\n\r\n        eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackTimeUpdated, this);\r\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\r\n        eventBus.off(Events.PLAYBACK_ERROR, onPlaybackError, this);\r\n        eventBus.off(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\r\n        eventBus.off(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\r\n        eventBus.off(Events.PLAYBACK_ENDED, onEnded, this);\r\n        eventBus.off(Events.MANIFEST_UPDATED, onManifestUpdated, this);\r\n        eventBus.off(Events.STREAM_BUFFERING_COMPLETED, onStreamBufferingCompleted, this);\r\n\r\n        baseURLController.reset();\r\n        manifestUpdater.reset();\r\n        metricsModel.clearAllCurrentMetrics();\r\n        manifestModel.setValue(null);\r\n        manifestLoader.reset();\r\n        timelineConverter.reset();\r\n        liveEdgeFinder.reset();\r\n        adapter.reset();\r\n        virtualBuffer.reset();\r\n        isStreamSwitchingInProgress = false;\r\n        isUpdating = false;\r\n        activeStream = null;\r\n        hasMediaError = false;\r\n        hasInitialisationError = false;\r\n        initialPlayback = true;\r\n        isPaused = false;\r\n\r\n        if (mediaSource) {\r\n            mediaSourceController.detachMediaSource(videoModel);\r\n            mediaSource = null;\r\n        }\r\n        videoModel = null;\r\n        if (protectionController) {\r\n            protectionController.setMediaElement(null);\r\n            protectionController = null;\r\n            protectionData = null;\r\n            if (manifestModel.getValue()) {\r\n                eventBus.trigger(Events.PROTECTION_DESTROYED, {data: manifestModel.getValue().url});\r\n            }\r\n        }\r\n\r\n        eventBus.trigger(Events.STREAM_TEARDOWN_COMPLETE);\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        getAutoPlay: getAutoPlay,\r\n        getActiveStreamInfo: getActiveStreamInfo,\r\n        isStreamActive: isStreamActive,\r\n        getStreamById: getStreamById,\r\n        getTimeRelativeToStreamId: getTimeRelativeToStreamId,\r\n        load: load,\r\n        loadWithManifest: loadWithManifest,\r\n        getActiveStreamCommonEarliestTime: getActiveStreamCommonEarliestTime,\r\n        setConfig: setConfig,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nStreamController.__dashjs_factory_name = 'StreamController';\r\n\r\nexport default FactoryMaker.getSingletonFactory(StreamController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction TextController(config) {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let sourceBufferController = config.sourceBufferController;\r\n    let errHandler = config.errHandler;\r\n\r\n    let instance,\r\n        initialized,\r\n        mediaSource,\r\n        buffer,\r\n        type,\r\n        streamProcessor,\r\n        representationController;\r\n\r\n    function setup() {\r\n\r\n        initialized = false;\r\n        mediaSource = null;\r\n        buffer = null;\r\n        type = null;\r\n        streamProcessor = null;\r\n        representationController = null;\r\n\r\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\r\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, this);\r\n    }\r\n\r\n    function initialize(Type, source, StreamProcessor) {\r\n        type = Type;\r\n        setMediaSource(source);\r\n        streamProcessor = StreamProcessor;\r\n        representationController = streamProcessor.getRepresentationController();\r\n    }\r\n\r\n    /**\r\n     * @param mediaInfo object\r\n     * @returns SourceBuffer object\r\n     * @memberof BufferController#\r\n     */\r\n    function createBuffer(mediaInfo) {\r\n        try {\r\n            buffer = sourceBufferController.createSourceBuffer(mediaSource, mediaInfo);\r\n\r\n            if (!initialized) {\r\n                if (buffer.hasOwnProperty('initialize')) {\r\n                    buffer.initialize(type, this);\r\n                }\r\n                initialized = true;\r\n            }\r\n        } catch (e) {\r\n            errHandler.mediaSourceError('Error creating ' + type + ' source buffer.');\r\n        }\r\n\r\n        return buffer;\r\n    }\r\n\r\n    function getBuffer() {\r\n        return buffer;\r\n    }\r\n\r\n    function setBuffer(value) {\r\n        buffer = value;\r\n    }\r\n\r\n    function setMediaSource(value) {\r\n        mediaSource = value;\r\n    }\r\n\r\n    function getStreamProcessor() {\r\n        return streamProcessor;\r\n    }\r\n\r\n    function reset(errored) {\r\n\r\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\r\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, this);\r\n\r\n        if (!errored) {\r\n            sourceBufferController.abort(mediaSource, buffer);\r\n            sourceBufferController.removeSourceBuffer(mediaSource, buffer);\r\n        }\r\n    }\r\n\r\n    function onDataUpdateCompleted(e) {\r\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\r\n        eventBus.trigger(Events.TIMED_TEXT_REQUESTED, { index: 0, sender: e.sender }); //TODO make index dynamic if referring to MP?\r\n    }\r\n\r\n    function onInitFragmentLoaded(e) {\r\n        if (e.fragmentModel !== streamProcessor.getFragmentModel() || (!e.chunk.bytes)) return;\r\n        sourceBufferController.append(buffer, e.chunk);\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        createBuffer: createBuffer,\r\n        getBuffer: getBuffer,\r\n        setBuffer: setBuffer,\r\n        getStreamProcessor: getStreamProcessor,\r\n        setMediaSource: setMediaSource,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nTextController.__dashjs_factory_name = 'TextController';\r\nexport default FactoryMaker.getClassFactory(TextController);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport Error from './../vo/Error.js';\r\nimport EventBus from './../../core/EventBus.js';\r\nimport Events from './../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport Debug from '../../core/Debug.js';\r\n\r\nconst TIME_SYNC_FAILED_ERROR_CODE = 1;\r\nconst HTTP_TIMEOUT_MS = 5000;\r\n\r\nfunction TimeSyncController() {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        offsetToDeviceTimeMs,\r\n        isSynchronizing,\r\n        isInitialised,\r\n        useManifestDateHeaderTimeSource,\r\n        handlers,\r\n        metricsModel,\r\n        dashMetrics;\r\n\r\n    function initialize(timingSources, useManifestDateHeader) {\r\n        useManifestDateHeaderTimeSource = useManifestDateHeader;\r\n        offsetToDeviceTimeMs = 0;\r\n        isSynchronizing = false;\r\n        isInitialised = false;\r\n\r\n        // a list of known schemeIdUris and a method to call with @value\r\n        handlers = {\r\n            'urn:mpeg:dash:utc:http-head:2014':     httpHeadHandler,\r\n            'urn:mpeg:dash:utc:http-xsdate:2014':   httpHandler.bind(null, xsdatetimeDecoder),\r\n            'urn:mpeg:dash:utc:http-iso:2014':      httpHandler.bind(null, iso8601Decoder),\r\n            'urn:mpeg:dash:utc:direct:2014':        directHandler,\r\n\r\n            // some specs referencing early ISO23009-1 drafts incorrectly use\r\n            // 2012 in the URI, rather than 2014. support these for now.\r\n            'urn:mpeg:dash:utc:http-head:2012':     httpHeadHandler,\r\n            'urn:mpeg:dash:utc:http-xsdate:2012':   httpHandler.bind(null, xsdatetimeDecoder),\r\n            'urn:mpeg:dash:utc:http-iso:2012':      httpHandler.bind(null, iso8601Decoder),\r\n            'urn:mpeg:dash:utc:direct:2012':        directHandler,\r\n\r\n            // it isn't clear how the data returned would be formatted, and\r\n            // no public examples available so http-ntp not supported for now.\r\n            // presumably you would do an arraybuffer type xhr and decode the\r\n            // binary data returned but I would want to see a sample first.\r\n            'urn:mpeg:dash:utc:http-ntp:2014':      notSupportedHandler,\r\n\r\n            // not clear how this would be supported in javascript (in browser)\r\n            'urn:mpeg:dash:utc:ntp:2014':           notSupportedHandler,\r\n            'urn:mpeg:dash:utc:sntp:2014':          notSupportedHandler\r\n        };\r\n\r\n        if (!getIsSynchronizing()) {\r\n            attemptSync(timingSources);\r\n            setIsInitialised(true);\r\n        }\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.metricsModel) {\r\n            metricsModel = config.metricsModel;\r\n        }\r\n\r\n        if (config.dashMetrics) {\r\n            dashMetrics = config.dashMetrics;\r\n        }\r\n    }\r\n\r\n    function getOffsetToDeviceTimeMs() {\r\n        return getOffsetMs();\r\n    }\r\n\r\n    function setIsSynchronizing(value) {\r\n        isSynchronizing = value;\r\n    }\r\n\r\n    function getIsSynchronizing() {\r\n        return isSynchronizing;\r\n    }\r\n\r\n    function setIsInitialised(value) {\r\n        isInitialised = value;\r\n    }\r\n\r\n    function setOffsetMs(value) {\r\n        offsetToDeviceTimeMs = value;\r\n    }\r\n\r\n    function getOffsetMs() {\r\n        return offsetToDeviceTimeMs;\r\n    }\r\n\r\n    // takes xsdatetime and returns milliseconds since UNIX epoch\r\n    // may not be necessary as xsdatetime is very similar to ISO 8601\r\n    // which is natively understood by javascript Date parser\r\n    function alternateXsdatetimeDecoder(xsdatetimeStr) {\r\n        // taken from DashParser - should probably refactor both uses\r\n        var SECONDS_IN_MIN = 60;\r\n        var MINUTES_IN_HOUR = 60;\r\n        var MILLISECONDS_IN_SECONDS = 1000;\r\n        var datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+\\-])([0-9]{2})([0-9]{2}))?/;\r\n\r\n        var utcDate,\r\n            timezoneOffset;\r\n\r\n        var match = datetimeRegex.exec(xsdatetimeStr);\r\n\r\n        // If the string does not contain a timezone offset different browsers can interpret it either\r\n        // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\r\n        // all browsers\r\n        utcDate = Date.UTC(\r\n            parseInt(match[1], 10),\r\n            parseInt(match[2], 10) - 1, // months start from zero\r\n            parseInt(match[3], 10),\r\n            parseInt(match[4], 10),\r\n            parseInt(match[5], 10),\r\n            (match[6] && (parseInt(match[6], 10) || 0)),\r\n            (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0\r\n        );\r\n        // If the date has timezone offset take it into account as well\r\n        if (match[9] && match[10]) {\r\n            timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\r\n            utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\r\n        }\r\n\r\n        return new Date(utcDate).getTime();\r\n    }\r\n\r\n    // try to use the built in parser, since xsdate is a constrained ISO8601\r\n    // which is supported natively by Date.parse. if that fails, try a\r\n    // regex-based version used elsewhere in this application.\r\n    function xsdatetimeDecoder(xsdatetimeStr) {\r\n        var parsedDate = Date.parse(xsdatetimeStr);\r\n\r\n        if (isNaN(parsedDate)) {\r\n            parsedDate = alternateXsdatetimeDecoder(xsdatetimeStr);\r\n        }\r\n\r\n        return parsedDate;\r\n    }\r\n\r\n    // takes ISO 8601 timestamp and returns milliseconds since UNIX epoch\r\n    function iso8601Decoder(isoStr) {\r\n        return Date.parse(isoStr);\r\n    }\r\n\r\n    // takes RFC 1123 timestamp (which is same as ISO8601) and returns\r\n    // milliseconds since UNIX epoch\r\n    function rfc1123Decoder(dateStr) {\r\n        return Date.parse(dateStr);\r\n    }\r\n\r\n    function notSupportedHandler(url, onSuccessCB, onFailureCB) {\r\n        onFailureCB();\r\n    }\r\n\r\n    function directHandler(xsdatetimeStr, onSuccessCB, onFailureCB) {\r\n        var time = xsdatetimeDecoder(xsdatetimeStr);\r\n\r\n        if (!isNaN(time)) {\r\n            onSuccessCB(time);\r\n            return;\r\n        }\r\n\r\n        onFailureCB();\r\n    }\r\n\r\n    function httpHandler(decoder, url, onSuccessCB, onFailureCB, isHeadRequest) {\r\n        var oncomplete,\r\n            onload;\r\n        var complete = false;\r\n        var req = new XMLHttpRequest();\r\n\r\n        var verb = isHeadRequest ? 'HEAD' : 'GET';\r\n        var urls = url.match(/\\S+/g);\r\n\r\n        // according to ISO 23009-1, url could be a white-space\r\n        // separated list of URLs. just handle one at a time.\r\n        url = urls.shift();\r\n\r\n        oncomplete = function () {\r\n            if (complete) {\r\n                return;\r\n            }\r\n\r\n            // we only want to pass through here once per xhr,\r\n            // regardless of whether the load was successful.\r\n            complete = true;\r\n\r\n            // if there are more urls to try, call self.\r\n            if (urls.length) {\r\n                httpHandler(decoder, urls.join(' '), onSuccessCB, onFailureCB, isHeadRequest);\r\n            } else {\r\n                onFailureCB();\r\n            }\r\n        };\r\n\r\n        onload = function () {\r\n            var time,\r\n                result;\r\n\r\n            if (req.status === 200) {\r\n                time = isHeadRequest ?\r\n                        req.getResponseHeader('Date') :\r\n                        req.response;\r\n\r\n                result = decoder(time);\r\n\r\n                // decoder returns NaN if non-standard input\r\n                if (!isNaN(result)) {\r\n                    onSuccessCB(result);\r\n                    complete = true;\r\n                }\r\n            }\r\n        };\r\n\r\n        req.open(verb, url);\r\n        req.timeout = HTTP_TIMEOUT_MS || 0;\r\n        req.onload = onload;\r\n        req.onloadend = oncomplete;\r\n        req.send();\r\n    }\r\n\r\n    function httpHeadHandler(url, onSuccessCB, onFailureCB) {\r\n        httpHandler(rfc1123Decoder, url, onSuccessCB, onFailureCB, true);\r\n    }\r\n\r\n    function checkForDateHeader() {\r\n        var metrics = metricsModel.getReadOnlyMetricsFor('stream');\r\n        var dateHeaderValue = dashMetrics.getLatestMPDRequestHeaderValueByID(metrics, 'Date');\r\n        var dateHeaderTime = dateHeaderValue !== null ? new Date(dateHeaderValue).getTime() : Number.NaN;\r\n\r\n        if (!isNaN(dateHeaderTime)) {\r\n            setOffsetMs(dateHeaderTime - new Date().getTime());\r\n            completeTimeSyncSequence(false, dateHeaderTime / 1000, offsetToDeviceTimeMs);\r\n        }else {\r\n            completeTimeSyncSequence(true);\r\n        }\r\n    }\r\n\r\n    function completeTimeSyncSequence(failed, time, offset) {\r\n        setIsSynchronizing(false);\r\n        eventBus.trigger(Events.TIME_SYNCHRONIZATION_COMPLETED, { time: time, offset: offset, error: failed ? new Error(TIME_SYNC_FAILED_ERROR_CODE) : null });\r\n    }\r\n\r\n    function attemptSync(sources, sourceIndex) {\r\n\r\n        // if called with no sourceIndex, use zero (highest priority)\r\n        var  index = sourceIndex || 0;\r\n\r\n        // the sources should be ordered in priority from the manifest.\r\n        // try each in turn, from the top, until either something\r\n        // sensible happens, or we run out of sources to try.\r\n        var source = sources[index];\r\n\r\n        // callback to emit event to listeners\r\n        var onComplete = function (time, offset) {\r\n            var failed = !time || !offset;\r\n            if (failed && useManifestDateHeaderTimeSource) {\r\n                //Before falling back to binary search , check if date header exists on MPD. if so, use for a time source.\r\n                checkForDateHeader();\r\n            } else {\r\n                completeTimeSyncSequence(failed, time, offset);\r\n            }\r\n        };\r\n\r\n        setIsSynchronizing(true);\r\n\r\n        if (source) {\r\n            // check if there is a handler for this @schemeIdUri\r\n            if (handlers.hasOwnProperty(source.schemeIdUri)) {\r\n                // if so, call it with its @value\r\n                handlers[source.schemeIdUri](\r\n                    source.value,\r\n                    function (serverTime) {\r\n                        // the timing source returned something useful\r\n                        var deviceTime = new Date().getTime();\r\n                        var offset = serverTime - deviceTime;\r\n\r\n                        setOffsetMs(offset);\r\n\r\n                        log('Local time:      ' + new Date(deviceTime));\r\n                        log('Server time:     ' + new Date(serverTime));\r\n                        log('Difference (ms): ' + offset);\r\n\r\n                        onComplete(serverTime, offset);\r\n                    },\r\n                    function () {\r\n                        // the timing source was probably uncontactable\r\n                        // or returned something we can't use - try again\r\n                        // with the remaining sources\r\n                        attemptSync(sources, index + 1);\r\n                    }\r\n                );\r\n            } else {\r\n                // an unknown schemeIdUri must have been found\r\n                // try again with the remaining sources\r\n                attemptSync(sources, index + 1);\r\n            }\r\n        } else {\r\n            // no valid time source could be found, just use device time\r\n            setOffsetMs(0);\r\n            onComplete();\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        setIsInitialised(false);\r\n        setIsSynchronizing(false);\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        getOffsetToDeviceTimeMs: getOffsetToDeviceTimeMs,\r\n        setConfig: setConfig,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nTimeSyncController.__dashjs_factory_name = 'TimeSyncController';\r\nlet factory = FactoryMaker.getSingletonFactory(TimeSyncController);\r\nfactory.TIME_SYNC_FAILED_ERROR_CODE = TIME_SYNC_FAILED_ERROR_CODE;\r\nfactory.HTTP_TIMEOUT_MS = HTTP_TIMEOUT_MS;\r\nexport default factory;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport XlinkLoader from '../XlinkLoader.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport X2JS from '../../../externals/xml2json.js';\r\n\r\nconst RESOLVE_TYPE_ONLOAD = 'onLoad';\r\nconst RESOLVE_TYPE_ONACTUATE = 'onActuate';\r\nconst ELEMENT_TYPE_PERIOD = 'Period';\r\nconst ELEMENT_TYPE_ADAPTATIONSET = 'AdaptationSet';\r\nconst ELEMENT_TYPE_EVENTSTREAM = 'EventStream';\r\nconst RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\r\n\r\nfunction XlinkController(config) {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        matchers,\r\n        iron,\r\n        manifest,\r\n        converter,\r\n        xlinkLoader;\r\n\r\n    function setup() {\r\n        eventBus.on(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\r\n\r\n        xlinkLoader = XlinkLoader(context).create({\r\n            errHandler: config.errHandler,\r\n            metricsModel: config.metricsModel,\r\n            requestModifier: config.requestModifier\r\n        });\r\n    }\r\n\r\n    function setMatchers(value) {\r\n        matchers = value;\r\n    }\r\n\r\n    function setIron(value) {\r\n        iron = value;\r\n    }\r\n\r\n    /**\r\n     * <p>Triggers the resolution of the xlink.onLoad attributes in the manifest file </p>\r\n     * @param manifest\r\n     */\r\n    function resolveManifestOnLoad(mpd) {\r\n        var elements;\r\n        // First resolve all periods, so unnecessary requests inside onLoad Periods with Default content are avoided\r\n        converter = new X2JS(matchers, '', true);\r\n        manifest = mpd;\r\n        elements = getElementsToResolve(manifest.Period_asArray, manifest, ELEMENT_TYPE_PERIOD, RESOLVE_TYPE_ONLOAD);\r\n        resolve(elements, ELEMENT_TYPE_PERIOD, RESOLVE_TYPE_ONLOAD);\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\r\n\r\n        if (xlinkLoader) {\r\n            xlinkLoader.reset();\r\n            xlinkLoader = null;\r\n        }\r\n    }\r\n\r\n    function resolve(elements, type, resolveType) {\r\n        var resolveObject = {};\r\n        var element,\r\n            url,\r\n            i;\r\n\r\n        resolveObject.elements = elements;\r\n        resolveObject.type = type;\r\n        resolveObject.resolveType = resolveType;\r\n        // If nothing to resolve, directly call allElementsLoaded\r\n        if (resolveObject.elements.length === 0) {\r\n            onXlinkAllElementsLoaded(resolveObject);\r\n        }\r\n        for (i = 0; i < resolveObject.elements.length; i++) {\r\n            element = resolveObject.elements[i];\r\n            if (element.url.indexOf('http://') !== -1) {\r\n                url = element.url;\r\n            } else {\r\n                url = element.originalContent.BaseURL + element.url;\r\n            }\r\n            xlinkLoader.load(url, element, resolveObject);\r\n        }\r\n    }\r\n\r\n    function onXlinkElementLoaded(event) {\r\n        var element,\r\n            resolveObject,\r\n            index;\r\n\r\n        var openingTag = '<response>';\r\n        var closingTag = '</response>';\r\n        var mergedContent = '';\r\n\r\n        element = event.element;\r\n        resolveObject = event.resolveObject;\r\n        // if the element resolved into content parse the content\r\n        if (element.resolvedContent) {\r\n            // we add a parent elements so the converter is able to parse multiple elements of the same type which are not wrapped inside a container\r\n            index = element.resolvedContent.indexOf('>') + 1; //find the closing position of the xml tag\r\n            mergedContent = element.resolvedContent.substr(0,index) + openingTag + element.resolvedContent.substr(index) + closingTag;\r\n            element.resolvedContent = converter.xml_str2json(mergedContent);\r\n        }\r\n        if (isResolvingFinished(resolveObject)) {\r\n            onXlinkAllElementsLoaded(resolveObject);\r\n        }\r\n    }\r\n\r\n    // We got to wait till all elements of the current queue are resolved before merging back\r\n    function onXlinkAllElementsLoaded (resolveObject) {\r\n        var elements = [];\r\n        var i,\r\n            obj;\r\n\r\n        mergeElementsBack(resolveObject);\r\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONACTUATE) {\r\n            eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\r\n        }\r\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONLOAD) {\r\n            switch (resolveObject.type) {\r\n                // Start resolving the other elements. We can do Adaptation Set and EventStream in parallel\r\n                case ELEMENT_TYPE_PERIOD:\r\n                    for (i = 0; i < manifest[ELEMENT_TYPE_PERIOD + '_asArray'].length; i++) {\r\n                        obj = manifest[ELEMENT_TYPE_PERIOD + '_asArray'][i];\r\n                        if (obj.hasOwnProperty(ELEMENT_TYPE_ADAPTATIONSET + '_asArray')) {\r\n                            elements = elements.concat(getElementsToResolve(obj[ELEMENT_TYPE_ADAPTATIONSET + '_asArray'], obj, ELEMENT_TYPE_ADAPTATIONSET, RESOLVE_TYPE_ONLOAD));\r\n                        }\r\n                        if (obj.hasOwnProperty(ELEMENT_TYPE_EVENTSTREAM + '_asArray')) {\r\n                            elements = elements.concat(getElementsToResolve(obj[ELEMENT_TYPE_EVENTSTREAM + '_asArray'], obj, ELEMENT_TYPE_EVENTSTREAM, RESOLVE_TYPE_ONLOAD));\r\n                        }\r\n                    }\r\n                    resolve(elements, ELEMENT_TYPE_ADAPTATIONSET, RESOLVE_TYPE_ONLOAD);\r\n                    break;\r\n                case ELEMENT_TYPE_ADAPTATIONSET:\r\n                    // TODO: Resolve SegmentList here\r\n                    eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Returns the elements with the specific resolve Type\r\n    function getElementsToResolve(elements, parentElement, type, resolveType) {\r\n        var toResolve = [];\r\n        var element,\r\n            i,\r\n            xlinkObject;\r\n        // first remove all the resolve-to-zero elements\r\n        for (i = elements.length - 1; i >= 0; i--) {\r\n            element = elements[i];\r\n            if (element.hasOwnProperty('xlink:href') && element['xlink:href'] === RESOLVE_TO_ZERO) {\r\n                elements.splice(i, 1);\r\n            }\r\n        }\r\n        // now get the elements with the right resolve type\r\n        for (i = 0; i < elements.length; i++) {\r\n            element = elements[i];\r\n            if (element.hasOwnProperty('xlink:href') && element.hasOwnProperty('xlink:actuate') && element['xlink:actuate'] === resolveType) {\r\n                xlinkObject = createXlinkObject(element['xlink:href'], parentElement, type, i, resolveType, element);\r\n                toResolve.push(xlinkObject);\r\n            }\r\n        }\r\n        return toResolve;\r\n    }\r\n\r\n    function mergeElementsBack(resolveObject) {\r\n        var resolvedElements = [];\r\n        var element,\r\n            type,\r\n            obj,\r\n            i,\r\n            j,\r\n            k;\r\n        // Start merging back from the end because of index shifting. Note that the elements with the same parent have to be ordered by index ascending\r\n        for (i = resolveObject.elements.length - 1; i >= 0; i --) {\r\n            element = resolveObject.elements[i];\r\n            type = element.type + '_asArray';\r\n\r\n            // Element couldn't be resolved or is TODO Inappropriate target: Remove all Xlink attributes\r\n            if (!element.resolvedContent || isInappropriateTarget()) {\r\n                delete element.originalContent['xlink:actuate'];\r\n                delete element.originalContent['xlink:href'];\r\n                resolvedElements.push(element.originalContent);\r\n            }\r\n            // Element was successfully resolved\r\n            else if (element.resolvedContent) {\r\n                for (j = 0; j < element.resolvedContent[type].length; j++) {\r\n                    //TODO Contains another Xlink attribute with xlink:actuate set to onload. Remove all xLink attributes\r\n                    obj = element.resolvedContent[type][j];\r\n                    resolvedElements.push(obj);\r\n                }\r\n            }\r\n            // Replace the old elements in the parent with the resolved ones\r\n            element.parentElement[type].splice(element.index, 1);\r\n            for (k = 0; k < resolvedElements.length; k++) {\r\n                element.parentElement[type].splice(element.index + k, 0, resolvedElements[k]);\r\n            }\r\n            resolvedElements = [];\r\n        }\r\n        if (resolveObject.elements.length > 0) {\r\n            iron.run(manifest);\r\n        }\r\n    }\r\n\r\n    function createXlinkObject(url, parentElement, type, index, resolveType, originalContent) {\r\n        return {\r\n            url: url,\r\n            parentElement: parentElement,\r\n            type: type,\r\n            index: index,\r\n            resolveType: resolveType,\r\n            originalContent: originalContent,\r\n            resolvedContent: null,\r\n            resolved: false\r\n        };\r\n    }\r\n\r\n    // Check if all pending requests are finished\r\n    function isResolvingFinished(elementsToResolve) {\r\n        var i,\r\n            obj;\r\n        for (i = 0; i < elementsToResolve.elements.length; i++) {\r\n            obj = elementsToResolve.elements[i];\r\n            if (obj.resolved === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // TODO : Do some syntax check here if the target is valid or not\r\n    function isInappropriateTarget() {\r\n        return false;\r\n    }\r\n\r\n    instance = {\r\n        resolveManifestOnLoad: resolveManifestOnLoad,\r\n        setMatchers: setMatchers,\r\n        setIron: setIron,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nXlinkController.__dashjs_factory_name = 'XlinkController';\r\nexport default FactoryMaker.getClassFactory(XlinkController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport DVBErrorsTranslator from './utils/DVBErrorsTranslator.js';\r\nimport MetricsReportingEvents from './MetricsReportingEvents.js';\r\nimport MetricsCollectionController from './controllers/MetricsCollectionController.js';\r\nimport MetricsHandlerFactory from './metrics/MetricsHandlerFactory.js';\r\nimport ReportingFactory from './reporting/ReportingFactory.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction MetricsReporting() {\r\n\r\n    let context = this.context;\r\n    let instance;\r\n\r\n    let dvbErrorsTranslator;\r\n\r\n    /**\r\n     * Create a MetricsCollectionController, and a DVBErrorsTranslator\r\n     * @return {MetricsCollectionController} Metrics Collection Controller\r\n     */\r\n    function createMetricsReporting(config) {\r\n        dvbErrorsTranslator = DVBErrorsTranslator(context).getInstance({\r\n            eventBus: config.eventBus,\r\n            metricsModel: config.metricsModel,\r\n        });\r\n\r\n        return MetricsCollectionController(context).create(config);\r\n    }\r\n\r\n    /**\r\n     * Get the ReportingFactory to allow new reporters to be registered\r\n     * @return {ReportingFactory} Reporting Factory\r\n     */\r\n    function getReportingFactory() {\r\n        return ReportingFactory(context).getInstance();\r\n    }\r\n\r\n    /**\r\n     * Get the MetricsHandlerFactory to allow new handlers to be registered\r\n     * @return {MetricsHandlerFactory} Metrics Handler Factory\r\n     */\r\n    function getMetricsHandlerFactory() {\r\n        return MetricsHandlerFactory(context).getInstance();\r\n    }\r\n\r\n    instance = {\r\n        createMetricsReporting:     createMetricsReporting,\r\n        getReportingFactory:        getReportingFactory,\r\n        getMetricsHandlerFactory:   getMetricsHandlerFactory\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMetricsReporting.__dashjs_factory_name = 'MetricsReporting';\r\nlet factory = FactoryMaker.getClassFactory(MetricsReporting);\r\nfactory.events = MetricsReportingEvents;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../../core/events/EventsBase.js';\r\n\r\nclass MetricsReportingEvents extends EventsBase {\r\n    constructor () {\r\n        super();\r\n\r\n        this.METRICS_INITIALISATION_COMPLETE = 'internal_metricsReportingInitialized';\r\n        this.BECAME_REPORTING_PLAYER = 'internal_becameReportingPlayer';\r\n    }\r\n}\r\n\r\nlet metricsReportingEvents = new MetricsReportingEvents();\r\nexport default metricsReportingEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MetricsController from './MetricsController.js';\r\nimport ManifestParsing from '../utils/ManifestParsing.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport MetricsReportingEvents from '../MetricsReportingEvents.js';\r\nimport Events from '../../../core/events/Events.js';\r\n\r\nfunction MetricsCollectionController(config) {\r\n\r\n    let metricsControllers = {};\r\n\r\n    let context = this.context;\r\n    let eventBus = config.eventBus;\r\n\r\n    function update(e) {\r\n        if (e.error) {\r\n            return;\r\n        }\r\n\r\n        // start by assuming all existing controllers need removing\r\n        let controllersToRemove = Object.keys(metricsControllers);\r\n\r\n        const metrics = ManifestParsing(context).getInstance({\r\n            dashManifestModel: config.dashManifestModel\r\n        }).getMetrics(e.manifest);\r\n\r\n        metrics.forEach(m => {\r\n            const key = JSON.stringify(m);\r\n\r\n            if (!metricsControllers.hasOwnProperty(key)) {\r\n                try {\r\n                    var controller = MetricsController(context).create(config);\r\n                    controller.initialize(m);\r\n                    metricsControllers[key] = controller;\r\n                } catch (e) {\r\n                    // fail quietly\r\n                }\r\n            } else {\r\n                // we still need this controller - delete from removal list\r\n                controllersToRemove.splice(key, 1);\r\n            }\r\n        });\r\n\r\n        // now remove the unwanted controllers\r\n        controllersToRemove.forEach(c => {\r\n            metricsControllers[c].reset();\r\n            delete metricsControllers[c];\r\n        });\r\n\r\n        eventBus.trigger(\r\n            MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE\r\n        );\r\n    }\r\n\r\n    function reset() {\r\n        Object.keys(metricsControllers).forEach(key => {\r\n            metricsControllers[key].reset();\r\n        });\r\n\r\n        metricsControllers = {};\r\n    }\r\n\r\n    function setup() {\r\n\r\n\r\n        eventBus.on(Events.MANIFEST_UPDATED, update);\r\n        eventBus.on(Events.STREAM_TEARDOWN_COMPLETE, reset);\r\n    }\r\n\r\n    setup();\r\n\r\n    // don't export any actual methods\r\n    return {};\r\n}\r\n\r\nMetricsCollectionController.__dashjs_factory_name = 'MetricsCollectionController';\r\nexport default FactoryMaker.getClassFactory(MetricsCollectionController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport RangeController from './RangeController.js';\r\nimport ReportingController from './ReportingController.js';\r\nimport MetricsHandlersController from './MetricsHandlersController.js';\r\n\r\nfunction MetricsController(config) {\r\n\r\n    let metricsHandlersController,\r\n        reportingController,\r\n        rangeController,\r\n        instance;\r\n\r\n    let context = this.context;\r\n\r\n    function initialize(metricsEntry) {\r\n        try {\r\n            rangeController = RangeController(context).create({\r\n                mediaElement: config.mediaElement\r\n            });\r\n\r\n            rangeController.initialize(metricsEntry.Range);\r\n\r\n            reportingController = ReportingController(context).create({\r\n                log: config.log\r\n            });\r\n\r\n            reportingController.initialize(metricsEntry.Reporting, rangeController);\r\n\r\n            metricsHandlersController = MetricsHandlersController(context).create({\r\n                log: config.log,\r\n                eventBus: config.eventBus,\r\n            });\r\n\r\n            metricsHandlersController.initialize(metricsEntry.metrics, reportingController);\r\n        } catch (e) {\r\n            reset();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        if (metricsHandlersController) {\r\n            metricsHandlersController.reset();\r\n        }\r\n\r\n        if (reportingController) {\r\n            reportingController.reset();\r\n        }\r\n\r\n        if (rangeController) {\r\n            rangeController.reset();\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        reset:      reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMetricsController.__dashjs_factory_name = 'MetricsController';\r\nexport default FactoryMaker.getClassFactory(MetricsController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MetricsHandlerFactory from '../metrics/MetricsHandlerFactory.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport MediaPlayerEvents from '../../MediaPlayerEvents.js';\r\n\r\nfunction MetricsHandlersController(config) {\r\n    let handlers = [];\r\n\r\n    let instance;\r\n    let context = this.context;\r\n    let eventBus = config.eventBus;\r\n\r\n    let metricsHandlerFactory = MetricsHandlerFactory(context).getInstance({\r\n        log: config.log,\r\n        eventBus: config.eventBus\r\n    });\r\n\r\n    function handle(e) {\r\n        handlers.forEach(handler => {\r\n            handler.handleNewMetric(e.metric, e.value, e.mediaType);\r\n        });\r\n    }\r\n\r\n    function initialize(metrics, reportingController) {\r\n        metrics.split(',').forEach(\r\n            (m, midx, ms) => {\r\n                var handler;\r\n\r\n                // there is a bug in ISO23009-1 where the metrics attribute\r\n                // is a comma-separated list but HttpList key can contain a\r\n                // comma enclosed by ().\r\n                if ((m.indexOf('(') !== -1) && m.indexOf(')') === -1) {\r\n                    let nextm = ms[midx + 1];\r\n\r\n                    if (nextm &&\r\n                            (nextm.indexOf('(') === -1) &&\r\n                            (nextm.indexOf(')') !== -1)) {\r\n                        m += ',' + nextm;\r\n\r\n                        // delete the next metric so forEach does not visit.\r\n                        delete ms[midx + 1];\r\n                    }\r\n                }\r\n\r\n                handler = metricsHandlerFactory.create(\r\n                    m,\r\n                    reportingController\r\n                );\r\n\r\n                if (handler) {\r\n                    handlers.push(handler);\r\n                }\r\n            }\r\n        );\r\n\r\n        eventBus.on(\r\n            MediaPlayerEvents.METRIC_ADDED,\r\n            handle,\r\n            instance\r\n        );\r\n\r\n        eventBus.on(\r\n            MediaPlayerEvents.METRIC_UPDATED,\r\n            handle,\r\n            instance\r\n        );\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(\r\n            MediaPlayerEvents.METRIC_ADDED,\r\n            handle,\r\n            instance\r\n        );\r\n\r\n        eventBus.off(\r\n            MediaPlayerEvents.METRIC_UPDATED,\r\n            handle,\r\n            instance\r\n        );\r\n\r\n        handlers.forEach(handler => handler.reset());\r\n\r\n        handlers = [];\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        reset:      reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMetricsHandlersController.__dashjs_factory_name = 'MetricsHandlersController';\r\nexport default FactoryMaker.getClassFactory(MetricsHandlersController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport CustomTimeRanges from '../../utils/CustomTimeRanges.js';\r\n\r\nfunction RangeController(config) {\r\n\r\n    let useWallClockTime = false;\r\n    let context = this.context;\r\n    let instance,\r\n        ranges;\r\n\r\n    let mediaElement = config.mediaElement;\r\n\r\n    function initialize(rs) {\r\n        if (rs && rs.length) {\r\n            rs.forEach(r => {\r\n                var start = r.starttime;\r\n                var end = start + r.duration;\r\n\r\n                ranges.add(start, end);\r\n            });\r\n\r\n            useWallClockTime = !!rs[0]._useWallClockTime;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        ranges.clear();\r\n    }\r\n\r\n    function setup() {\r\n        ranges = CustomTimeRanges(context).create();\r\n    }\r\n\r\n    function isEnabled() {\r\n        var numRanges = ranges.length;\r\n        var time;\r\n\r\n        if (!numRanges) {\r\n            return true;\r\n        }\r\n\r\n        // When not present, DASH Metrics reporting is requested\r\n        // for the whole duration of the content.\r\n        time = useWallClockTime ?\r\n                (new Date().getTime() / 1000) :\r\n                mediaElement.currentTime;\r\n\r\n        for (var i = 0; i < numRanges; i += 1) {\r\n            let start = ranges.start(i);\r\n            let end = ranges.end(i);\r\n\r\n            if ((start <= time) && (time < end)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        reset:      reset,\r\n        isEnabled:  isEnabled\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nRangeController.__dashjs_factory_name = 'RangeController';\r\nexport default FactoryMaker.getClassFactory(RangeController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport ReportingFactory from '../reporting/ReportingFactory.js';\r\n\r\nfunction ReportingController(config) {\r\n\r\n    let reporters = [];\r\n    let instance;\r\n\r\n    let reportingFactory = ReportingFactory(this.context).getInstance({\r\n        log: config.log\r\n    });\r\n\r\n    function initialize(reporting, rangeController) {\r\n        // \"if multiple Reporting elements are present, it is expected that\r\n        // the client processes one of the recognized reporting schemes.\"\r\n        // to ignore this, and support multiple Reporting per Metric,\r\n        // simply change the 'some' below to 'forEach'\r\n        reporting.some(r => {\r\n            var reporter = reportingFactory.create(r, rangeController);\r\n\r\n            if (reporter) {\r\n                reporters.push(reporter);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    function reset() {\r\n        reporters.forEach(r => r.reset());\r\n        reporters = [];\r\n    }\r\n\r\n    function report(type, vos) {\r\n        reporters.forEach(r => r.report(type, vos));\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        reset:      reset,\r\n        report:     report\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nReportingController.__dashjs_factory_name = 'ReportingController';\r\nexport default FactoryMaker.getClassFactory(ReportingController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport BufferLevel from './handlers/BufferLevelHandler.js';\r\nimport DVBErrors from './handlers/DVBErrorsHandler.js';\r\nimport HttpList from './handlers/HttpListHandler.js';\r\nimport GenericMetricHandler from './handlers/GenericMetricHandler.js';\r\n\r\nfunction MetricsHandlerFactory(config) {\r\n\r\n    let instance;\r\n    let log = config.log;\r\n\r\n    // group 1: key, [group 3: n [, group 5: type]]\r\n    let keyRegex = /([a-zA-Z]*)(\\(([0-9]*)(\\,\\s*([a-zA-Z]*))?\\))?/;\r\n\r\n    let context = this.context;\r\n    let knownFactoryProducts = {\r\n        BufferLevel:    BufferLevel,\r\n        DVBErrors:      DVBErrors,\r\n        HttpList:       HttpList,\r\n        PlayList:       GenericMetricHandler,\r\n        RepSwitchList:  GenericMetricHandler,\r\n        TcpList:        GenericMetricHandler\r\n    };\r\n\r\n    function create(listType, reportingController) {\r\n        var matches = listType.match(keyRegex);\r\n        var handler;\r\n\r\n        if (!matches) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            handler = knownFactoryProducts[matches[1]](context).create({\r\n                eventBus: config.eventBus\r\n            });\r\n\r\n            handler.initialize(\r\n                matches[1],\r\n                reportingController,\r\n                matches[3],\r\n                matches[5]\r\n            );\r\n        } catch (e) {\r\n            handler = null;\r\n\r\n            log(`MetricsHandlerFactory: Could not create handler for type ${matches[1]} with args ${matches[3]}, ${matches[5]} (${e.message})`);\r\n        }\r\n\r\n        return handler;\r\n    }\r\n\r\n    function register(key, handler) {\r\n        knownFactoryProducts[key] = handler;\r\n    }\r\n\r\n    function unregister(key) {\r\n        delete knownFactoryProducts[key];\r\n    }\r\n\r\n    instance = {\r\n        create:     create,\r\n        register:   register,\r\n        unregister: unregister\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMetricsHandlerFactory.__dashjs_factory_name = 'MetricsHandlerFactory';\r\nexport default FactoryMaker.getSingletonFactory(MetricsHandlerFactory);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\r\nimport HandlerHelpers from '../../utils/HandlerHelpers.js';\r\n\r\nfunction BufferLevelHandler() {\r\n\r\n    let instance,\r\n        reportingController,\r\n        n,\r\n        name,\r\n        interval,\r\n        lastReportedTime;\r\n\r\n    let context = this.context;\r\n    let handlerHelpers = HandlerHelpers(context).getInstance();\r\n\r\n    let storedVOs = [];\r\n\r\n    function getLowestBufferLevelVO() {\r\n        try {\r\n            return Object.keys(storedVOs).map(\r\n                key => storedVOs[key]\r\n            ).reduce(\r\n                (a, b) => {\r\n                    return (a.level < b.level) ? a : b;\r\n                }\r\n            );\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    function intervalCallback() {\r\n        var vo = getLowestBufferLevelVO();\r\n\r\n        if (vo) {\r\n            if (lastReportedTime !== vo.t) {\r\n                lastReportedTime = vo.t;\r\n                reportingController.report(name, vo);\r\n            }\r\n        }\r\n    }\r\n\r\n    function initialize(basename, rc, n_ms) {\r\n        if (rc) {\r\n            // this will throw if n is invalid, to be\r\n            // caught by the initialize caller.\r\n            n = handlerHelpers.validateN(n_ms);\r\n            reportingController = rc;\r\n            name = handlerHelpers.reconstructFullMetricName(basename, n_ms);\r\n            interval = setInterval(intervalCallback, n);\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        clearInterval(interval);\r\n        interval = null;\r\n        n = 0;\r\n        reportingController = null;\r\n        lastReportedTime = null;\r\n    }\r\n\r\n    function handleNewMetric(metric, vo, type) {\r\n        if (metric === 'BufferLevel') {\r\n            storedVOs[type] = vo;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize:         initialize,\r\n        reset:              reset,\r\n        handleNewMetric:    handleNewMetric\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nBufferLevelHandler.__dashjs_factory_name = 'BufferLevelHandler';\r\nexport default FactoryMaker.getClassFactory(BufferLevelHandler);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\r\nimport MetricsReportingEvents from '../../MetricsReportingEvents.js';\r\n\r\nfunction DVBErrorsHandler(config) {\r\n\r\n    let instance,\r\n        reportingController;\r\n\r\n    let eventBus = config.eventBus;\r\n\r\n    function onInitialisationComplete() {\r\n        // we only want to report this once per call to initialize\r\n        eventBus.off(\r\n            MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE,\r\n            onInitialisationComplete,\r\n            this\r\n        );\r\n\r\n        // Note: A Player becoming a reporting Player is itself\r\n        // something which is recorded by the DVBErrors metric.\r\n        eventBus.trigger(\r\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER\r\n        );\r\n    }\r\n\r\n    function initialize(unused, rc) {\r\n        if (rc) {\r\n            reportingController = rc;\r\n\r\n            eventBus.on(\r\n                MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE,\r\n                onInitialisationComplete,\r\n                this\r\n            );\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        reportingController = null;\r\n    }\r\n\r\n    function handleNewMetric(metric, vo) {\r\n        // simply pass metric straight through\r\n        if (metric === 'DVBErrors') {\r\n            if (reportingController) {\r\n                reportingController.report(metric, vo);\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize:         initialize,\r\n        reset:              reset,\r\n        handleNewMetric:    handleNewMetric\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nexport default FactoryMaker.getClassFactory(DVBErrorsHandler);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\r\n\r\nfunction GenericMetricHandler() {\r\n\r\n    let instance,\r\n        metricName,\r\n        reportingController;\r\n\r\n    function initialize(name, rc) {\r\n        metricName = name;\r\n        reportingController = rc;\r\n    }\r\n\r\n    function reset() {\r\n        reportingController = null;\r\n        metricName = undefined;\r\n    }\r\n\r\n    function handleNewMetric(metric, vo) {\r\n        // simply pass metric straight through\r\n        if (metric === metricName) {\r\n            if (reportingController) {\r\n                reportingController.report(metricName, vo);\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize:         initialize,\r\n        reset:              reset,\r\n        handleNewMetric:    handleNewMetric\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nGenericMetricHandler.__dashjs_factory_name = 'GenericMetricHandler';\r\nexport default FactoryMaker.getClassFactory(GenericMetricHandler);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\r\nimport HandlerHelpers from '../../utils/HandlerHelpers.js';\r\n\r\nfunction HttpListHandler() {\r\n\r\n    let instance,\r\n        reportingController,\r\n        n,\r\n        type,\r\n        name,\r\n        interval;\r\n\r\n    let storedVos = [];\r\n\r\n    let handlerHelpers = HandlerHelpers(this.context).getInstance();\r\n\r\n    function intervalCallback() {\r\n        var vos = storedVos;\r\n\r\n        if (vos.length) {\r\n            if (reportingController) {\r\n                reportingController.report(name, vos);\r\n            }\r\n        }\r\n\r\n        storedVos = [];\r\n    }\r\n\r\n    function initialize(basename, rc, n_ms, requestType) {\r\n        if (rc) {\r\n\r\n            // this will throw if n is invalid, to be\r\n            // caught by the initialize caller.\r\n            n = handlerHelpers.validateN(n_ms);\r\n\r\n            reportingController = rc;\r\n\r\n            if (requestType && requestType.length) {\r\n                type = requestType;\r\n            }\r\n\r\n            name = handlerHelpers.reconstructFullMetricName(\r\n                basename,\r\n                n_ms,\r\n                requestType\r\n            );\r\n\r\n            interval = setInterval(intervalCallback, n);\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        clearInterval(interval);\r\n        interval = null;\r\n        n = null;\r\n        type = null;\r\n        storedVos = [];\r\n        reportingController = null;\r\n    }\r\n\r\n    function handleNewMetric(metric, vo) {\r\n        if (metric === 'HttpList') {\r\n            if (!type || (type === vo.type)) {\r\n                storedVos.push(vo);\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize:         initialize,\r\n        reset:              reset,\r\n        handleNewMetric:    handleNewMetric\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nHttpListHandler.__dashjs_factory_name = 'HttpListHandler';\r\nexport default FactoryMaker.getClassFactory(HttpListHandler);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport DVBReporting from './reporters/DVBReporting.js';\r\n\r\nfunction ReportingFactory(config) {\r\n\r\n    let knownReportingSchemeIdUris = {\r\n        'urn:dvb:dash:reporting:2014': DVBReporting\r\n    };\r\n\r\n    let context = this.context;\r\n    let log = config.log;\r\n    let instance;\r\n\r\n    function create(entry, rangeController) {\r\n        var reporting;\r\n\r\n        try {\r\n            reporting = knownReportingSchemeIdUris[entry.schemeIdUri](context).create();\r\n\r\n            reporting.initialize(entry, rangeController);\r\n        } catch (e) {\r\n            reporting = null;\r\n\r\n            log(`ReportingFactory: could not create Reporting with schemeIdUri ${entry.schemeIdUri} (${e.message})`);\r\n        }\r\n\r\n        return reporting;\r\n    }\r\n\r\n    function register(schemeIdUri, moduleName) {\r\n        knownReportingSchemeIdUris[schemeIdUri] = moduleName;\r\n    }\r\n\r\n    function unregister(schemeIdUri) {\r\n        delete knownReportingSchemeIdUris[schemeIdUri];\r\n    }\r\n\r\n    instance = {\r\n        create:     create,\r\n        register:   register,\r\n        unregister: unregister\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nReportingFactory.__dashjs_factory_name = 'ReportingFactory';\r\nexport default FactoryMaker.getSingletonFactory(ReportingFactory);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\r\nimport MetricSerialiser from '../../utils/MetricSerialiser.js';\r\nimport RNG from '../../utils/RNG.js';\r\n\r\nfunction DVBReporting() {\r\n    let instance;\r\n\r\n    let context = this.context;\r\n    let metricSerialiser = MetricSerialiser(context).getInstance();\r\n    let randomNumberGenerator = RNG(context).getInstance();\r\n\r\n    let USE_DRAFT_DVB_SPEC = true;\r\n    let isReportingPlayer = false;\r\n    let reportingPlayerStatusDecided = false;\r\n    let reportingUrl = null;\r\n    let rangeController = null;\r\n    let allowPendingRequestsToCompleteOnReset = true;\r\n    let pendingRequests = [];\r\n\r\n    function doGetRequest(url, successCB, failureCB) {\r\n        var req = new XMLHttpRequest();\r\n        var oncomplete = function () {\r\n            var reqIndex = pendingRequests.indexOf(req);\r\n\r\n            if (reqIndex === -1) {\r\n                return;\r\n            } else {\r\n                pendingRequests.splice(reqIndex, 1);\r\n            }\r\n\r\n            if ((req.status >= 200) && (req.status < 300)) {\r\n                if (successCB) {\r\n                    successCB();\r\n                }\r\n            } else {\r\n                if (failureCB) {\r\n                    failureCB();\r\n                }\r\n            }\r\n        };\r\n\r\n        pendingRequests.push(req);\r\n\r\n        try {\r\n            req.open('GET', url);\r\n            req.onloadend = oncomplete;\r\n            req.onerror = oncomplete;\r\n            req.send();\r\n        } catch (e) {\r\n            req.onerror();\r\n        }\r\n    }\r\n\r\n    function report(type, vos) {\r\n        if (!Array.isArray(vos)) {\r\n            vos = [vos];\r\n        }\r\n\r\n        // If the Player is not a reporting Player, then the Player shall\r\n        // not report any errors.\r\n        // ... In addition to any time restrictions specified by a Range\r\n        // element within the Metrics element.\r\n        if (isReportingPlayer && rangeController.isEnabled()) {\r\n\r\n            // This reporting mechanism operates by creating one HTTP GET\r\n            // request for every entry in the top level list of the metric.\r\n            vos.forEach(function (vo) {\r\n                var url = metricSerialiser.serialise(vo);\r\n\r\n                // this has been proposed for errata\r\n                if (USE_DRAFT_DVB_SPEC && (type !== 'DVBErrors')) {\r\n                    url = `metricname=${type}&${url}`;\r\n                }\r\n\r\n                // Take the value of the @reportingUrl attribute, append a\r\n                // question mark ('?') character and then append the string\r\n                // created in the previous step.\r\n                url = `${reportingUrl}?${url}`;\r\n\r\n                // Make an HTTP GET request to the URL contained within the\r\n                // string created in the previous step.\r\n                doGetRequest(url, null, function () {\r\n                    // If the Player is unable to make the report, for\r\n                    // example because the @reportingUrl is invalid, the\r\n                    // host cannot be reached, or an HTTP status code other\r\n                    // than one in the 200 series is received, the Player\r\n                    // shall cease being a reporting Player for the\r\n                    // duration of the MPD.\r\n                    isReportingPlayer = false;\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    function initialize(entry, rc) {\r\n        var probability;\r\n\r\n        rangeController = rc;\r\n\r\n        reportingUrl = entry['dvb:reportingUrl'];\r\n\r\n        // If a required attribute is missing, the Reporting descriptor may\r\n        // be ignored by the Player\r\n        if (!reportingUrl) {\r\n            throw new Error(\r\n                'required parameter missing (dvb:reportingUrl)'\r\n            );\r\n        }\r\n\r\n        // A Player's status, as a reporting Player or not, shall remain\r\n        // static for the duration of the MPD, regardless of MPD updates.\r\n        // (i.e. only calling reset (or failure) changes this state)\r\n        if (!reportingPlayerStatusDecided) {\r\n            // NOTE: DVB spec has a typo where it incorrectly references the\r\n            // priority attribute, which should be probability\r\n            probability = entry['dvb:probability'] || entry['dvb:priority'] || 0;\r\n            // If the @priority attribute is set to 1000, it shall be a reporting Player.\r\n            // If the @priority attribute is missing, the Player shall not be a reporting Player.\r\n            // For any other value of the @probability attribute, it shall decide at random whether to be a\r\n            // reporting Player, such that the probability of being one is @probability/1000.\r\n            if (probability && (probability === 1000 || ((probability / 1000) >= randomNumberGenerator.random()))) {\r\n                isReportingPlayer = true;\r\n            }\r\n\r\n            reportingPlayerStatusDecided = true;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        if (!allowPendingRequestsToCompleteOnReset) {\r\n            pendingRequests.forEach(req => req.abort());\r\n            pendingRequests = [];\r\n        }\r\n\r\n        reportingPlayerStatusDecided = false;\r\n        isReportingPlayer = false;\r\n        reportingUrl = null;\r\n        rangeController = null;\r\n    }\r\n\r\n    instance = {\r\n        report:     report,\r\n        initialize: initialize,\r\n        reset:      reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDVBReporting.__dashjs_factory_name = 'DVBReporting';\r\nexport default FactoryMaker.getClassFactory(DVBReporting);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport DVBErrors from '../vo/DVBErrors.js';\r\nimport Events from '../../../core/events/Events.js';\r\nimport MediaPlayerEvents from '../../MediaPlayerEvents.js';\r\nimport MetricsReportingEvents from '../MetricsReportingEvents.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction DVBErrorsTranslator(config) {\r\n\r\n    let instance;\r\n    let eventBus = config.eventBus;\r\n    let metricModel = config.metricsModel;\r\n    let mpd;\r\n\r\n    function report(vo) {\r\n        var o = new DVBErrors();\r\n\r\n        if (!mpd) {\r\n            return;\r\n        }\r\n\r\n        for (const key in vo) {\r\n            if (vo.hasOwnProperty(key)) {\r\n                o[key] = vo[key];\r\n            }\r\n        }\r\n\r\n        if (!o.mpdurl) {\r\n            o.mpdurl = mpd.originalUrl || mpd.url;\r\n        }\r\n\r\n        if (!o.terror) {\r\n            o.terror = new Date();\r\n        }\r\n\r\n        metricModel.addDVBErrors(o);\r\n    }\r\n\r\n    function onManifestUpdate(e) {\r\n        if (e.error) {\r\n            return;\r\n        }\r\n\r\n        mpd = e.manifest;\r\n    }\r\n\r\n    function onServiceLocationChanged(e) {\r\n        report({\r\n            errorcode:          DVBErrors.BASE_URL_CHANGED,\r\n            servicelocation:    e.entry\r\n        });\r\n    }\r\n\r\n    function onBecameReporter() {\r\n        report({\r\n            errorcode: DVBErrors.BECAME_REPORTER\r\n        });\r\n    }\r\n\r\n    function handleHttpMetric(vo) {\r\n        if ((vo.responsecode === 0) ||      // connection failure - unknown\r\n                (vo.responsecode >= 400) || // HTTP error status code\r\n                (vo.responsecode < 100) ||  // unknown status codes\r\n                (vo.responsecode >= 600)) { // unknown status codes\r\n            report({\r\n                errorcode:          vo.responsecode || DVBErrors.CONNECTION_ERROR,\r\n                url:                vo.url,\r\n                terror:             vo.tresponse,\r\n                servicelocation:    vo._serviceLocation\r\n            });\r\n        }\r\n    }\r\n\r\n    function onMetricEvent(e) {\r\n        switch (e.metric) {\r\n        case 'HttpList':\r\n            handleHttpMetric(e.value);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    function onPlaybackError(e) {\r\n        var reason = e.error ? e.error.code : 0;\r\n        var errorcode;\r\n\r\n        switch (reason) {\r\n            case MediaError.MEDIA_ERR_NETWORK:\r\n                errorcode = DVBErrors.CONNECTION_ERROR;\r\n                break;\r\n            case MediaError.MEDIA_ERR_DECODE:\r\n                errorcode = DVBErrors.CORRUPT_MEDIA_OTHER;\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        report({\r\n            errorcode: errorcode\r\n        });\r\n    }\r\n\r\n    function initialise() {\r\n        eventBus.on(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\r\n        eventBus.on(\r\n            Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\r\n            onServiceLocationChanged,\r\n            instance\r\n        );\r\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, onMetricEvent, instance);\r\n        eventBus.on(MediaPlayerEvents.METRIC_UPDATED, onMetricEvent, instance);\r\n        eventBus.on(MediaPlayerEvents.PLAYBACK_ERROR, onPlaybackError, instance);\r\n        eventBus.on(\r\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\r\n            onBecameReporter,\r\n            instance\r\n        );\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\r\n        eventBus.off(\r\n            Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\r\n            onServiceLocationChanged,\r\n            instance\r\n        );\r\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, onMetricEvent, instance);\r\n        eventBus.off(MediaPlayerEvents.METRIC_UPDATED, onMetricEvent, instance);\r\n        eventBus.off(MediaPlayerEvents.PLAYBACK_ERROR, onPlaybackError, instance);\r\n        eventBus.off(\r\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\r\n            onBecameReporter,\r\n            instance\r\n        );\r\n    }\r\n\r\n    instance = {\r\n        initialise: initialise,\r\n        reset:      reset\r\n    };\r\n\r\n    initialise();\r\n\r\n    return instance;\r\n}\r\n\r\nDVBErrorsTranslator.__dashjs_factory_name = 'DVBErrorsTranslator';\r\nexport default FactoryMaker.getSingletonFactory(DVBErrorsTranslator);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction HandlerHelpers() {\r\n    return {\r\n        reconstructFullMetricName: function (key, n, type) {\r\n            var mn = key;\r\n\r\n            if (n) {\r\n                mn += '(' + n;\r\n\r\n                if (type && type.length) {\r\n                    mn += ',' + type;\r\n                }\r\n\r\n                mn += ')';\r\n            }\r\n\r\n            return mn;\r\n        },\r\n\r\n        validateN: function (n_ms) {\r\n            if (!n_ms) {\r\n                throw 'missing n';\r\n            }\r\n\r\n            if (isNaN(n_ms)) {\r\n                throw 'n is NaN';\r\n            }\r\n\r\n            // n is a positive integer is defined to refer to the metric\r\n            // in which the buffer level is recorded every n ms.\r\n            if (n_ms < 0) {\r\n                throw 'n must be positive';\r\n            }\r\n\r\n            return n_ms;\r\n        }\r\n    };\r\n}\r\n\r\nHandlerHelpers.__dashjs_factory_name = 'HandlerHelpers';\r\nexport default FactoryMaker.getSingletonFactory(HandlerHelpers);\r\n","import Metrics from '../vo/Metrics.js';\r\nimport Range from '../vo/Range.js';\r\nimport Reporting from '../vo/Reporting.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction ManifestParsing (config) {\r\n    let instance;\r\n    let dashManifestModel = config.dashManifestModel;\r\n\r\n    function getMetricsRangeStartTime(manifest, dynamic, range) {\r\n        var mpd = dashManifestModel.getMpd(manifest);\r\n        var periods;\r\n        var presentationStartTime = 0;\r\n        var reportingStartTime;\r\n\r\n        if (dynamic) {\r\n            // For services with MPD@type='dynamic', the start time is\r\n            // indicated in wall clock time by adding the value of this\r\n            // attribute to the value of the MPD@availabilityStartTime\r\n            // attribute.\r\n            presentationStartTime = mpd.availabilityStartTime.getTime() / 1000;\r\n        } else {\r\n            // For services with MPD@type='static', the start time is indicated\r\n            // in Media Presentation time and is relative to the PeriodStart\r\n            // time of the first Period in this MPD.\r\n            periods = this.getRegularPeriods(manifest, mpd);\r\n\r\n            if (periods.length) {\r\n                presentationStartTime = periods[0].start;\r\n            }\r\n        }\r\n\r\n        // When not present, DASH Metrics collection is\r\n        // requested from the beginning of content\r\n        // consumption.\r\n        reportingStartTime = presentationStartTime;\r\n\r\n        if (range && range.hasOwnProperty('starttime')) {\r\n            reportingStartTime += range.starttime;\r\n        }\r\n\r\n        return reportingStartTime;\r\n    }\r\n\r\n    function getMetrics(manifest) {\r\n        var metrics = [];\r\n\r\n        if (manifest.Metrics_asArray) {\r\n            manifest.Metrics_asArray.forEach(metric => {\r\n                var metricEntry = new Metrics();\r\n                var isDynamic = dashManifestModel.getIsDynamic(manifest);\r\n\r\n                if (metric.hasOwnProperty('metrics')) {\r\n                    metricEntry.metrics = metric.metrics;\r\n                } else {\r\n                    //console.log(\"Invalid Metrics. metrics must be set. Ignoring.\");\r\n                    return;\r\n                }\r\n\r\n                if (metric.Range_asArray) {\r\n                    metric.Range_asArray.forEach(range => {\r\n                        var rangeEntry = new Range();\r\n\r\n                        rangeEntry.starttime =\r\n                            getMetricsRangeStartTime(manifest, isDynamic, range);\r\n\r\n                        if (range.hasOwnProperty('duration')) {\r\n                            rangeEntry.duration = range.duration;\r\n                        } else {\r\n                            // if not present, the value is identical to the\r\n                            // Media Presentation duration.\r\n                            rangeEntry.duration = dashManifestModel.getDuration(manifest);\r\n                        }\r\n\r\n                        rangeEntry._useWallClockTime = isDynamic;\r\n\r\n                        metricEntry.Range.push(rangeEntry);\r\n                    });\r\n                }\r\n\r\n                if (metric.Reporting_asArray) {\r\n                    metric.Reporting_asArray.forEach(reporting => {\r\n                        var reportingEntry = new Reporting();\r\n\r\n                        if (reporting.hasOwnProperty('schemeIdUri')) {\r\n                            reportingEntry.schemeIdUri = reporting.schemeIdUri;\r\n                        } else {\r\n                            // Invalid Reporting. schemeIdUri must be set. Ignore.\r\n                            return;\r\n                        }\r\n\r\n                        for (const prop in reporting) {\r\n                            if (reporting.hasOwnProperty(prop)) {\r\n                                reportingEntry[prop] = reporting[prop];\r\n                            }\r\n                        }\r\n\r\n                        metricEntry.Reporting.push(reportingEntry);\r\n                    });\r\n                } else {\r\n                    // Invalid Metrics. At least one reporting must be present. Ignore\r\n                    return;\r\n                }\r\n\r\n                metrics.push(metricEntry);\r\n            });\r\n        }\r\n\r\n        return metrics;\r\n    }\r\n\r\n    instance = {\r\n        getMetrics: getMetrics\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nManifestParsing.__dashjs_factory_name = 'ManifestParsing';\r\nexport default FactoryMaker.getSingletonFactory(ManifestParsing);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction MetricSerialiser() {\r\n\r\n    // For each entry in the top level list within the metric (in the case\r\n    // of the DVBErrors metric each entry corresponds to an \"error event\"\r\n    // described in clause 10.8.4) the Player shall:\r\n    function serialise(metric) {\r\n        var pairs = [];\r\n        var obj = [];\r\n        var key,\r\n            value;\r\n\r\n        // Take each (key, value) pair from the metric entry and create a\r\n        // string consisting of the name of the key, followed by an equals\r\n        // ('=') character, followed by the string representation of the\r\n        // value. The string representation of the value is created based\r\n        // on the type of the value following the instructions in Table 22.\r\n        for (key in metric) {\r\n            if (metric.hasOwnProperty(key) && (key.indexOf('_') !== 0)) {\r\n                value = metric[key];\r\n\r\n                // we want to ensure that keys still end up in the report\r\n                // even if there is no value\r\n                if ((value === undefined) || (value === null)) {\r\n                    value = '';\r\n                }\r\n\r\n                // DVB A168 10.12.4 Table 22\r\n                if (Array.isArray(value)) {\r\n                    // if trace or similar is null, do not include in output\r\n                    if (!value.length) {\r\n                        continue;\r\n                    }\r\n\r\n                    obj = [];\r\n\r\n                    value.forEach(function (v) {\r\n                        var isBuiltIn = Object.prototype.toString.call(v).slice(8, -1) !== 'Object';\r\n\r\n                        obj.push(isBuiltIn ? v : serialise(v));\r\n                    });\r\n\r\n                    value = encodeURIComponent(obj.join(','));\r\n                } else if (typeof value === 'string') {\r\n                    value = encodeURIComponent(value);\r\n                } else if (value instanceof Date) {\r\n                    value = value.toISOString();\r\n                } else if (typeof value === 'number') {\r\n                    value = Math.round(value);\r\n                }\r\n\r\n                pairs.push(key + '=' + value);\r\n            }\r\n        }\r\n\r\n        // Concatenate the strings created in the previous step with an\r\n        // ampersand ('&') character between each one.\r\n        return pairs.join('&');\r\n    }\r\n\r\n    return {\r\n        serialise: serialise\r\n    };\r\n}\r\n\r\nMetricSerialiser.__dashjs_factory_name = 'MetricSerialiser';\r\nexport default FactoryMaker.getSingletonFactory(MetricSerialiser);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction RNG() {\r\n\r\n    // check whether secure random numbers are available. if not, revert to\r\n    // using Math.random\r\n    let crypto = window.crypto || window.msCrypto;\r\n\r\n    // could just as easily use any other array type by changing line below\r\n    let ArrayType = Uint32Array;\r\n    let MAX_VALUE = Math.pow(2, ArrayType.BYTES_PER_ELEMENT * 8) - 1;\r\n\r\n    // currently there is only one client for this code, and that only uses\r\n    // a single random number per initialisation. may want to increase this\r\n    // number if more consumers in the future\r\n    let NUM_RANDOM_NUMBERS = 10;\r\n\r\n    let randomNumbers,\r\n        index,\r\n        instance;\r\n\r\n    function initialise() {\r\n        if (crypto) {\r\n            if (!randomNumbers) {\r\n                randomNumbers = new ArrayType(NUM_RANDOM_NUMBERS);\r\n            }\r\n            crypto.getRandomValues(randomNumbers);\r\n            index = 0;\r\n        }\r\n    }\r\n\r\n    function rand(min, max) {\r\n        var r;\r\n\r\n        if (!min) {\r\n            min = 0;\r\n        }\r\n\r\n        if (!max) {\r\n            max = 1;\r\n        }\r\n\r\n        if (crypto) {\r\n            if (index === randomNumbers.length) {\r\n                initialise();\r\n            }\r\n\r\n            r = randomNumbers[index] / MAX_VALUE;\r\n            index += 1;\r\n        } else {\r\n            r = Math.random();\r\n        }\r\n\r\n        return (r * (max - min)) + min;\r\n    }\r\n\r\n    instance = {\r\n        random: rand,\r\n    };\r\n\r\n    initialise();\r\n\r\n    return instance;\r\n}\r\n\r\nRNG.__dashjs_factory_name = 'RNG';\r\nexport default FactoryMaker.getSingletonFactory(RNG);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DVBErrors {\r\n    constructor() {\r\n        this.mpdurl = null;\r\n        // String - Absolute URL from which the MPD was originally\r\n        // retrieved (MPD updates will not change this value).\r\n\r\n        this.errorcode = null;\r\n        // String - The value of errorcode depends upon the type\r\n        // of error being reported. For an error listed in the\r\n        // ErrorType column below the value is as described in the\r\n        // Value column.\r\n        //\r\n        // ErrorType                                            Value\r\n        // ---------                                            -----\r\n        // HTTP error status code                               HTTP status code\r\n        // Unknown HTTP status code                             HTTP status code\r\n        // SSL connection failed                                \"SSL\" followed by SSL alert value\r\n        // DNS resolution failed                                \"C00\"\r\n        // Host unreachable                                     \"C01\"\r\n        // Connection refused                                   \"C02\"\r\n        // Connection error – Not otherwise specified           \"C03\"\r\n        // Corrupt media – ISO BMFF container cannot be parsed  \"M00\"\r\n        // Corrupt media – Not otherwise specified              \"M01\"\r\n        // Changing Base URL in use due to errors               \"F00\"\r\n        // Becoming an error reporting Player                   \"S00\"\r\n\r\n        this.terror = null;\r\n        // Real-Time - Date and time at which error occurred in UTC,\r\n        // formatted as a combined date and time according to ISO 8601.\r\n\r\n        this.url = null;\r\n        // String - Absolute URL from which data was being requested\r\n        // when this error occurred. If the error report is in relation\r\n        // to corrupt media or changing BaseURL, this may be a null\r\n        // string if the URL from which the media was obtained or\r\n        // which led to the change of BaseURL is no longer known.\r\n\r\n        this.ipaddress = null;\r\n        // String - IP Address which the host name in \"url\" resolved to.\r\n        // If the error report is in relation to corrupt media or\r\n        // changing BaseURL, this may be a null string if the URL\r\n        // from which the media was obtained or which led to the\r\n        // change of BaseURL is no longer known.\r\n\r\n        this.servicelocation = null;\r\n        // String - The value of the serviceLocation field in the\r\n        // BaseURL being used. In the event of this report indicating\r\n        // a change of BaseURL this is the value from the BaseURL\r\n        // being moved from.\r\n    }\r\n}\r\n\r\nDVBErrors.SSL_CONNECTION_FAILED_PREFIX = 'SSL';\r\nDVBErrors.DNS_RESOLUTION_FAILED =        'C00';\r\nDVBErrors.HOST_UNREACHABLE =             'C01';\r\nDVBErrors.CONNECTION_REFUSED =           'C02';\r\nDVBErrors.CONNECTION_ERROR =             'C03';\r\nDVBErrors.CORRUPT_MEDIA_ISOBMFF =        'M00';\r\nDVBErrors.CORRUPT_MEDIA_OTHER =          'M01';\r\nDVBErrors.BASE_URL_CHANGED =             'F00';\r\nDVBErrors.BECAME_REPORTER =              'S00';\r\n\r\nexport default DVBErrors;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Metrics {\r\n    constructor() {\r\n\r\n        this.metrics = '';\r\n        this.Range = [];\r\n        this.Reporting = [];\r\n    }\r\n}\r\n\r\nexport default Metrics;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Range {\r\n    constructor() {\r\n\r\n        // as defined in ISO23009-1\r\n        this.starttime = 0;\r\n        this.duration = Infinity;\r\n\r\n        // for internal use\r\n        this._useWallClockTime = false;\r\n    }\r\n}\r\n\r\nexport default Range;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Reporting {\r\n    constructor() {\r\n        // Reporting is a DescriptorType and doesn't have any additional fields\r\n        this.schemeIdUri = '';\r\n        this.value = '';\r\n    }\r\n}\r\n\r\nexport default Reporting;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport DashManifestModel from '../../dash/models/DashManifestModel.js';\r\nimport ObjectUtils from '../utils/ObjectUtils.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nconst DEFAULT_INDEX = NaN;\r\n\r\nclass Node {\r\n    constructor(_baseUrls, _selectedIdx) {\r\n        this.data = {\r\n            baseUrls: _baseUrls || null,\r\n            selectedIdx: _selectedIdx || DEFAULT_INDEX\r\n        };\r\n        this.children = [];\r\n    }\r\n}\r\n\r\nfunction BaseURLTreeModel() {\r\n\r\n    let instance;\r\n    let root;\r\n\r\n    const context = this.context;\r\n    const dashManifestModel = DashManifestModel(context).getInstance();\r\n    const objectUtils = ObjectUtils(context).getInstance();\r\n\r\n    function setup() {\r\n        root = new Node();\r\n    }\r\n\r\n    function updateChildData(node, index, element) {\r\n        let baseUrls = dashManifestModel.getBaseURLsFromElement(element);\r\n\r\n        if (!node[index]) {\r\n            node[index] = new Node(baseUrls);\r\n        } else {\r\n            if (!objectUtils.areSimpleEquivalent(baseUrls, node[index].data.baseUrls)) {\r\n                node[index].data.baseUrls = baseUrls;\r\n                node[index].data.selectedIdx = DEFAULT_INDEX;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getBaseURLCollectionsFromManifest(manifest) {\r\n        let baseUrls = dashManifestModel.getBaseURLsFromElement(manifest);\r\n\r\n        if (!objectUtils.areSimpleEquivalent(baseUrls, root.data.baseUrls)) {\r\n            root.data.baseUrls = baseUrls;\r\n            root.data.selectedIdx = DEFAULT_INDEX;\r\n        }\r\n\r\n        if (manifest.Period_asArray) {\r\n            manifest.Period_asArray.forEach((p, pi) => {\r\n                updateChildData(root.children, pi, p);\r\n\r\n                if (p.AdaptationSet_asArray) {\r\n                    p.AdaptationSet_asArray.forEach((a, ai) => {\r\n                        updateChildData(root.children[pi].children, ai, a);\r\n\r\n                        if (a.Representation_asArray) {\r\n                            a.Representation_asArray.sort(\r\n                                dashManifestModel.getRepresentationSortFunction()\r\n                            ).forEach((r, ri) => {\r\n                                updateChildData(\r\n                                    root.children[pi].children[ai].children,\r\n                                    ri,\r\n                                    r\r\n                                );\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function walk(callback, node) {\r\n        var target = node || root;\r\n\r\n        callback(target.data);\r\n\r\n        if (target.children) {\r\n            target.children.forEach(child => walk(callback, child));\r\n        }\r\n    }\r\n\r\n    function invalidateSelectedIndexes(serviceLocation) {\r\n        walk((data) => {\r\n            if (!isNaN(data.selectedIdx)) {\r\n                if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\r\n                    data.selectedIdx = DEFAULT_INDEX;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function update(manifest) {\r\n        getBaseURLCollectionsFromManifest(manifest);\r\n    }\r\n\r\n    function reset() {\r\n        root = new Node();\r\n    }\r\n\r\n    function getForPath(path) {\r\n        var target = root;\r\n        var nodes = [target.data];\r\n\r\n        path.forEach(p => {\r\n            target = target.children[p];\r\n\r\n            if (target) {\r\n                nodes.push(target.data);\r\n            }\r\n        });\r\n\r\n        return nodes.filter(n => n.baseUrls.length);\r\n    }\r\n\r\n    instance = {\r\n        reset: reset,\r\n        update: update,\r\n        getForPath: getForPath,\r\n        invalidateSelectedIndexes: invalidateSelectedIndexes\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\r\nexport default FactoryMaker.getClassFactory(BaseURLTreeModel);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport FragmentRequest from '../vo/FragmentRequest.js';\r\nimport Debug from '../../core/Debug.js';\r\n\r\nconst FRAGMENT_MODEL_LOADING = 'loading';\r\nconst FRAGMENT_MODEL_EXECUTED = 'executed';\r\nconst FRAGMENT_MODEL_CANCELED = 'canceled';\r\nconst FRAGMENT_MODEL_FAILED = 'failed';\r\n\r\nfunction FragmentModel(config) {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let metricsModel = config.metricsModel;\r\n\r\n    let instance,\r\n        scheduleController,\r\n        executedRequests,\r\n        loadingRequests,\r\n        fragmentLoader;\r\n\r\n    function setup() {\r\n        scheduleController = null;\r\n        fragmentLoader = null;\r\n        executedRequests = [];\r\n        loadingRequests = [];\r\n\r\n        eventBus.on(Events.LOADING_COMPLETED, onLoadingCompleted, instance);\r\n    }\r\n\r\n    function setLoader(value) {\r\n        fragmentLoader = value;\r\n    }\r\n\r\n    function setScheduleController(value) {\r\n        scheduleController = value;\r\n    }\r\n\r\n    function getScheduleController() {\r\n        return scheduleController;\r\n    }\r\n\r\n    function isFragmentLoaded(request) {\r\n        var isEqualComplete = function (req1, req2) {\r\n            return ((req1.action === FragmentRequest.ACTION_COMPLETE) && (req1.action === req2.action));\r\n        };\r\n\r\n        var isEqualMedia = function (req1, req2) {\r\n            return !isNaN(req1.index) && (req1.index === req2.index) && (req1.startTime === req2.startTime) && (req1.adaptationIndex === req2.adaptationIndex);\r\n        };\r\n\r\n        var isEqualInit = function (req1, req2) {\r\n            return isNaN(req1.index) && isNaN(req2.index) && (req1.quality === req2.quality);\r\n        };\r\n\r\n        var check = function (arr) {\r\n            var req,\r\n                i;\r\n            var isLoaded = false;\r\n\r\n            var ln = arr.length;\r\n\r\n            for (i = 0; i < ln; i++) {\r\n                req = arr[i];\r\n\r\n                if (isEqualMedia(request, req) || isEqualInit(request, req) || isEqualComplete(request, req)) {\r\n                    //log(request.mediaType + \"Fragment already loaded for time: \" + request.startTime);\r\n                    isLoaded = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return isLoaded;\r\n        };\r\n\r\n        return (check(loadingRequests) || check(executedRequests));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Gets an array of {@link FragmentRequest} objects\r\n     *\r\n     * @param {object} filter The object with properties by which the method filters the requests to be returned.\r\n     *  the only mandatory property is state, which must be a value from\r\n     *  other properties should match the properties of {@link FragmentRequest}. E.g.:\r\n     *  getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, quality: 0}) - returns\r\n     *  all the requests from executedRequests array where requests.quality = filter.quality\r\n     *\r\n     * @returns {Array}\r\n     * @memberof FragmentModel#\r\n     */\r\n    function getRequests(filter) {\r\n        var requests = [];\r\n        var filteredRequests = [];\r\n        var ln = 1;\r\n        var states;\r\n\r\n        if (!filter || !filter.state) return requests;\r\n\r\n        if (filter.state instanceof Array) {\r\n            ln = filter.state.length;\r\n            states = filter.state;\r\n        } else {\r\n            states = [filter.state];\r\n        }\r\n\r\n        for (var i = 0; i < ln; i++) {\r\n            requests = getRequestsForState(states[i]);\r\n            filteredRequests = filteredRequests.concat(filterRequests(requests, filter));\r\n        }\r\n\r\n        return filteredRequests;\r\n    }\r\n\r\n    function removeExecutedRequestsBeforeTime(time) {\r\n        var lastIdx = executedRequests.length - 1;\r\n        var start = NaN;\r\n        var req = null;\r\n        var i;\r\n\r\n        // loop through the executed requests and remove the ones for which startTime is less than the given time\r\n        for (i = lastIdx; i >= 0; i--) {\r\n            req = executedRequests[i];\r\n            start = req.startTime;\r\n            if (!isNaN(start) && (start < time)) {\r\n                removeRequest(executedRequests, req);\r\n            }\r\n        }\r\n    }\r\n\r\n    function abortRequests() {\r\n        var reqs = [];\r\n        fragmentLoader.abort();\r\n\r\n        while (loadingRequests.length > 0) {\r\n            reqs.push(loadingRequests[0]);\r\n            removeRequest(loadingRequests, loadingRequests[0]);\r\n        }\r\n\r\n        loadingRequests = [];\r\n\r\n        return reqs;\r\n    }\r\n\r\n    function executeRequest(request) {\r\n        if (!request) return;\r\n\r\n        switch (request.action) {\r\n            case FragmentRequest.ACTION_COMPLETE:\r\n                // Stream has completed, execute the corresponding callback\r\n                executedRequests.push(request);\r\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_EXECUTED);\r\n                eventBus.trigger(Events.STREAM_COMPLETED, {request: request, fragmentModel: this});\r\n                break;\r\n            case FragmentRequest.ACTION_DOWNLOAD:\r\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_LOADING);\r\n                loadingRequests.push(request);\r\n                loadCurrentFragment(request);\r\n                break;\r\n            default:\r\n                log('Unknown request action.');\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.LOADING_COMPLETED, onLoadingCompleted, this);\r\n\r\n        if (fragmentLoader) {\r\n            fragmentLoader.reset();\r\n            fragmentLoader = null;\r\n        }\r\n\r\n        context = null;\r\n        executedRequests = [];\r\n        loadingRequests = [];\r\n    }\r\n\r\n    function loadCurrentFragment(request) {\r\n        eventBus.trigger(Events.FRAGMENT_LOADING_STARTED, {sender: instance, request: request});\r\n        fragmentLoader.load(request);\r\n    }\r\n\r\n    function removeRequest(arr, request) {\r\n        var idx = arr.indexOf(request);\r\n\r\n        if (idx !== -1) {\r\n            arr.splice(idx, 1);\r\n        }\r\n    }\r\n\r\n    function getRequestForTime(arr, time, threshold) {\r\n        var lastIdx = arr.length - 1;\r\n        var start = NaN;\r\n        var end = NaN;\r\n        var req = null;\r\n        var i;\r\n\r\n        // loop through the executed requests and pick the one for which the playback interval matches the given time\r\n        for (i = lastIdx; i >= 0; i--) {\r\n            req = arr[i];\r\n            start = req.startTime;\r\n            end = start + req.duration;\r\n            threshold = threshold || (req.duration / 2);\r\n            if ((!isNaN(start) && !isNaN(end) && ((time + threshold) >= start) && ((time - threshold) < end)) || (isNaN(start) && isNaN(time))) {\r\n                return req;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function filterRequests(arr, filter) {\r\n        if (!filter) return arr;\r\n\r\n        // for time use a specific filtration function\r\n        if (filter.hasOwnProperty('time')) {\r\n            return [getRequestForTime(arr, filter.time, filter.threshold)];\r\n        }\r\n\r\n        return arr.filter(function (request/*, idx, arr*/) {\r\n            for (var prop in filter) {\r\n                if (prop === 'state') continue;\r\n\r\n                if (filter.hasOwnProperty(prop) && request[prop] != filter[prop]) return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    function getRequestsForState(state) {\r\n        var requests;\r\n\r\n        switch (state) {\r\n            case FRAGMENT_MODEL_LOADING:\r\n                requests = loadingRequests;\r\n                break;\r\n            case FRAGMENT_MODEL_EXECUTED:\r\n                requests = executedRequests;\r\n                break;\r\n            default:\r\n                requests = [];\r\n        }\r\n\r\n        return requests;\r\n    }\r\n\r\n    function addSchedulingInfoMetrics(request, state) {\r\n        if (!request) return;\r\n\r\n        var mediaType = request.mediaType;\r\n        var now = new Date();\r\n        var type = request.type;\r\n        var startTime = request.startTime;\r\n        var availabilityStartTime = request.availabilityStartTime;\r\n        var duration = request.duration;\r\n        var quality = request.quality;\r\n        var range = request.range;\r\n\r\n        metricsModel.addSchedulingInfo(mediaType, now, type, startTime, availabilityStartTime, duration, quality, range, state);\r\n        metricsModel.addRequestsQueue(mediaType, loadingRequests, executedRequests);\r\n    }\r\n\r\n    function onLoadingCompleted(e) {\r\n        if (e.sender !== fragmentLoader) return;\r\n\r\n        var request = e.request;\r\n        var response = e.response;\r\n        var error = e.error;\r\n\r\n        loadingRequests.splice(loadingRequests.indexOf(request), 1);\r\n\r\n        if (response && !error) {\r\n            executedRequests.push(request);\r\n        }\r\n\r\n        addSchedulingInfoMetrics(request, error ? FRAGMENT_MODEL_FAILED : FRAGMENT_MODEL_EXECUTED);\r\n        eventBus.trigger(Events.FRAGMENT_LOADING_COMPLETED, { request: request, response: response, error: error, sender: this });\r\n    }\r\n\r\n    instance = {\r\n        setLoader: setLoader,\r\n        setScheduleController: setScheduleController,\r\n        getScheduleController: getScheduleController,\r\n        getRequests: getRequests,\r\n        isFragmentLoaded: isFragmentLoaded,\r\n        removeExecutedRequestsBeforeTime: removeExecutedRequestsBeforeTime,\r\n        abortRequests: abortRequests,\r\n        executeRequest: executeRequest,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nFragmentModel.__dashjs_factory_name = 'FragmentModel';\r\nlet factory = FactoryMaker.getClassFactory(FragmentModel);\r\nfactory.FRAGMENT_MODEL_LOADING = FRAGMENT_MODEL_LOADING;\r\nfactory.FRAGMENT_MODEL_EXECUTED = FRAGMENT_MODEL_EXECUTED;\r\nfactory.FRAGMENT_MODEL_CANCELED = FRAGMENT_MODEL_CANCELED;\r\nfactory.FRAGMENT_MODEL_FAILED = FRAGMENT_MODEL_FAILED;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction ManifestModel() {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        manifest;\r\n\r\n    function getValue() {\r\n        return manifest;\r\n    }\r\n\r\n    function setValue(value) {\r\n        manifest = value;\r\n        eventBus.trigger(Events.MANIFEST_LOADED,  {data: value});\r\n    }\r\n\r\n    instance = {\r\n        getValue: getValue,\r\n        setValue: setValue\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nManifestModel.__dashjs_factory_name = 'ManifestModel';\r\nexport default FactoryMaker.getSingletonFactory(ManifestModel);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport HTTPRequest from '../vo/metrics/HTTPRequest.js';\r\n\r\nconst DEFAULT_UTC_TIMING_SOURCE = { scheme: 'urn:mpeg:dash:utc:http-xsdate:2014', value: 'http://time.akamai.com/?iso' };\r\nconst LIVE_DELAY_FRAGMENT_COUNT = 4;\r\n\r\nconst DEFAULT_LOCAL_STORAGE_BITRATE_EXPIRATION = 360000;\r\nconst DEFAULT_LOCAL_STORAGE_MEDIA_SETTINGS_EXPIRATION = 360000;\r\n\r\nconst BANDWIDTH_SAFETY_FACTOR = 0.9;\r\nconst ABANDON_LOAD_TIMEOUT = 10000;\r\n\r\nconst BUFFER_TO_KEEP = 30;\r\nconst BUFFER_PRUNING_INTERVAL = 30;\r\nconst DEFAULT_MIN_BUFFER_TIME = 12;\r\nconst BUFFER_TIME_AT_TOP_QUALITY = 30;\r\nconst BUFFER_TIME_AT_TOP_QUALITY_LONG_FORM = 60;\r\nconst LONG_FORM_CONTENT_DURATION_THRESHOLD = 600;\r\nconst RICH_BUFFER_THRESHOLD = 20;\r\n\r\nconst FRAGMENT_RETRY_ATTEMPTS = 3;\r\nconst FRAGMENT_RETRY_INTERVAL = 1000;\r\n\r\nconst MANIFEST_RETRY_ATTEMPTS = 3;\r\nconst MANIFEST_RETRY_INTERVAL = 500;\r\n\r\nconst XLINK_RETRY_ATTEMPTS = 1;\r\nconst XLINK_RETRY_INTERVAL = 500;\r\n\r\n//This value influences the startup time for live (in ms).\r\nconst WALLCLOCK_TIME_UPDATE_INTERVAL = 50;\r\n\r\nfunction MediaPlayerModel() {\r\n\r\n    let instance,\r\n        useManifestDateHeaderTimeSource,\r\n        useSuggestedPresentationDelay,\r\n        UTCTimingSources,\r\n        liveDelayFragmentCount,\r\n        liveDelay,\r\n        scheduleWhilePaused,\r\n        bufferToKeep,\r\n        bufferPruningInterval,\r\n        lastBitrateCachingInfo,\r\n        lastMediaSettingsCachingInfo,\r\n        stableBufferTime,\r\n        bufferTimeAtTopQuality,\r\n        bufferTimeAtTopQualityLongForm,\r\n        longFormContentDurationThreshold,\r\n        richBufferThreshold,\r\n        bandwidthSafetyFactor,\r\n        abandonLoadTimeout,\r\n        retryAttempts,\r\n        retryIntervals,\r\n        wallclockTimeUpdateInterval,\r\n        bufferOccupancyABREnabled;\r\n\r\n    function setup() {\r\n        UTCTimingSources = [];\r\n        useSuggestedPresentationDelay = false;\r\n        useManifestDateHeaderTimeSource = true;\r\n        scheduleWhilePaused = true;\r\n        bufferOccupancyABREnabled = false;\r\n        lastBitrateCachingInfo = {enabled: true , ttl: DEFAULT_LOCAL_STORAGE_BITRATE_EXPIRATION};\r\n        lastMediaSettingsCachingInfo = {enabled: true , ttl: DEFAULT_LOCAL_STORAGE_MEDIA_SETTINGS_EXPIRATION};\r\n        liveDelayFragmentCount = LIVE_DELAY_FRAGMENT_COUNT;\r\n        liveDelay = undefined; // Explicitly state that default is undefined\r\n        bufferToKeep = BUFFER_TO_KEEP;\r\n        bufferPruningInterval = BUFFER_PRUNING_INTERVAL;\r\n        stableBufferTime = DEFAULT_MIN_BUFFER_TIME;\r\n        bufferTimeAtTopQuality = BUFFER_TIME_AT_TOP_QUALITY;\r\n        bufferTimeAtTopQualityLongForm = BUFFER_TIME_AT_TOP_QUALITY_LONG_FORM;\r\n        longFormContentDurationThreshold = LONG_FORM_CONTENT_DURATION_THRESHOLD;\r\n        richBufferThreshold = RICH_BUFFER_THRESHOLD;\r\n        bandwidthSafetyFactor = BANDWIDTH_SAFETY_FACTOR;\r\n        abandonLoadTimeout = ABANDON_LOAD_TIMEOUT;\r\n        wallclockTimeUpdateInterval = WALLCLOCK_TIME_UPDATE_INTERVAL;\r\n\r\n        retryAttempts = {\r\n            [HTTPRequest.MPD_TYPE]:                         MANIFEST_RETRY_ATTEMPTS,\r\n            [HTTPRequest.XLINK_EXPANSION_TYPE]:             XLINK_RETRY_ATTEMPTS,\r\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]:               FRAGMENT_RETRY_ATTEMPTS,\r\n            [HTTPRequest.INIT_SEGMENT_TYPE]:                FRAGMENT_RETRY_ATTEMPTS,\r\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: FRAGMENT_RETRY_ATTEMPTS,\r\n            [HTTPRequest.INDEX_SEGMENT_TYPE]:               FRAGMENT_RETRY_ATTEMPTS,\r\n            [HTTPRequest.OTHER_TYPE]:                       FRAGMENT_RETRY_ATTEMPTS\r\n        };\r\n\r\n        retryIntervals = {\r\n            [HTTPRequest.MPD_TYPE]:                         MANIFEST_RETRY_INTERVAL,\r\n            [HTTPRequest.XLINK_EXPANSION_TYPE]:             XLINK_RETRY_INTERVAL,\r\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]:               FRAGMENT_RETRY_INTERVAL,\r\n            [HTTPRequest.INIT_SEGMENT_TYPE]:                FRAGMENT_RETRY_INTERVAL,\r\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: FRAGMENT_RETRY_INTERVAL,\r\n            [HTTPRequest.INDEX_SEGMENT_TYPE]:               FRAGMENT_RETRY_INTERVAL,\r\n            [HTTPRequest.OTHER_TYPE]:                       FRAGMENT_RETRY_INTERVAL\r\n        };\r\n    }\r\n\r\n    //TODO Should we use Object.define to have setters/getters? makes more readable code on other side.\r\n    function setBufferOccupancyABREnabled(value) {\r\n        bufferOccupancyABREnabled = value;\r\n    }\r\n\r\n    function getBufferOccupancyABREnabled() {\r\n        return bufferOccupancyABREnabled;\r\n    }\r\n\r\n    function setBandwidthSafetyFactor(value) {\r\n        bandwidthSafetyFactor = value;\r\n    }\r\n\r\n    function getBandwidthSafetyFactor() {\r\n        return bandwidthSafetyFactor;\r\n    }\r\n\r\n    function setAbandonLoadTimeout(value) {\r\n        abandonLoadTimeout = value;\r\n    }\r\n\r\n    function getAbandonLoadTimeout() {\r\n        return abandonLoadTimeout;\r\n    }\r\n\r\n    function setStableBufferTime (value) {\r\n        stableBufferTime = value;\r\n    }\r\n\r\n    function getStableBufferTime() {\r\n        return stableBufferTime;\r\n    }\r\n\r\n    function setBufferTimeAtTopQuality(value) {\r\n        bufferTimeAtTopQuality = value;\r\n    }\r\n\r\n    function getBufferTimeAtTopQuality() {\r\n        return bufferTimeAtTopQuality;\r\n    }\r\n\r\n    function setBufferTimeAtTopQualityLongForm(value) {\r\n        bufferTimeAtTopQualityLongForm = value;\r\n    }\r\n\r\n    function getBufferTimeAtTopQualityLongForm() {\r\n        return bufferTimeAtTopQualityLongForm;\r\n    }\r\n\r\n    function setLongFormContentDurationThreshold(value) {\r\n        longFormContentDurationThreshold = value;\r\n    }\r\n\r\n    function getLongFormContentDurationThreshold() {\r\n        return longFormContentDurationThreshold;\r\n    }\r\n\r\n    function setRichBufferThreshold(value) {\r\n        richBufferThreshold = value;\r\n    }\r\n\r\n    function getRichBufferThreshold() {\r\n        return richBufferThreshold;\r\n    }\r\n\r\n\r\n    function setBufferToKeep(value) {\r\n        bufferToKeep = value;\r\n    }\r\n\r\n    function getBufferToKeep() {\r\n        return bufferToKeep;\r\n    }\r\n\r\n    function setLastBitrateCachingInfo(enable, ttl) {\r\n        lastBitrateCachingInfo.enabled = enable;\r\n        if (ttl !== undefined && !isNaN(ttl) && typeof (ttl) === 'number') {\r\n            lastBitrateCachingInfo.ttl = ttl;\r\n        }\r\n    }\r\n\r\n    function getLastBitrateCachingInfo() {\r\n        return lastBitrateCachingInfo;\r\n    }\r\n\r\n    function setLastMediaSettingsCachingInfo(enable, ttl) {\r\n        lastMediaSettingsCachingInfo.enabled = enable;\r\n        if (ttl !== undefined && !isNaN(ttl) && typeof (ttl) === 'number') {\r\n            lastMediaSettingsCachingInfo.ttl = ttl;\r\n        }\r\n    }\r\n\r\n    function getLastMediaSettingsCachingInfo() {\r\n        return lastMediaSettingsCachingInfo;\r\n    }\r\n\r\n    function setBufferPruningInterval(value) {\r\n        bufferPruningInterval = value;\r\n    }\r\n\r\n    function getBufferPruningInterval() {\r\n        return bufferPruningInterval;\r\n    }\r\n\r\n    function setFragmentRetryAttempts(value) {\r\n        retryAttempts[HTTPRequest.MEDIA_SEGMENT_TYPE] = value;\r\n    }\r\n\r\n    function setRetryAttemptsForType(type, value) {\r\n        retryAttempts[type] = value;\r\n    }\r\n\r\n    function getFragmentRetryAttempts() {\r\n        return retryAttempts[HTTPRequest.MEDIA_SEGMENT_TYPE];\r\n    }\r\n\r\n    function getRetryAttemptsForType(type) {\r\n        return retryAttempts[type];\r\n    }\r\n\r\n    function setFragmentRetryInterval(value) {\r\n        retryIntervals[HTTPRequest.MEDIA_SEGMENT_TYPE] = value;\r\n    }\r\n\r\n    function setRetryIntervalForType(type, value) {\r\n        retryIntervals[type] = value;\r\n    }\r\n\r\n    function getFragmentRetryInterval() {\r\n        return retryIntervals[HTTPRequest.MEDIA_SEGMENT_TYPE];\r\n    }\r\n\r\n    function getRetryIntervalForType(type) {\r\n        return retryIntervals[type];\r\n    }\r\n\r\n    function setWallclockTimeUpdateInterval(value) {\r\n        wallclockTimeUpdateInterval = value;\r\n    }\r\n\r\n    function getWallclockTimeUpdateInterval() {\r\n        return wallclockTimeUpdateInterval;\r\n    }\r\n\r\n    function setScheduleWhilePaused(value) {\r\n        scheduleWhilePaused = value;\r\n    }\r\n\r\n    function getScheduleWhilePaused() {\r\n        return scheduleWhilePaused;\r\n    }\r\n\r\n    function setLiveDelayFragmentCount(value) {\r\n        liveDelayFragmentCount = value;\r\n    }\r\n\r\n    function setLiveDelay(value) {\r\n        liveDelay = value;\r\n    }\r\n\r\n    function getLiveDelayFragmentCount() {\r\n        return liveDelayFragmentCount;\r\n    }\r\n\r\n    function getLiveDelay() {\r\n        return liveDelay;\r\n    }\r\n\r\n    function setUseManifestDateHeaderTimeSource(value) {\r\n        useManifestDateHeaderTimeSource = value;\r\n    }\r\n\r\n    function getUseManifestDateHeaderTimeSource() {\r\n        return useManifestDateHeaderTimeSource;\r\n    }\r\n\r\n    function setUseSuggestedPresentationDelay(value) {\r\n        useSuggestedPresentationDelay = value;\r\n    }\r\n\r\n    function getUseSuggestedPresentationDelay() {\r\n        return useSuggestedPresentationDelay;\r\n    }\r\n\r\n    function setUTCTimingSources(value) {\r\n        UTCTimingSources = value;\r\n    }\r\n\r\n    function getUTCTimingSources() {\r\n        return UTCTimingSources;\r\n    }\r\n\r\n    function reset() {\r\n        //TODO need to figure out what props to persist across sessions and which to reset if any.\r\n        //setup();\r\n    }\r\n\r\n    instance = {\r\n        setBufferOccupancyABREnabled: setBufferOccupancyABREnabled,\r\n        getBufferOccupancyABREnabled: getBufferOccupancyABREnabled,\r\n        setBandwidthSafetyFactor: setBandwidthSafetyFactor,\r\n        getBandwidthSafetyFactor: getBandwidthSafetyFactor,\r\n        setAbandonLoadTimeout: setAbandonLoadTimeout,\r\n        getAbandonLoadTimeout: getAbandonLoadTimeout,\r\n        setLastBitrateCachingInfo: setLastBitrateCachingInfo,\r\n        getLastBitrateCachingInfo: getLastBitrateCachingInfo,\r\n        setLastMediaSettingsCachingInfo: setLastMediaSettingsCachingInfo,\r\n        getLastMediaSettingsCachingInfo: getLastMediaSettingsCachingInfo,\r\n        setStableBufferTime: setStableBufferTime,\r\n        getStableBufferTime: getStableBufferTime,\r\n        setBufferTimeAtTopQuality: setBufferTimeAtTopQuality,\r\n        getBufferTimeAtTopQuality: getBufferTimeAtTopQuality,\r\n        setBufferTimeAtTopQualityLongForm: setBufferTimeAtTopQualityLongForm,\r\n        getBufferTimeAtTopQualityLongForm: getBufferTimeAtTopQualityLongForm,\r\n        setLongFormContentDurationThreshold: setLongFormContentDurationThreshold,\r\n        getLongFormContentDurationThreshold: getLongFormContentDurationThreshold,\r\n        setRichBufferThreshold: setRichBufferThreshold,\r\n        getRichBufferThreshold: getRichBufferThreshold,\r\n        setBufferToKeep: setBufferToKeep,\r\n        getBufferToKeep: getBufferToKeep,\r\n        setBufferPruningInterval: setBufferPruningInterval,\r\n        getBufferPruningInterval: getBufferPruningInterval,\r\n        setFragmentRetryAttempts: setFragmentRetryAttempts,\r\n        getFragmentRetryAttempts: getFragmentRetryAttempts,\r\n        setRetryAttemptsForType: setRetryAttemptsForType,\r\n        getRetryAttemptsForType: getRetryAttemptsForType,\r\n        setFragmentRetryInterval: setFragmentRetryInterval,\r\n        getFragmentRetryInterval: getFragmentRetryInterval,\r\n        setRetryIntervalForType: setRetryIntervalForType,\r\n        getRetryIntervalForType: getRetryIntervalForType,\r\n        setWallclockTimeUpdateInterval: setWallclockTimeUpdateInterval,\r\n        getWallclockTimeUpdateInterval: getWallclockTimeUpdateInterval,\r\n        setScheduleWhilePaused: setScheduleWhilePaused,\r\n        getScheduleWhilePaused: getScheduleWhilePaused,\r\n        getUseSuggestedPresentationDelay: getUseSuggestedPresentationDelay,\r\n        setUseSuggestedPresentationDelay: setUseSuggestedPresentationDelay,\r\n        setLiveDelayFragmentCount: setLiveDelayFragmentCount,\r\n        getLiveDelayFragmentCount: getLiveDelayFragmentCount,\r\n        getLiveDelay: getLiveDelay,\r\n        setLiveDelay: setLiveDelay,\r\n        setUseManifestDateHeaderTimeSource: setUseManifestDateHeaderTimeSource,\r\n        getUseManifestDateHeaderTimeSource: getUseManifestDateHeaderTimeSource,\r\n        setUTCTimingSources: setUTCTimingSources,\r\n        getUTCTimingSources: getUTCTimingSources,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\n//TODO see if you can move this and not export and just getter to get default value.\r\nMediaPlayerModel.__dashjs_factory_name = 'MediaPlayerModel';\r\nlet factory = FactoryMaker.getSingletonFactory(MediaPlayerModel);\r\nfactory.DEFAULT_UTC_TIMING_SOURCE = DEFAULT_UTC_TIMING_SOURCE;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport MetricsList from '../vo/MetricsList.js';\r\nimport TCPConnection from '../vo/metrics/TCPConnection.js';\r\nimport HTTPRequest from '../vo/metrics/HTTPRequest.js';\r\nimport TrackSwitch from '../vo/metrics/RepresentationSwitch.js';\r\nimport BufferLevel from '../vo/metrics/BufferLevel.js';\r\nimport BufferState from '../vo/metrics/BufferState.js';\r\nimport DVRInfo from '../vo/metrics/DVRInfo.js';\r\nimport DroppedFrames from '../vo/metrics/DroppedFrames.js';\r\nimport ManifestUpdate from '../vo/metrics/ManifestUpdate.js';\r\nimport SchedulingInfo from '../vo/metrics/SchedulingInfo.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport RequestsQueue from '../vo/metrics/RequestsQueue.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport BolaState from '../vo/metrics/BolaState.js';\r\n\r\nfunction MetricsModel() {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        adapter,\r\n        streamMetrics;\r\n\r\n    function setup() {\r\n        streamMetrics = {};\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.adapter) {\r\n            adapter = config.adapter;\r\n        }\r\n    }\r\n\r\n    function metricsChanged() {\r\n        eventBus.trigger(Events.METRICS_CHANGED);\r\n    }\r\n\r\n    function metricChanged(mediaType) {\r\n        eventBus.trigger(Events.METRIC_CHANGED, {mediaType: mediaType});\r\n        metricsChanged();\r\n    }\r\n\r\n    function metricUpdated(mediaType, metricType, vo) {\r\n        eventBus.trigger(Events.METRIC_UPDATED, {mediaType: mediaType, metric: metricType, value: vo});\r\n        metricChanged(mediaType);\r\n    }\r\n\r\n    function metricAdded(mediaType, metricType, vo) {\r\n        eventBus.trigger(Events.METRIC_ADDED, {mediaType: mediaType, metric: metricType, value: vo});\r\n        metricChanged(mediaType);\r\n    }\r\n\r\n    function clearCurrentMetricsForType(type) {\r\n        delete streamMetrics[type];\r\n        metricChanged(type);\r\n    }\r\n\r\n    function clearAllCurrentMetrics() {\r\n        streamMetrics = {};\r\n        metricsChanged();\r\n    }\r\n\r\n    function getReadOnlyMetricsFor(type) {\r\n        if (streamMetrics.hasOwnProperty(type)) {\r\n            return streamMetrics[type];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getMetricsFor(type) {\r\n        var metrics;\r\n\r\n        if (streamMetrics.hasOwnProperty(type)) {\r\n            metrics = streamMetrics[type];\r\n        } else {\r\n            metrics = new MetricsList();\r\n            streamMetrics[type] = metrics;\r\n        }\r\n\r\n        return metrics;\r\n    }\r\n\r\n    function addTcpConnection(mediaType, tcpid, dest, topen, tclose, tconnect) {\r\n        var vo = new TCPConnection();\r\n\r\n        vo.tcpid = tcpid;\r\n        vo.dest = dest;\r\n        vo.topen = topen;\r\n        vo.tclose = tclose;\r\n        vo.tconnect = tconnect;\r\n\r\n        getMetricsFor(mediaType).TcpList.push(vo);\r\n\r\n        metricAdded(mediaType, adapter.metricsList.TCP_CONNECTION, vo);\r\n        return vo;\r\n    }\r\n\r\n    function appendHttpTrace(httpRequest, s, d, b) {\r\n        var vo = new HTTPRequest.Trace();\r\n\r\n        vo.s = s;\r\n        vo.d = d;\r\n        vo.b = b;\r\n\r\n        httpRequest.trace.push(vo);\r\n\r\n        if (!httpRequest.interval) {\r\n            httpRequest.interval = 0;\r\n        }\r\n\r\n        httpRequest.interval += d;\r\n\r\n        return vo;\r\n    }\r\n\r\n    function addHttpRequest(mediaType, tcpid, type, url, actualurl, serviceLocation, range, trequest, tresponse, tfinish, responsecode, mediaduration, responseHeaders, traces) {\r\n        var vo = new HTTPRequest();\r\n\r\n        // ISO 23009-1 D.4.3 NOTE 2:\r\n        // All entries for a given object will have the same URL and range\r\n        // and so can easily be correlated. If there were redirects or\r\n        // failures there will be one entry for each redirect/failure.\r\n        // The redirect-to URL or alternative url (where multiple have been\r\n        // provided in the MPD) will appear as the actualurl of the next\r\n        // entry with the same url value.\r\n        if (actualurl && (actualurl !== url)) {\r\n\r\n            // given the above, add an entry for the original request\r\n            addHttpRequest(\r\n                mediaType,\r\n                null,\r\n                type,\r\n                url,\r\n                null,\r\n                null,\r\n                range,\r\n                trequest,\r\n                null, // unknown\r\n                null, // unknown\r\n                null, // unknown, probably a 302\r\n                mediaduration,\r\n                null,\r\n                null\r\n            );\r\n\r\n            vo.actualurl = actualurl;\r\n        }\r\n\r\n        vo.tcpid = tcpid;\r\n        vo.type = type;\r\n        vo.url = url;\r\n        vo.range = range;\r\n        vo.trequest = trequest;\r\n        vo.tresponse = tresponse;\r\n        vo.responsecode = responsecode;\r\n\r\n        vo._tfinish = tfinish;\r\n        vo._stream = mediaType;\r\n        vo._mediaduration = mediaduration;\r\n        vo._responseHeaders = responseHeaders;\r\n        vo._serviceLocation = serviceLocation;\r\n\r\n        if (traces) {\r\n            traces.forEach(trace => {\r\n                appendHttpTrace(vo, trace.s, trace.d, trace.b);\r\n            });\r\n        } else {\r\n            // The interval and trace shall be absent for redirect and failure records.\r\n            delete vo.interval;\r\n            delete vo.trace;\r\n        }\r\n\r\n        getMetricsFor(mediaType).HttpList.push(vo);\r\n\r\n        metricAdded(mediaType, adapter.metricsList.HTTP_REQUEST, vo);\r\n        return vo;\r\n    }\r\n\r\n    function addRepresentationSwitch(mediaType, t, mt, to, lto) {\r\n        var vo = new TrackSwitch();\r\n\r\n        vo.t = t;\r\n        vo.mt = mt;\r\n        vo.to = to;\r\n\r\n        if (lto) {\r\n            vo.lto = lto;\r\n        } else {\r\n            delete vo.lto;\r\n        }\r\n\r\n        getMetricsFor(mediaType).RepSwitchList.push(vo);\r\n\r\n        metricAdded(mediaType, adapter.metricsList.TRACK_SWITCH, vo);\r\n        return vo;\r\n    }\r\n\r\n    function addBufferLevel(mediaType, t, level) {\r\n        var vo = new BufferLevel();\r\n        vo.t = t;\r\n        vo.level = level;\r\n        getMetricsFor(mediaType).BufferLevel.push(vo);\r\n\r\n        metricAdded(mediaType, adapter.metricsList.BUFFER_LEVEL, vo);\r\n        return vo;\r\n    }\r\n\r\n    function addBufferState(mediaType, state, target) {\r\n        var vo = new BufferState();\r\n        vo.target = target;\r\n        vo.state = state;\r\n        getMetricsFor(mediaType).BufferState.push(vo);\r\n\r\n        metricAdded(mediaType, adapter.metricsList.BUFFER_STATE, vo);\r\n        return vo;\r\n    }\r\n\r\n\r\n    function addDVRInfo(mediaType, currentTime, mpd, range) {\r\n        var vo = new DVRInfo();\r\n\r\n        vo.time = currentTime ;\r\n        vo.range = range;\r\n        vo.manifestInfo = mpd;\r\n\r\n        getMetricsFor(mediaType).DVRInfo.push(vo);\r\n        metricAdded(mediaType, adapter.metricsList.DVR_INFO, vo);\r\n\r\n        return vo;\r\n    }\r\n\r\n    function addDroppedFrames(mediaType, quality) {\r\n        var vo = new DroppedFrames();\r\n        var list = getMetricsFor(mediaType).DroppedFrames;\r\n\r\n        vo.time = quality.creationTime;\r\n        vo.droppedFrames = quality.droppedVideoFrames;\r\n\r\n        if (list.length > 0 && list[list.length - 1] == vo) {\r\n            return list[list.length - 1];\r\n        }\r\n\r\n        list.push(vo);\r\n\r\n        metricAdded(mediaType, adapter.metricsList.DROPPED_FRAMES, vo);\r\n        return vo;\r\n    }\r\n\r\n    function addSchedulingInfo(mediaType, t, type, startTime, availabilityStartTime, duration, quality, range, state) {\r\n        var vo = new SchedulingInfo();\r\n\r\n        vo.mediaType = mediaType;\r\n        vo.t = t;\r\n\r\n        vo.type = type;\r\n        vo.startTime = startTime;\r\n        vo.availabilityStartTime = availabilityStartTime;\r\n        vo.duration = duration;\r\n        vo.quality = quality;\r\n        vo.range = range;\r\n\r\n        vo.state = state;\r\n\r\n        getMetricsFor(mediaType).SchedulingInfo.push(vo);\r\n\r\n        metricAdded(mediaType, adapter.metricsList.SCHEDULING_INFO, vo);\r\n        return vo;\r\n    }\r\n\r\n    function addRequestsQueue(mediaType, loadingRequests, executedRequests) {\r\n        var vo = new RequestsQueue();\r\n        vo.loadingRequests = loadingRequests;\r\n        vo.executedRequests = executedRequests;\r\n\r\n        getMetricsFor(mediaType).RequestsQueue = vo;\r\n        metricAdded(mediaType, adapter.metricsList.REQUESTS_QUEUE, vo);\r\n    }\r\n\r\n    function addManifestUpdate(mediaType, type, requestTime, fetchTime, availabilityStartTime, presentationStartTime, clientTimeOffset, currentTime, buffered, latency) {\r\n        var vo = new ManifestUpdate();\r\n        var metrics = getMetricsFor('stream');\r\n\r\n        vo.mediaType = mediaType;\r\n        vo.type = type;\r\n        vo.requestTime = requestTime; // when this manifest update was requested\r\n        vo.fetchTime = fetchTime; // when this manifest update was received\r\n        vo.availabilityStartTime = availabilityStartTime;\r\n        vo.presentationStartTime = presentationStartTime; // the seek point (liveEdge for dynamic, Stream[0].startTime for static)\r\n        vo.clientTimeOffset = clientTimeOffset; // the calculated difference between the server and client wall clock time\r\n        vo.currentTime = currentTime; // actual element.currentTime\r\n        vo.buffered = buffered; // actual element.ranges\r\n        vo.latency = latency; // (static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - currentTime)\r\n\r\n        metrics.ManifestUpdate.push(vo);\r\n        metricAdded(mediaType, adapter.metricsList.MANIFEST_UPDATE, vo);\r\n\r\n        return vo;\r\n    }\r\n\r\n    function updateManifestUpdateInfo(manifestUpdate, updatedFields) {\r\n        if (manifestUpdate) {\r\n            for (var field in updatedFields) {\r\n                manifestUpdate[field] = updatedFields[field];\r\n            }\r\n\r\n            metricUpdated(manifestUpdate.mediaType, adapter.metricsList.MANIFEST_UPDATE, manifestUpdate);\r\n        }\r\n    }\r\n\r\n    function addManifestUpdateStreamInfo(manifestUpdate, id, index, start, duration) {\r\n        if (manifestUpdate) {\r\n            var vo = new ManifestUpdate.StreamInfo();\r\n\r\n            vo.id = id;\r\n            vo.index = index;\r\n            vo.start = start;\r\n            vo.duration = duration;\r\n\r\n            manifestUpdate.streamInfo.push(vo);\r\n            metricUpdated(manifestUpdate.mediaType, adapter.metricsList.MANIFEST_UPDATE_STREAM_INFO, manifestUpdate);\r\n\r\n            return vo;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function addManifestUpdateRepresentationInfo(manifestUpdate, id, index, streamIndex, mediaType, presentationTimeOffset, startNumber, fragmentInfoType) {\r\n        if (manifestUpdate) {\r\n            var vo = new ManifestUpdate.TrackInfo();\r\n\r\n            vo.id = id;\r\n            vo.index = index;\r\n            vo.streamIndex = streamIndex;\r\n            vo.mediaType = mediaType;\r\n            vo.startNumber = startNumber;\r\n            vo.fragmentInfoType = fragmentInfoType;\r\n            vo.presentationTimeOffset = presentationTimeOffset;\r\n\r\n            manifestUpdate.trackInfo.push(vo);\r\n            metricUpdated(manifestUpdate.mediaType, adapter.metricsList.MANIFEST_UPDATE_TRACK_INFO, manifestUpdate);\r\n\r\n            return vo;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function addPlayList(vo) {\r\n        var type = 'stream';\r\n\r\n        if (vo.trace && Array.isArray(vo.trace)) {\r\n            vo.trace.forEach(trace => {\r\n                if (trace.hasOwnProperty('subreplevel') && !trace.subreplevel) {\r\n                    delete trace.subreplevel;\r\n                }\r\n            });\r\n        } else {\r\n            delete vo.trace;\r\n        }\r\n\r\n        getMetricsFor(type).PlayList.push(vo);\r\n\r\n        metricAdded(type, adapter.metricsList.PLAY_LIST, vo);\r\n        return vo;\r\n    }\r\n\r\n    function addDVBErrors(vo) {\r\n        var type = 'stream';\r\n\r\n        getMetricsFor(type).DVBErrors.push(vo);\r\n\r\n        metricAdded(type, adapter.metricsList.DVB_ERRORS, vo);\r\n\r\n        return vo;\r\n    }\r\n\r\n    function updateBolaState(mediaType, _s) {\r\n        var vo = new BolaState();\r\n        vo._s = _s;\r\n        getMetricsFor(mediaType).BolaState = [vo];\r\n\r\n        metricAdded(mediaType, 'BolaState', vo);\r\n        return vo;\r\n    }\r\n\r\n    instance = {\r\n        metricsChanged: metricsChanged,\r\n        metricChanged: metricChanged,\r\n        metricUpdated: metricUpdated,\r\n        metricAdded: metricAdded,\r\n        clearCurrentMetricsForType: clearCurrentMetricsForType,\r\n        clearAllCurrentMetrics: clearAllCurrentMetrics,\r\n        getReadOnlyMetricsFor: getReadOnlyMetricsFor,\r\n        getMetricsFor: getMetricsFor,\r\n        addTcpConnection: addTcpConnection,\r\n        addHttpRequest: addHttpRequest,\r\n        addRepresentationSwitch: addRepresentationSwitch,\r\n        addBufferLevel: addBufferLevel,\r\n        addBufferState: addBufferState,\r\n        addDVRInfo: addDVRInfo,\r\n        addDroppedFrames: addDroppedFrames,\r\n        addSchedulingInfo: addSchedulingInfo,\r\n        addRequestsQueue: addRequestsQueue,\r\n        addManifestUpdate: addManifestUpdate,\r\n        updateManifestUpdateInfo: updateManifestUpdateInfo,\r\n        addManifestUpdateStreamInfo: addManifestUpdateStreamInfo,\r\n        addManifestUpdateRepresentationInfo: addManifestUpdateRepresentationInfo,\r\n        addPlayList: addPlayList,\r\n        addDVBErrors: addDVBErrors,\r\n        updateBolaState: updateBolaState,\r\n        setConfig: setConfig\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nMetricsModel.__dashjs_factory_name = 'MetricsModel';\r\nexport default FactoryMaker.getSingletonFactory(MetricsModel);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport URIFragmentData from '../vo/URIFragmentData.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction URIQueryAndFragmentModel() {\r\n\r\n    let instance,\r\n        URIFragmentDataVO,\r\n        URIQueryData,\r\n        isHTTPS;\r\n\r\n    function initialize() {\r\n        URIFragmentDataVO = new URIFragmentData();\r\n        URIQueryData = [];\r\n        isHTTPS = false;\r\n    }\r\n\r\n    function getURIFragmentData() {\r\n        return URIFragmentDataVO;\r\n    }\r\n\r\n    function getURIQueryData() {\r\n        return URIQueryData;\r\n    }\r\n\r\n    function isManifestHTTPS() {\r\n        return isHTTPS;\r\n    }\r\n\r\n    function parseURI(uri) {\r\n        if (!uri) return null;\r\n\r\n        var URIFragmentData = [];\r\n        var mappedArr;\r\n\r\n        var testQuery = new RegExp(/[?]/);\r\n        var testFragment = new RegExp(/[#]/);\r\n        var testHTTPS = new RegExp(/^(https:)?\\/\\//i);\r\n        var isQuery = testQuery.test(uri);\r\n        var isFragment = testFragment.test(uri);\r\n\r\n        isHTTPS = testHTTPS.test(uri);\r\n\r\n        function reduceArray(previousValue, currentValue, index, array) {\r\n            var arr =  array[0].split(/[=]/);\r\n            array.push({key: arr[0], value: arr[1]});\r\n            array.shift();\r\n            return array;\r\n        }\r\n\r\n        function mapArray(currentValue, index, array) {\r\n            if (index > 0)\r\n            {\r\n                if (isQuery && URIQueryData.length === 0) {\r\n                    URIQueryData = array[index].split(/[&]/);\r\n                } else if (isFragment) {\r\n                    URIFragmentData = array[index].split(/[&]/);\r\n                }\r\n            }\r\n\r\n            return array;\r\n        }\r\n\r\n        mappedArr = uri.split(/[?#]/).map(mapArray);\r\n\r\n        if (URIQueryData.length > 0) {\r\n            URIQueryData = URIQueryData.reduce(reduceArray, null);\r\n        }\r\n\r\n        if (URIFragmentData.length > 0) {\r\n            URIFragmentData = URIFragmentData.reduce(reduceArray, null);\r\n            URIFragmentData.forEach(function (object) {\r\n                URIFragmentDataVO[object.key] = object.value;\r\n            });\r\n        }\r\n\r\n        return uri;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        parseURI: parseURI,\r\n        getURIFragmentData: getURIFragmentData,\r\n        getURIQueryData: getURIQueryData,\r\n        isManifestHTTPS: isManifestHTTPS\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nURIQueryAndFragmentModel.__dashjs_factory_name = 'URIQueryAndFragmentModel';\r\nexport default FactoryMaker.getSingletonFactory(URIQueryAndFragmentModel);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction VideoModel() {\r\n\r\n    let instance,\r\n        element,\r\n        TTMLRenderingDiv,\r\n        videoContainer,\r\n        stalledStreams,\r\n        previousPlaybackRate;\r\n\r\n    function initialize() {\r\n        stalledStreams = [];\r\n    }\r\n\r\n    function setPlaybackRate(value) {\r\n        if (!element || element.readyState < 2) return;\r\n        element.playbackRate = value;\r\n    }\r\n\r\n    //TODO Move the DVR window calculations from MediaPlayer to Here.\r\n    function setCurrentTime(currentTime) {\r\n        //_currentTime = currentTime;\r\n\r\n        // We don't set the same currentTime because it can cause firing unexpected Pause event in IE11\r\n        // providing playbackRate property equals to zero.\r\n        if (element.currentTime == currentTime) return;\r\n\r\n        // TODO Despite the fact that MediaSource 'open' event has been fired IE11 cannot set videoElement.currentTime\r\n        // immediately (it throws InvalidStateError). It seems that this is related to videoElement.readyState property\r\n        // Initially it is 0, but soon after 'open' event it goes to 1 and setting currentTime is allowed. Chrome allows to\r\n        // set currentTime even if readyState = 0.\r\n        // setTimeout is used to workaround InvalidStateError in IE11\r\n        try {\r\n            element.currentTime = currentTime;\r\n        } catch (e) {\r\n            if (element.readyState === 0 && e.code === e.INVALID_STATE_ERR) {\r\n                setTimeout(function () {\r\n                    element.currentTime = currentTime;\r\n                }, 400);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getElement() {\r\n        return element;\r\n    }\r\n\r\n    function setElement(value) {\r\n        element = value;\r\n        // Workaround to force Firefox to fire the canplay event.\r\n        element.preload = 'auto';\r\n    }\r\n\r\n    function setSource(source) {\r\n        if (source) {\r\n            element.src = source;\r\n        } else {\r\n            element.removeAttribute('src');\r\n            element.load();\r\n        }\r\n    }\r\n\r\n    function getSource() {\r\n        return element.src;\r\n    }\r\n\r\n    function getVideoContainer() {\r\n        return videoContainer;\r\n    }\r\n\r\n    function setVideoContainer(value) {\r\n        videoContainer = value;\r\n    }\r\n\r\n    function getTTMLRenderingDiv() {\r\n        return TTMLRenderingDiv;\r\n    }\r\n\r\n    function setTTMLRenderingDiv(div) {\r\n        TTMLRenderingDiv = div;\r\n        // The styling will allow the captions to match the video window size and position.\r\n        TTMLRenderingDiv.style.position = 'absolute';\r\n        TTMLRenderingDiv.style.display = 'flex';\r\n        TTMLRenderingDiv.style.overflow = 'hidden';\r\n        TTMLRenderingDiv.style.pointerEvents = 'none';\r\n        TTMLRenderingDiv.style.top = 0;\r\n        TTMLRenderingDiv.style.left = 0;\r\n    }\r\n\r\n    function setStallState(type, state) {\r\n        stallStream(type, state);\r\n    }\r\n\r\n    function isStalled() {\r\n        return (stalledStreams.length > 0);\r\n    }\r\n\r\n    function addStalledStream(type) {\r\n\r\n        let event;\r\n\r\n        if (type === null || element.seeking || stalledStreams.indexOf(type) !== -1) {\r\n            return;\r\n        }\r\n\r\n        stalledStreams.push(type);\r\n        if (stalledStreams.length === 1) {\r\n            // Halt playback until nothing is stalled.\r\n            event = document.createEvent('Event');\r\n            event.initEvent('waiting', true, false);\r\n            previousPlaybackRate = element.playbackRate;\r\n            setPlaybackRate(0);\r\n            element.dispatchEvent(event);\r\n        }\r\n    }\r\n\r\n    function removeStalledStream(type) {\r\n        let index = stalledStreams.indexOf(type);\r\n        let event;\r\n\r\n        if (type === null) {\r\n            return;\r\n        }\r\n        if (index !== -1) {\r\n            stalledStreams.splice(index, 1);\r\n        }\r\n        // If nothing is stalled resume playback.\r\n        if (isStalled() === false && element.playbackRate === 0) {\r\n            event = document.createEvent('Event');\r\n            event.initEvent('playing', true, false);\r\n            setPlaybackRate(previousPlaybackRate || 1);\r\n            element.dispatchEvent(event);\r\n        }\r\n    }\r\n\r\n    function stallStream(type, isStalled) {\r\n        if (isStalled) {\r\n            addStalledStream(type);\r\n        } else {\r\n            removeStalledStream(type);\r\n        }\r\n    }\r\n\r\n    function getPlaybackQuality() {\r\n        let hasWebKit = ('webkitDroppedFrameCount' in element);\r\n        let hasQuality = ('getVideoPlaybackQuality' in element);\r\n        let result = null;\r\n\r\n        if (hasQuality) {\r\n            result = element.getVideoPlaybackQuality();\r\n        }\r\n        else if (hasWebKit) {\r\n            result = {droppedVideoFrames: element.webkitDroppedFrameCount, creationTime: new Date()};\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        setCurrentTime: setCurrentTime,\r\n        setStallState: setStallState,\r\n        getElement: getElement,\r\n        setElement: setElement,\r\n        setSource: setSource,\r\n        getSource: getSource,\r\n        getVideoContainer: getVideoContainer,\r\n        setVideoContainer: setVideoContainer,\r\n        getTTMLRenderingDiv: getTTMLRenderingDiv,\r\n        setTTMLRenderingDiv: setTTMLRenderingDiv,\r\n        getPlaybackQuality: getPlaybackQuality\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nVideoModel.__dashjs_factory_name = 'VideoModel';\r\nexport default FactoryMaker.getSingletonFactory(VideoModel);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport BASE64 from '../../../externals/base64.js';\r\n\r\nclass CommonEncryption {\r\n    /**\r\n     * Find and return the ContentProtection element in the given array\r\n     * that indicates support for MPEG Common Encryption\r\n     *\r\n     * @param cpArray array of content protection elements\r\n     * @returns the Common Encryption content protection element or\r\n     * null if one was not found\r\n     */\r\n    static findCencContentProtection(cpArray) {\r\n        var retVal = null;\r\n        for (var i = 0; i < cpArray.length; ++i) {\r\n            var cp = cpArray[i];\r\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\r\n                    cp.value.toLowerCase() === 'cenc')\r\n                retVal = cp;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    /**\r\n     * Returns just the data portion of a single PSSH\r\n     *\r\n     * @param pssh {ArrayBuffer} the PSSH\r\n     * @return {ArrayBuffer} data portion of the PSSH\r\n     */\r\n    static getPSSHData(pssh) {\r\n        var offset = 8; // Box size and type fields\r\n        var view = new DataView(pssh);\r\n\r\n        // Read version\r\n        var version = view.getUint8(offset);\r\n\r\n        offset += 20; // Version (1), flags (3), system ID (16)\r\n\r\n        if (version > 0) {\r\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\r\n        }\r\n\r\n        offset += 4; // Data size\r\n        return pssh.slice(offset);\r\n    }\r\n\r\n    /**\r\n     * Returns the PSSH associated with the given key system from the concatenated\r\n     * list of PSSH boxes in the given initData\r\n     *\r\n     * @param {KeySystem} keySystem the desired\r\n     * key system\r\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\r\n     * @returns {ArrayBuffer} The PSSH box data corresponding to the given key system\r\n     * or null if a valid association could not be found.\r\n     */\r\n    static getPSSHForKeySystem(keySystem, initData) {\r\n        var psshList = CommonEncryption.parsePSSHList(initData);\r\n        if (psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\r\n            return psshList[keySystem.uuid.toLowerCase()];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parse a standard common encryption PSSH which contains a simple\r\n     * base64-encoding of the init data\r\n     *\r\n     * @param cpData the ContentProtection element\r\n     * @returns {ArrayBuffer} the init data or null if not found\r\n     */\r\n    static parseInitDataFromContentProtection(cpData) {\r\n        if ('pssh' in cpData) {\r\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\r\n     *\r\n     * @param data {ArrayBuffer} the concatenated list of PSSH boxes as provided by\r\n     * CDM as initialization data when CommonEncryption content is detected\r\n     * @returns {object} an object that has a property named according to each of\r\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\r\n     * and a ArrayBuffer (the entire PSSH box) as the property value\r\n     */\r\n    static parsePSSHList(data) {\r\n\r\n        if (data === null)\r\n            return [];\r\n\r\n        var dv = new DataView(data);\r\n        var done = false;\r\n        var pssh = {};\r\n\r\n        // TODO: Need to check every data read for end of buffer\r\n        var byteCursor = 0;\r\n        while (!done) {\r\n\r\n            var size,\r\n                nextBox,\r\n                version,\r\n                systemID,\r\n                psshDataSize;\r\n            var boxStart = byteCursor;\r\n\r\n            if (byteCursor >= dv.buffer.byteLength)\r\n                break;\r\n\r\n            /* Box size */\r\n            size = dv.getUint32(byteCursor);\r\n            nextBox = byteCursor + size;\r\n            byteCursor += 4;\r\n\r\n            /* Verify PSSH */\r\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor += 4;\r\n\r\n            /* Version must be 0 or 1 */\r\n            version = dv.getUint8(byteCursor);\r\n            if (version !== 0 && version !== 1) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor++;\r\n\r\n            byteCursor += 3; /* skip flags */\r\n\r\n            // 16-byte UUID/SystemID\r\n            systemID = '';\r\n            var i, val;\r\n            for (i = 0; i < 4; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 4;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 6; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 6;\r\n\r\n            systemID = systemID.toLowerCase();\r\n\r\n            /* PSSH Data Size */\r\n            psshDataSize = dv.getUint32(byteCursor);\r\n            byteCursor += 4;\r\n\r\n            /* PSSH Data */\r\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\r\n            byteCursor = nextBox;\r\n        }\r\n\r\n        return pssh;\r\n    }\r\n}\r\n\r\nexport default CommonEncryption;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ProtectionController from './controllers/ProtectionController.js';\r\nimport ProtectionKeyController from './controllers/ProtectionKeyController.js';\r\nimport ProtectionEvents from './ProtectionEvents.js';\r\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015.js';\r\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014.js';\r\nimport ProtectionModel_01b from './models/ProtectionModel_01b.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nconst APIS_ProtectionModel_01b = [\r\n    // Un-prefixed as per spec\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'generateKeyRequest',\r\n        addKey: 'addKey',\r\n        cancelKeyRequest: 'cancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        keyerror: 'keyerror',\r\n        keyadded: 'keyadded',\r\n        keymessage: 'keymessage'\r\n    },\r\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'webkitGenerateKeyRequest',\r\n        addKey: 'webkitAddKey',\r\n        cancelKeyRequest: 'webkitCancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'webkitneedkey',\r\n        keyerror: 'webkitkeyerror',\r\n        keyadded: 'webkitkeyadded',\r\n        keymessage: 'webkitkeymessage'\r\n    }\r\n];\r\n\r\nconst APIS_ProtectionModel_3Feb2014 = [\r\n    // Un-prefixed as per spec\r\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'setMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        error: 'keyerror',\r\n        message: 'keymessage',\r\n        ready: 'keyadded',\r\n        close: 'keyclose'\r\n    },\r\n    // MS-prefixed (IE11, Windows 8.1)\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'msSetMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MSMediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n        // Events\r\n        needkey: 'msneedkey',\r\n        error: 'mskeyerror',\r\n        message: 'mskeymessage',\r\n        ready: 'mskeyadded',\r\n        close: 'mskeyclose'\r\n    }\r\n];\r\n\r\nfunction Protection() {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n\r\n    /**\r\n     * Create a ProtectionController and associated ProtectionModel for use with\r\n     * a single piece of content.\r\n     *\r\n     * @return {ProtectionController} protection controller\r\n     *\r\n     */\r\n    function createProtectionSystem(config) {\r\n\r\n        let controller = null;\r\n\r\n        let protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        protectionKeyController.setConfig({log: config.log,});\r\n        protectionKeyController.initialize();\r\n\r\n        let protectionModel =  getProtectionModel(config);\r\n\r\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\r\n            controller = ProtectionController(context).create({\r\n                protectionModel: protectionModel,\r\n                protectionKeyController: protectionKeyController,\r\n                adapter: config.adapter,\r\n                eventBus: config.eventBus,\r\n                log: config.log\r\n            });\r\n            config.capabilities.setEncryptedMediaSupported(true);\r\n        }\r\n        return controller;\r\n    }\r\n\r\n    function getProtectionModel(config) {\r\n\r\n        let log = config.log;\r\n        let eventBus = config.eventBus;\r\n        let videoElement = config.videoModel.getElement();\r\n\r\n        if (videoElement.onencrypted !== undefined &&\r\n            videoElement.mediaKeys !== undefined &&\r\n            navigator.requestMediaKeySystemAccess !== undefined &&\r\n            typeof navigator.requestMediaKeySystemAccess === 'function') {\r\n\r\n            log('EME detected on this user agent! (ProtectionModel_21Jan2015)');\r\n            return ProtectionModel_21Jan2015(context).create({log: log, eventBus: eventBus});\r\n\r\n        } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\r\n\r\n            log('EME detected on this user agent! (ProtectionModel_3Feb2014)');\r\n            return ProtectionModel_3Feb2014(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014)});\r\n\r\n        } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\r\n\r\n            log('EME detected on this user agent! (ProtectionModel_01b)');\r\n            return ProtectionModel_01b(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_01b)});\r\n\r\n        } else {\r\n\r\n            log('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\r\n            return null;\r\n\r\n        }\r\n    }\r\n\r\n    function getAPI(videoElement, apis) {\r\n\r\n        for (var i = 0; i < apis.length; i++) {\r\n            var api = apis[i];\r\n            // detect if api is supported by browser\r\n            // check only first function in api -> should be fine\r\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\r\n                continue;\r\n            }\r\n\r\n            return api;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        createProtectionSystem: createProtectionSystem\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtection.__dashjs_factory_name = 'Protection';\r\nlet factory = FactoryMaker.getClassFactory(Protection);\r\nfactory.events = ProtectionEvents;\r\nexport default factory;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../../core/events/EventsBase.js';\r\n/**\r\n * @Class\r\n *\r\n */\r\nclass ProtectionEvents extends EventsBase {\r\n    /**\r\n     * @description Public facing external events to be used when including protection package.\r\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\r\n     * via MediaPlayer.events\r\n     */\r\n    constructor () {\r\n        super();\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         *\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system selection procedure\r\n         * completes\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_SYSTEM_SELECTED = 'internalKeySystemSelected';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key has been added\r\n         *\r\n         * @constant\r\n         * @deprecated The latest versions of the EME specification no longer\r\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\r\n         * is preferred.\r\n         * @event ProtectionEvents#KEY_ADDED\r\n         */\r\n        this.KEY_ADDED = 'public_keyAdded';\r\n        /**\r\n         * Event ID for events delivered when an error is encountered by the CDM\r\n         * while processing a license server response message\r\n         * @event ProtectionEvents#KEY_ERROR\r\n         */\r\n        this.KEY_ERROR = 'public_keyError';\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         * @event ProtectionEvents#KEY_MESSAGE\r\n         */\r\n        this.KEY_MESSAGE = 'public_keyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session close\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\r\n         */\r\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key sessions creation\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CREATED\r\n         */\r\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session removal\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\r\n         */\r\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\r\n\r\n\r\n        /**\r\n         * Event ID for events delivered when the status of one or more\r\n         * decryption keys has changed\r\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\r\n         */\r\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system access procedure\r\n         * has completed\r\n         * @ignore\r\n         */\r\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'keySystemAccessComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system selection procedure\r\n         * completes\r\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\r\n         */\r\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\r\n\r\n        /**\r\n         * Event ID for events delivered when a license request procedure\r\n         * has completed\r\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\r\n         */\r\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\r\n\r\n        /**\r\n         * Event ID for needkey/encrypted events\r\n         * @ignore\r\n         */\r\n        this.NEED_KEY = 'needkey';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is detected and created.\r\n         * @event ProtectionEvents#PROTECTION_CREATED\r\n         */\r\n        this.PROTECTION_CREATED = 'public_protectioncreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is destroyed.\r\n         * @event ProtectionEvents#PROTECTION_DESTROYED\r\n         */\r\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new server certificate has\r\n         * been delivered to the CDM\r\n         * @ignore\r\n         */\r\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the process of shutting down\r\n         * a protection set has completed\r\n         * @ignore\r\n         */\r\n        this.TEARDOWN_COMPLETE =  'protectionTeardownComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a HTMLMediaElement has been\r\n         * associated with the protection set\r\n         * @ignore\r\n         */\r\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\r\n    }\r\n}\r\n\r\nlet protectionEvents = new ProtectionEvents();\r\nexport default protectionEvents;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport CommonEncryption from '../CommonEncryption.js';\r\nimport Events from '../../../core/events/Events.js';\r\nimport MediaCapability from '../vo/MediaCapability.js';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport Protection from '../Protection.js';\r\n\r\n/**\r\n * @Module ProtectionController\r\n * @description Provides access to media protection information and functionality.  Each\r\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\r\n * which encapsulates a set of protection information (EME APIs, selected key system,\r\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\r\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\r\n * functionality provided in {@link ProtectionKeyController}.\r\n * @todo ProtectionController does almost all of its tasks automatically after init() is\r\n * called.  Applications might want more control over this process and want to go through\r\n * each step manually (key system selection, session creation, session maintenance).\r\n */\r\n\r\nfunction ProtectionController(config) {\r\n\r\n    let protectionKeyController = config.protectionKeyController;\r\n    let protectionModel = config.protectionModel;\r\n    let adapter = config.adapter;\r\n    let eventBus = config.eventBus;\r\n    let log = config.log;\r\n\r\n    let instance,\r\n        keySystems,\r\n        pendingNeedKeyData,\r\n        audioInfo,\r\n        videoInfo,\r\n        protDataSet,\r\n        initialized,\r\n        sessionType,\r\n        keySystem;\r\n\r\n    function setup() {\r\n        keySystems = protectionKeyController.getKeySystems();\r\n        pendingNeedKeyData = [];\r\n        initialized = false;\r\n        sessionType = 'temporary';\r\n\r\n        Events.extend(Protection.events);\r\n    }\r\n\r\n    /**\r\n     * Initialize this protection system with a given manifest and optional audio\r\n     * and video stream information.\r\n     *\r\n     * @param {Object} manifest the json version of the manifest XML document for the\r\n     * desired content.  Applications can download their manifest using\r\n     * {@link module:MediaPlayer#retrieveManifest}\r\n     * @param {StreamInfo} [aInfo] audio stream information\r\n     * @param {StreamInfo} [vInfo] video stream information\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @todo This API will change when we have better support for allowing applications\r\n     * to select different adaptation sets for playback.  Right now it is clunky for\r\n     * applications to create {@link StreamInfo} with the right information,\r\n     */\r\n    function initialize(manifest, aInfo, vInfo) {\r\n\r\n        // TODO: We really need to do much more here... We need to be smarter about knowing\r\n        // which adaptation sets for which we have initialized, including the default key ID\r\n        // value from the ContentProtection elements so we know whether or not we still need to\r\n        // select key systems and acquire keys.\r\n        if (!initialized) {\r\n\r\n            var streamInfo;\r\n\r\n            if (!aInfo && !vInfo) {\r\n                // Look for ContentProtection elements.  InitData can be provided by either the\r\n                // dash264drm:Pssh ContentProtection format or a DRM-specific format.\r\n                streamInfo = adapter.getStreamsInfo(manifest)[0]; // TODO: Single period only for now. See TODO above\r\n            }\r\n\r\n            audioInfo = aInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'audio') : null);\r\n            videoInfo = vInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'video') : null);\r\n\r\n            var mediaInfo = (videoInfo) ? videoInfo : audioInfo; // We could have audio or video only\r\n\r\n            // ContentProtection elements are specified at the AdaptationSet level, so the CP for audio\r\n            // and video will be the same.  Just use one valid MediaInfo object\r\n            var supportedKS = protectionKeyController.getSupportedKeySystemsFromContentProtection(mediaInfo.contentProtection);\r\n            if (supportedKS && supportedKS.length > 0) {\r\n                selectKeySystem(supportedKS, true);\r\n            }\r\n\r\n            initialized = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a new key session associated with the given initialization data from\r\n     * the MPD or from the PSSH box in the media\r\n     *\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     * @todo In older versions of the EME spec, there was a one-to-one relationship between\r\n     * initialization data and key sessions.  That is no longer true in the latest APIs.  This\r\n     * API will need to modified (and a new \"generateRequest(keySession, initData)\" API created)\r\n     * to come up to speed with the latest EME standard\r\n     */\r\n    function createKeySession(initData) {\r\n        var initDataForKS = CommonEncryption.getPSSHForKeySystem(keySystem, initData);\r\n        if (initDataForKS) {\r\n\r\n            // Check for duplicate initData\r\n            var currentInitData = protectionModel.getAllInitData();\r\n            for (var i = 0; i < currentInitData.length; i++) {\r\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\r\n                    log('DRM: Ignoring initData because we have already seen it!');\r\n                    return;\r\n                }\r\n            }\r\n            try {\r\n                protectionModel.createKeySession(initDataForKS, sessionType);\r\n            } catch (error) {\r\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error creating key session! ' + error.message});\r\n            }\r\n        } else {\r\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Selected key system is ' + keySystem.systemString + '.  needkey/encrypted event contains no initData corresponding to that key system!'});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads a key session with the given session ID from persistent storage.  This\r\n     * essentially creates a new key session\r\n     *\r\n     * @param {string} sessionID\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     */\r\n    function loadKeySession(sessionID) {\r\n        protectionModel.loadKeySession(sessionID);\r\n    }\r\n\r\n    /**\r\n     * Removes the given key session from persistent storage and closes the session\r\n     * as if {@link ProtectionController#closeKeySession}\r\n     * was called\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionRemoved\r\n     * @fires ProtectionController#KeySessionClosed\r\n     */\r\n    function removeKeySession(sessionToken) {\r\n        protectionModel.removeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Closes the key session and releases all associated decryption keys.  These\r\n     * keys will no longer be available for decrypting media\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionClosed\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n        protectionModel.closeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Sets a server certificate for use by the CDM when signing key messages\r\n     * intended for a particular license server.  This will fire\r\n     * an error event if a key system has not yet been selected.\r\n     *\r\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\r\n     * certificate\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#ServerCertificateUpdated\r\n     */\r\n    function setServerCertificate(serverCertificate) {\r\n        protectionModel.setServerCertificate(serverCertificate);\r\n    }\r\n\r\n    /**\r\n     * Associate this protection system with the given HTMLMediaElement.  This\r\n     * causes the system to register for needkey/encrypted events from the given\r\n     * element and provides a destination for setting of MediaKeys\r\n     *\r\n     * @param {HTMLMediaElement} element the media element to which the protection\r\n     * system should be associated\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setMediaElement(element) {\r\n        if (element) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.on(Events.NEED_KEY, onNeedKey, this);\r\n            eventBus.on(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\r\n        } else if (element === null) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.off(Events.NEED_KEY, onNeedKey, this);\r\n            eventBus.off(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\r\n     * \"persistent-license\".  Default is \"temporary\".\r\n     *\r\n     * @param {String} sessionType the session type\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setSessionType(value) {\r\n        sessionType = value;\r\n    }\r\n\r\n    /**\r\n     * Attach KeySystem-specific data to use for license acquisition with EME\r\n     *\r\n     * @param {Object} data an object containing property names corresponding to\r\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\r\n     * being instances of {@link ProtectionData}\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setProtectionData(data) {\r\n        protDataSet = data;\r\n    }\r\n\r\n    /**\r\n     * Destroys all protection data associated with this protection set.  This includes\r\n     * deleting all key sessions.  In the case of persistent key sessions, the sessions\r\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\r\n     * associated with a HTMLMediaElement, it will be detached from that element.\r\n     *\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function reset() {\r\n        setMediaElement(null);\r\n\r\n        keySystem = undefined;//TODO-Refactor look at why undefined is needed for this. refactor\r\n\r\n        if (protectionModel) {\r\n            protectionModel.reset();\r\n            protectionModel = null;\r\n        }\r\n    }\r\n\r\n    ///////////////\r\n    // Private\r\n    ///////////////\r\n\r\n    function getProtData(keySystem) {\r\n        var protData = null;\r\n        var keySystemString = keySystem.systemString;\r\n\r\n        if (protDataSet) {\r\n            protData = (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\r\n        }\r\n        return protData;\r\n    }\r\n\r\n    function selectKeySystem(supportedKS, fromManifest) {\r\n\r\n        var self = this;\r\n\r\n        // Build our request object for requestKeySystemAccess\r\n        var audioCapabilities = [];\r\n        var videoCapabilities = [];\r\n\r\n        if (videoInfo) {\r\n            videoCapabilities.push(new MediaCapability(videoInfo.codec));\r\n        }\r\n        if (audioInfo) {\r\n            audioCapabilities.push(new MediaCapability(audioInfo.codec));\r\n        }\r\n        var ksConfig = new KeySystemConfiguration(\r\n                audioCapabilities, videoCapabilities, 'optional',\r\n                (sessionType === 'temporary') ? 'optional' : 'required',\r\n                [sessionType]);\r\n        var requestedKeySystems = [];\r\n\r\n        var ksIdx;\r\n        if (keySystem) {\r\n            // We have a key system\r\n            for (ksIdx = 0; ksIdx < supportedKS.length; ksIdx++) {\r\n                if (keySystem === supportedKS[ksIdx].ks) {\r\n\r\n                    requestedKeySystems.push({ks: supportedKS[ksIdx].ks, configs: [ksConfig]});\r\n\r\n                    // Ensure that we would be granted key system access using the key\r\n                    // system and codec information\r\n                    let onKeySystemAccessComplete = function (event) {\r\n                        eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n                        if (event.error) {\r\n                            if (!fromManifest) {\r\n                                eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {error: 'DRM: KeySystem Access Denied! -- ' + event.error});\r\n                            }\r\n                        } else {\r\n                            log('DRM: KeySystem Access Granted');\r\n                            eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: event.data});\r\n                            createKeySession(supportedKS[ksIdx].initData);\r\n                        }\r\n                    };\r\n                    eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n                    protectionModel.requestKeySystemAccess(requestedKeySystems);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else if (keySystem === undefined) {\r\n            // First time through, so we need to select a key system\r\n            keySystem = null;\r\n            pendingNeedKeyData.push(supportedKS);\r\n\r\n            // Add all key systems to our request list since we have yet to select a key system\r\n            for (var i = 0; i < supportedKS.length; i++) {\r\n                requestedKeySystems.push({ks: supportedKS[i].ks, configs: [ksConfig]});\r\n            }\r\n\r\n            var keySystemAccess;\r\n            var onKeySystemAccessComplete = function (event) {\r\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n                if (event.error) {\r\n                    keySystem = undefined;\r\n                    eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\r\n\r\n                    if (!fromManifest) {\r\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: KeySystem Access Denied! -- ' + event.error});\r\n                    }\r\n                } else {\r\n                    keySystemAccess = event.data;\r\n                    log('DRM: KeySystem Access Granted (' + keySystemAccess.keySystem.systemString + ')!  Selecting key system...');\r\n                    protectionModel.selectKeySystem(keySystemAccess);\r\n                }\r\n            };\r\n            var onKeySystemSelected = function (event) {\r\n                eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\r\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n                if (!event.error) {\r\n                    keySystem = protectionModel.getKeySystem();\r\n                    eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: keySystemAccess});\r\n                    for (var i = 0; i < pendingNeedKeyData.length; i++) {\r\n                        for (ksIdx = 0; ksIdx < pendingNeedKeyData[i].length; ksIdx++) {\r\n                            if (keySystem === pendingNeedKeyData[i][ksIdx].ks) {\r\n                                createKeySession(pendingNeedKeyData[i][ksIdx].initData);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    keySystem = undefined;\r\n                    if (!fromManifest) {\r\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: Error selecting key system! -- ' + event.error});\r\n                    }\r\n                }\r\n            };\r\n            eventBus.on(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\r\n            eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n            protectionModel.requestKeySystemAccess(requestedKeySystems);\r\n        } else {\r\n            // We are in the process of selecting a key system, so just save the data\r\n            pendingNeedKeyData.push(supportedKS);\r\n        }\r\n    }\r\n\r\n    function sendLicenseRequestCompleteEvent(data, error) {\r\n        eventBus.trigger(Events.LICENSE_REQUEST_COMPLETE, {data: data, error: error});\r\n    }\r\n\r\n    function onKeyMessage(e) {\r\n        log('DRM: onKeyMessage');\r\n        if (e.error) {\r\n            log(e.error);\r\n            return;\r\n        }\r\n\r\n        // Dispatch event to applications indicating we received a key message\r\n        var keyMessage = e.data;\r\n        eventBus.trigger(Events.KEY_MESSAGE, {data: keyMessage});\r\n        var messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\r\n        var message = keyMessage.message;\r\n        var sessionToken = keyMessage.sessionToken;\r\n        var protData = getProtData(keySystem);\r\n        var keySystemString = keySystem.systemString;\r\n        var licenseServerData = protectionKeyController.getLicenseServer(keySystem, protData, messageType);\r\n        var eventData = { sessionToken: sessionToken, messageType: messageType };\r\n\r\n        // Message not destined for license server\r\n        if (!licenseServerData) {\r\n            log('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionID());\r\n            sendLicenseRequestCompleteEvent(eventData);\r\n            return;\r\n        }\r\n\r\n        // Perform any special handling for ClearKey\r\n        if (protectionKeyController.isClearKey(keySystem)) {\r\n            var clearkeys = protectionKeyController.processClearKeyLicenseRequest(protData, message);\r\n            if (clearkeys)  {\r\n                log('DRM: ClearKey license request handled by application!');\r\n                sendLicenseRequestCompleteEvent(eventData);\r\n                protectionModel.updateKeySession(sessionToken, clearkeys);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // All remaining key system scenarios require a request to a remote license server\r\n        var xhr = new XMLHttpRequest();\r\n\r\n        // Determine license server URL\r\n        var url = null;\r\n        if (protData) {\r\n            if (protData.serverURL) {\r\n                var serverURL = protData.serverURL;\r\n                if (typeof serverURL === 'string' && serverURL !== '') {\r\n                    url = serverURL;\r\n                } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\r\n                    url = serverURL[messageType];\r\n                }\r\n            } else if (protData.laURL && protData.laURL !== '') { // TODO: Deprecated!\r\n                url = protData.laURL;\r\n            }\r\n        } else {\r\n            url = keySystem.getLicenseServerURLFromInitData(CommonEncryption.getPSSHData(sessionToken.initData));\r\n            if (!url) {\r\n                url = e.data.laURL;\r\n            }\r\n        }\r\n        // Possibly update or override the URL based on the message\r\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\r\n\r\n        // Ensure valid license server URL\r\n        if (!url) {\r\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: No license server URL specified!');\r\n            return;\r\n        }\r\n\r\n        xhr.open(licenseServerData.getHTTPMethod(messageType), url, true);\r\n        xhr.responseType = licenseServerData.getResponseType(keySystemString, messageType);\r\n        xhr.onload = function () {\r\n            if (this.status == 200) {\r\n                sendLicenseRequestCompleteEvent(eventData);\r\n                protectionModel.updateKeySession(sessionToken,\r\n                        licenseServerData.getLicenseMessage(this.response, keySystemString, messageType));\r\n            } else {\r\n                sendLicenseRequestCompleteEvent(eventData,\r\n                        'DRM: ' + keySystemString + ' update, XHR status is \"' + this.statusText + '\" (' + this.status +\r\n                        '), expected to be 200. readyState is ' + this.readyState +\r\n                        '.  Response is ' + ((this.response) ? licenseServerData.getErrorResponse(this.response, keySystemString, messageType) : 'NONE'));\r\n            }\r\n        };\r\n        xhr.onabort = function () {\r\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR aborted. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\r\n        };\r\n        xhr.onerror = function () {\r\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR error. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\r\n        };\r\n\r\n        // Set optional XMLHttpRequest headers from protection data and message\r\n        var updateHeaders = function (headers) {\r\n            var key;\r\n            if (headers) {\r\n                for (key in headers) {\r\n                    if ('authorization' === key.toLowerCase()) {\r\n                        xhr.withCredentials = true;\r\n                    }\r\n                    xhr.setRequestHeader(key, headers[key]);\r\n                }\r\n            }\r\n        };\r\n        if (protData) {\r\n            updateHeaders(protData.httpRequestHeaders);\r\n        }\r\n        updateHeaders(keySystem.getRequestHeadersFromMessage(message));\r\n\r\n        // Set withCredentials property from protData\r\n        if (protData && protData.withCredentials) {\r\n            xhr.withCredentials = true;\r\n        }\r\n\r\n        xhr.send(keySystem.getLicenseRequestFromMessage(message));\r\n    }\r\n\r\n    function onNeedKey(event) {\r\n        log('DRM: onNeedKey');\r\n        // Ignore non-cenc initData\r\n        if (event.key.initDataType !== 'cenc') {\r\n            log('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\r\n            return;\r\n        }\r\n\r\n        // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\r\n        // Convert to ArrayBuffer\r\n        var abInitData = event.key.initData;\r\n        if (ArrayBuffer.isView(abInitData)) {\r\n            abInitData = abInitData.buffer;\r\n        }\r\n\r\n        log('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\r\n\r\n        var supportedKS = protectionKeyController.getSupportedKeySystems(abInitData);\r\n        if (supportedKS.length === 0) {\r\n            log('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\r\n            return;\r\n        }\r\n\r\n        selectKeySystem(supportedKS, false);\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        createKeySession: createKeySession,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        closeKeySession: closeKeySession,\r\n        setServerCertificate: setServerCertificate,\r\n        setMediaElement: setMediaElement,\r\n        setSessionType: setSessionType,\r\n        setProtectionData: setProtectionData,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nProtectionController.__dashjs_factory_name = 'ProtectionController';\r\nexport default FactoryMaker.getClassFactory(ProtectionController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport CommonEncryption from './../CommonEncryption.js';\r\nimport KeySystemClearKey from './../drm/KeySystemClearKey.js';\r\nimport KeySystemWidevine from './../drm/KeySystemWidevine.js';\r\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady.js';\r\nimport DRMToday from './../servers/DRMToday.js';\r\nimport PlayReady from './../servers/PlayReady.js';\r\nimport Widevine from './../servers/Widevine.js';\r\nimport ClearKey from './../servers/ClearKey.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\n/**\r\n * @module ProtectionKeyController\r\n * @description Media protection key system functionality that can be modified/overridden by applications\r\n */\r\nfunction ProtectionKeyController() {\r\n\r\n    let context = this.context;\r\n\r\n    let instance,\r\n        log,\r\n        keySystems,\r\n        clearkeyKeySystem;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.log) {\r\n            log = config.log;\r\n        }\r\n    }\r\n\r\n    function initialize() {\r\n        keySystems = [];\r\n\r\n        var keySystem;\r\n\r\n        // PlayReady\r\n        keySystem = KeySystemPlayReady(context).getInstance();\r\n        keySystems.push(keySystem);\r\n\r\n        // Widevine\r\n        keySystem = KeySystemWidevine(context).getInstance();\r\n        keySystems.push(keySystem);\r\n\r\n        // ClearKey\r\n        keySystem = KeySystemClearKey(context).getInstance();\r\n        keySystems.push(keySystem);\r\n        clearkeyKeySystem = keySystem;\r\n    }\r\n\r\n    /**\r\n     * Returns a prioritized list of key systems supported\r\n     * by this player (not necessarily those supported by the\r\n     * user agent)\r\n     *\r\n     * @returns {KeySystem[]} a prioritized\r\n     * list of key systems\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystems() {\r\n        return keySystems;\r\n    }\r\n\r\n    /**\r\n     * Returns the key system associated with the given key system string\r\n     * name (i.e. 'org.w3.clearkey')\r\n     *\r\n     * @param {string} systemString the system string\r\n     * @returns {KeySystem} the key system\r\n     * or null if no supported key system is associated with the given key\r\n     * system string\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystemBySystemString(systemString) {\r\n        for (var i = 0; i < keySystems.length; i++) {\r\n            if (keySystems[i].systemString === systemString) {\r\n                return keySystems[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the given key system is ClearKey.  This is\r\n     * necessary because the EME spec defines ClearKey and its method\r\n     * for providing keys to the key session; and this method has changed\r\n     * between the various API versions.  Our EME-specific ProtectionModels\r\n     * must know if the system is ClearKey so that it can format the keys\r\n     * according to the particular spec version.\r\n     *\r\n     * @param keySystem the key\r\n     * @returns {boolean} true if this is the ClearKey key system, false\r\n     * otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function isClearKey(keySystem) {\r\n        return (keySystem === clearkeyKeySystem);\r\n    }\r\n\r\n    /**\r\n     * Check equality of initData array buffers.\r\n     *\r\n     * @param initData1 {ArrayBuffer} first initData\r\n     * @param initData2 {ArrayBuffer} second initData\r\n     * @returns {boolean} true if the initData arrays are equal in size and\r\n     * contents, false otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function initDataEquals(initData1, initData2) {\r\n        if (initData1.byteLength === initData2.byteLength) {\r\n            var data1 = new Uint8Array(initData1);\r\n            var data2 = new Uint8Array(initData2);\r\n\r\n            for (var j = 0; j < data1.length; j++) {\r\n                if (data1[j] !== data2[j]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns a set of supported key systems and CENC initialization data\r\n     * from the given array of ContentProtection elements.  Only\r\n     * key systems that are supported by this player will be returned.\r\n     * Key systems are returned in priority order (highest first).\r\n     *\r\n     * @param {Object[]} cps array of content protection elements parsed\r\n     * from the manifest\r\n     * @returns {Object[]} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @returns {KeySystem} Object.ks the key\r\n     * system identified by the ContentProtection element\r\n     * @returns {ArrayBuffer} Object.initData the initialization data parsed\r\n     * from the ContentProtection element\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystemsFromContentProtection(cps) {\r\n        var cp, ks, ksIdx, cpIdx;\r\n        var supportedKS = [];\r\n\r\n        if (cps) {\r\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n                ks = keySystems[ksIdx];\r\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\r\n                    cp = cps[cpIdx];\r\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\r\n\r\n                        // Look for DRM-specific ContentProtection\r\n                        var initData = ks.getInitData(cp);\r\n                        if (!!initData) {\r\n                            supportedKS.push({\r\n                                ks: keySystems[ksIdx],\r\n                                initData: initData\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns key systems supported by this player for the given PSSH\r\n     * initializationData. Only key systems supported by this player\r\n     * will be returned.  Key systems are returned in priority order\r\n     * (highest priority first)\r\n     *\r\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\r\n     * supported by the content\r\n     * @returns {Object[]} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @returns {KeySystem} Object.ks the key\r\n     * system\r\n     * @returns {ArrayBuffer} Object.initData the initialization data\r\n     * associated with the key system\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystems(initData) {\r\n        var ksIdx;\r\n        var supportedKS = [];\r\n        var pssh = CommonEncryption.parsePSSHList(initData);\r\n\r\n        for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n            if (keySystems[ksIdx].uuid in pssh) {\r\n                supportedKS.push({\r\n                    ks: keySystems[ksIdx],\r\n                    initData: pssh[keySystems[ksIdx].uuid]\r\n                });\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns the license server implementation data that should be used for this request.\r\n     *\r\n     * @param {KeySystem} keySystem the key system\r\n     * associated with this license request\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {String} [messageType=\"license-request\"] the message type associated with this\r\n     * request.  Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @return {LicenseServer} the license server\r\n     * implementation that should be used for this request or null if the player should not\r\n     * pass messages of the given type to a license server\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     *\r\n     */\r\n    function getLicenseServer(keySystem, protData, messageType) {\r\n\r\n        // Our default server implementations do not do anything with \"license-release\" or\r\n        // \"individualization-request\" messages, so we just send a success event\r\n        if (messageType === 'license-release' || messageType == 'individualization-request') {\r\n            return null;\r\n        }\r\n\r\n        var licenseServerData = null;\r\n        if (protData && protData.hasOwnProperty('drmtoday')) {\r\n            licenseServerData = DRMToday(context).getInstance();\r\n        } else if (keySystem.systemString === 'com.widevine.alpha') {\r\n            licenseServerData = Widevine(context).getInstance();\r\n        } else if (keySystem.systemString === 'com.microsoft.playready') {\r\n            licenseServerData = PlayReady(context).getInstance();\r\n        } else if (keySystem.systemString === 'org.w3.clearkey') {\r\n            licenseServerData = ClearKey(context).getInstance();\r\n        }\r\n\r\n        return licenseServerData;\r\n    }\r\n\r\n    /**\r\n     * Allows application-specific retrieval of ClearKey keys.\r\n     *\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {ArrayBuffer} message the key message from the CDM\r\n     * @return {ClearKeyKeySet} the clear keys associated with\r\n     * the request or null if no keys can be returned by this function\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function processClearKeyLicenseRequest(protData, message) {\r\n        try {\r\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\r\n        } catch (error) {\r\n            log('Failed to retrieve clearkeys from ProtectionData');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        isClearKey: isClearKey,\r\n        initDataEquals: initDataEquals,\r\n        getKeySystems: getKeySystems,\r\n        getKeySystemBySystemString: getKeySystemBySystemString,\r\n        getSupportedKeySystemsFromContentProtection: getSupportedKeySystemsFromContentProtection,\r\n        getSupportedKeySystems: getSupportedKeySystems,\r\n        getLicenseServer: getLicenseServer,\r\n        processClearKeyLicenseRequest: processClearKeyLicenseRequest,\r\n        setConfig: setConfig\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\r\nexport default FactoryMaker.getSingletonFactory(ProtectionKeyController);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport KeyPair from '../vo/KeyPair.js';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet.js';\r\nimport CommonEncryption from '../CommonEncryption.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\r\nconst systemString = 'org.w3.clearkey';\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemClearKey() {\r\n\r\n    let instance;\r\n    /**\r\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\r\n     *\r\n     * @param {ProtectionData} protData the protection data\r\n     * @param {ArrayBuffer} message the ClearKey CDM message\r\n     * @returns {ClearKeyKeySet} the key set or null if none found\r\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\r\n     * protection data\r\n     * @memberof KeySystemClearKey\r\n     */\r\n    function getClearKeysFromProtectionData(protectionData, message) {\r\n        var clearkeySet = null;\r\n        if (protectionData) {\r\n            // ClearKey is the only system that does not require a license server URL, so we\r\n            // handle it here when keys are specified in protection data\r\n            var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n            var keyPairs = [];\r\n            for (var i = 0; i < jsonMsg.kids.length; i++) {\r\n                var clearkeyID = jsonMsg.kids[i];\r\n                var clearkey = (protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\r\n                if (!clearkey) {\r\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\r\n                }\r\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\r\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\r\n            }\r\n            clearkeySet = new ClearKeyKeySet(keyPairs);\r\n        }\r\n        return clearkeySet;\r\n    }\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\r\nexport default FactoryMaker.getSingletonFactory(KeySystemClearKey);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Microsoft PlayReady DRM\r\n *\r\n * @class\r\n * @implements KeySystem\r\n */\r\nimport CommonEncryption from '../CommonEncryption.js';\r\nimport Error from '../../vo/Error.js';\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport BASE64 from '../../../../externals/base64.js';\r\n\r\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\r\nconst systemString = 'com.microsoft.playready';\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemPlayReady() {\r\n\r\n    let instance;\r\n    let messageFormat = 'utf16';\r\n\r\n    function getRequestHeadersFromMessage(message) {\r\n        var msg,\r\n            xmlDoc;\r\n        var headers = {};\r\n        var parser = new DOMParser();\r\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        msg = String.fromCharCode.apply(null, dataview);\r\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        var headerNameList = xmlDoc.getElementsByTagName('name');\r\n        var headerValueList = xmlDoc.getElementsByTagName('value');\r\n        for (var i = 0; i < headerNameList.length; i++) {\r\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\r\n        }\r\n        // some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\r\n        // this is NOT w3c conform and license servers may reject the request!\r\n        // -> rename it to proper w3c definition!\r\n        if (headers.hasOwnProperty('Content')) {\r\n            headers['Content-Type'] = headers.Content;\r\n            delete headers.Content;\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        var msg,\r\n            xmlDoc;\r\n        var licenseRequest = null;\r\n        var parser = new DOMParser();\r\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        msg = String.fromCharCode.apply(null, dataview);\r\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        if (xmlDoc.getElementsByTagName('Challenge')[0]) {\r\n            var Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\r\n            if (Challenge) {\r\n                licenseRequest = BASE64.decode(Challenge);\r\n            }\r\n        }\r\n        return licenseRequest;\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(initData) {\r\n        if (initData) {\r\n            var data = new DataView(initData);\r\n            var numRecords = data.getUint16(4, true);\r\n            var offset = 6;\r\n            var parser = new DOMParser();\r\n\r\n            for (var i = 0; i < numRecords; i++) {\r\n                // Parse the PlayReady Record header\r\n                var recordType = data.getUint16(offset, true);\r\n                offset += 2;\r\n                var recordLength = data.getUint16(offset, true);\r\n                offset += 2;\r\n                if (recordType !== 0x0001) {\r\n                    offset += recordLength;\r\n                    continue;\r\n                }\r\n\r\n                var recordData = initData.slice(offset, offset + recordLength);\r\n                var record = String.fromCharCode.apply(null, new Uint16Array(recordData));\r\n                var xmlDoc = parser.parseFromString(record, 'application/xml');\r\n\r\n                // First try <LA_URL>\r\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\r\n                    var laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\r\n                    if (laurl) {\r\n                        return laurl;\r\n                    }\r\n                }\r\n\r\n                // Optionally, try <LUI_URL>\r\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\r\n                    var luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\r\n                    if (luiurl) {\r\n                        return luiurl;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getInitData(cpData) {\r\n        // * desc@ getInitData\r\n        // *   generate PSSH data from PROHeader defined in MPD file\r\n        // *   PSSH format:\r\n        // *   size (4)\r\n        // *   box type(PSSH) (8)\r\n        // *   Protection SystemID (16)\r\n        // *   protection system data size (4) - length of decoded PROHeader\r\n        // *   decoded PROHeader data from MPD file\r\n        var PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\r\n        var playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\r\n\r\n        var byteCursor = 0;\r\n        var uint8arraydecodedPROHeader = null;\r\n\r\n        var PROSize,\r\n            PSSHSize,\r\n            PSSHBoxBuffer,\r\n            PSSHBox,\r\n            PSSHData;\r\n\r\n        // Handle common encryption PSSH\r\n        if ('pssh' in cpData) {\r\n            return CommonEncryption.parseInitDataFromContentProtection(cpData);\r\n        }\r\n        // Handle native MS PlayReady ContentProtection elements\r\n        if ('pro' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\r\n        }\r\n        else if ('prheader' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n\r\n        PROSize = uint8arraydecodedPROHeader.length;\r\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\r\n\r\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\r\n\r\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\r\n        PSSHData = new DataView(PSSHBoxBuffer);\r\n\r\n        PSSHData.setUint32(byteCursor, PSSHSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(PSSHBoxType, byteCursor);\r\n        byteCursor += PSSHBoxType.length;\r\n\r\n        PSSHBox.set(playreadySystemID, byteCursor);\r\n        byteCursor += playreadySystemID.length;\r\n\r\n        PSSHData.setUint32(byteCursor, PROSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\r\n        byteCursor += PROSize;\r\n\r\n        return PSSHBox.buffer;\r\n    }\r\n\r\n    /**\r\n     * It seems that some PlayReady implementations return their XML-based CDM\r\n     * messages using UTF16, while others return them as UTF8.  Use this function\r\n     * to modify the message format to expect when parsing CDM messages.\r\n     *\r\n     * @param {string} format the expected message format.  Either \"utf8\" or \"utf16\".\r\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\r\n     */\r\n    function setPlayReadyMessageFormat(format) {\r\n        if (format !== 'utf8' && format !== 'utf16') {\r\n            throw new Error('Illegal PlayReady message format! -- ' + format);\r\n        }\r\n        messageFormat = format;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        setPlayReadyMessageFormat: setPlayReadyMessageFormat\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\r\nexport default FactoryMaker.getSingletonFactory(KeySystemPlayReady);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Google Widevine DRM\r\n *\r\n * @class\r\n * @implements MediaPlayer.dependencies.protection.KeySystem\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\r\nconst systemString = 'com.widevine.alpha';\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemWidevine() {\r\n\r\n    let instance;\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\r\nexport default FactoryMaker.getSingletonFactory(KeySystemWidevine);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Initial implementation of EME\r\n *\r\n * Implemented by Google Chrome prior to v36\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController.js';\r\nimport NeedKey from '../vo/NeedKey.js';\r\nimport KeyError from '../vo/KeyError.js';\r\nimport KeyMessage from '../vo/KeyMessage.js';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration.js';\r\nimport KeySystemAccess from '../vo/KeySystemAccess.js';\r\nimport Events from '../../../core/events/Events.js';\r\nimport ErrorHandler from '../../utils/ErrorHandler.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction ProtectionModel_01b(config) {\r\n\r\n    let context = this.context;\r\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    let log = config.log;\r\n    let api = config.api;\r\n\r\n    let instance,\r\n        videoElement,\r\n        keySystem,\r\n        protectionKeyController,\r\n        errHandler,\r\n\r\n        // With this version of the EME APIs, sessionIDs are not assigned to\r\n        // sessions until the first key message is received.  We are assuming\r\n        // that in the case of multiple sessions, key messages will be received\r\n        // in the order that generateKeyRequest() is called.\r\n        // Holding spot for newly-created sessions until we determine whether or\r\n        // not the CDM supports sessionIDs\r\n        pendingSessions,\r\n\r\n        // List of sessions that have been initialized.  Only the first position will\r\n        // be used in the case that the CDM does not support sessionIDs\r\n        sessions,\r\n\r\n        // Not all CDMs support the notion of sessionIDs.  Without sessionIDs\r\n        // there is no way for us to differentiate between sessions, therefore\r\n        // we must only allow a single session.  Once we receive the first key\r\n        // message we can set this flag to determine if more sessions are allowed\r\n        moreSessionsAllowed,\r\n\r\n        // This is our main event handler for all desired HTMLMediaElement events\r\n        // related to EME.  These events are translated into our API-independent\r\n        // versions of the same events\r\n        eventHandler;\r\n\r\n    function setup() {\r\n        videoElement = null;\r\n        keySystem = null;\r\n        pendingSessions = [];\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        errHandler = ErrorHandler(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n        }\r\n        for (var i = 0; i < sessions.length; i++) {\r\n            closeKeySession(sessions[i]);\r\n        }\r\n        eventBus.trigger(Events.TEARDOWN_COMPLETE);\r\n    }\r\n\r\n    function getKeySystem() {\r\n        return keySystem;\r\n    }\r\n\r\n    function getAllInitData() {\r\n        var retVal = [];\r\n        for (let i = 0; i < pendingSessions.length; i++) {\r\n            retVal.push(pendingSessions[i].initData);\r\n        }\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        var ve = videoElement;\r\n        if (!ve) { // Must have a video element to do this capability tests\r\n            ve = document.createElement('video');\r\n        }\r\n\r\n        // Try key systems in order, first one with supported key system configuration\r\n        // is used\r\n        var found = false;\r\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\r\n            var configs = ksConfigurations[ksIdx].configs;\r\n            var supportedAudio = null;\r\n            var supportedVideo = null;\r\n\r\n            // Try key system configs in order, first one with supported audio/video\r\n            // is used\r\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                //var audios = configs[configIdx].audioCapabilities;\r\n                var videos = configs[configIdx].videoCapabilities;\r\n                // Look for supported video container/codecs\r\n                if (videos && videos.length !== 0) {\r\n                    supportedVideo = []; // Indicates that we have a requested video config\r\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                        if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\r\n                            supportedVideo.push(videos[videoIdx]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // No supported audio or video in this configuration OR we have\r\n                // requested audio or video configuration that is not supported\r\n                if ((!supportedAudio && !supportedVideo) ||\r\n                    (supportedAudio && supportedAudio.length === 0) ||\r\n                    (supportedVideo && supportedVideo.length === 0)) {\r\n                    continue;\r\n                }\r\n\r\n                // This configuration is supported\r\n                found = true;\r\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\r\n        }\r\n    }\r\n\r\n    function selectKeySystem(keySystemAccess) {\r\n        keySystem = keySystemAccess.keySystem;\r\n        eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement) {\r\n            return;\r\n        }\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.keyerror, eventHandler);\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            videoElement.addEventListener(api.keymessage, eventHandler);\r\n            videoElement.addEventListener(api.keyadded, eventHandler);\r\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\r\n        }\r\n    }\r\n\r\n    function createKeySession(initData /*, keySystemType */) {\r\n\r\n        if (!keySystem) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Determine if creating a new session is allowed\r\n        if (moreSessionsAllowed || sessions.length === 0) {\r\n\r\n            var newSession = { // Implements SessionToken\r\n                sessionID: null,\r\n                initData: initData,\r\n                getSessionID: function () {\r\n                    return this.sessionID;\r\n                },\r\n\r\n                getExpirationTime: function () {\r\n                    return NaN;\r\n                },\r\n\r\n                getSessionType: function () {\r\n                    return 'temporary';\r\n                }\r\n            };\r\n            pendingSessions.push(newSession);\r\n\r\n            // Send our request to the CDM\r\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(initData));\r\n\r\n            return newSession;\r\n\r\n        } else {\r\n            throw new Error('Multiple sessions not allowed!');\r\n        }\r\n\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        var sessionID = sessionToken.sessionID;\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the CDM\r\n            videoElement[api.addKey](keySystem.systemString,\r\n                new Uint8Array(message), sessionToken.initData, sessionID);\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            for (var i = 0; i < message.keyPairs.length; i++) {\r\n                videoElement[api.addKey](keySystem.systemString,\r\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionID);\r\n            }\r\n        }\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the CDM\r\n        videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionID);\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\r\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                var sessionToken = null;\r\n                switch (event.type) {\r\n\r\n                    case api.needkey:\r\n                        var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                        eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\r\n                        break;\r\n\r\n                    case api.keyerror:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            var msg = '';\r\n                            switch (event.errorCode.code) {\r\n                                case 1:\r\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\r\n                                    break;\r\n                                case 2:\r\n                                    msg += 'MEDIA_KEYERR_CLIENT - The Key System could not be installed or updated.';\r\n                                    break;\r\n                                case 3:\r\n                                    msg += 'MEDIA_KEYERR_SERVICE - The message passed into update indicated an error from the license service.';\r\n                                    break;\r\n                                case 4:\r\n                                    msg += 'MEDIA_KEYERR_OUTPUT - There is no available output device with the required characteristics for the content protection system.';\r\n                                    break;\r\n                                case 5:\r\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - A hardware configuration change caused a content protection error.';\r\n                                    break;\r\n                                case 6:\r\n                                    msg += 'MEDIA_KEYERR_DOMAIN - An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\r\n                                    break;\r\n                            }\r\n                            msg += '  System Code = ' + event.systemCode;\r\n                            // TODO: Build error string based on key error\r\n                            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, msg)});\r\n                        } else {\r\n                            log('No session token found for key error');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keyadded:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            log('DRM: Key added.');\r\n                            eventBus.trigger(Events.KEY_ADDED, {data: sessionToken});//TODO not sure anything is using sessionToken? why there?\r\n                        } else {\r\n                            log('No session token found for key added');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keymessage:\r\n\r\n                        // If this CDM does not support session IDs, we will be limited\r\n                        // to a single session\r\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\r\n\r\n                        // SessionIDs supported\r\n                        if (moreSessionsAllowed) {\r\n\r\n                            // Attempt to find an uninitialized token with this sessionID\r\n                            sessionToken = findSessionByID(sessions, event.sessionId);\r\n                            if (!sessionToken && pendingSessions.length > 0) {\r\n\r\n                                // This is the first message for our latest session, so set the\r\n                                // sessionID and add it to our list\r\n                                sessionToken = pendingSessions.shift();\r\n                                sessions.push(sessionToken);\r\n                                sessionToken.sessionID = event.sessionId;\r\n                            }\r\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\r\n\r\n                            sessionToken = pendingSessions.shift();\r\n                            sessions.push(sessionToken);\r\n\r\n                            if (pendingSessions.length !== 0) {\r\n                                errHandler.mediaKeyMessageError('Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!');\r\n                            }\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n\r\n                            // For ClearKey, the spec mandates that you pass this message to the\r\n                            // addKey method, so we always save it to the token since there is no\r\n                            // way to tell which key system is in use\r\n                            sessionToken.keyMessage = message;\r\n                            eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(sessionToken, message, event.defaultURL)});\r\n\r\n                        } else {\r\n                            log('No session token found for key message');\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Helper function to retrieve the stored session token based on a given\r\n     * sessionID value\r\n     *\r\n     * @param sessionArray {Array} the array of sessions to search\r\n     * @param sessionID the sessionID to search for\r\n     * @returns {*} the session token with the given sessionID\r\n     */\r\n    function findSessionByID(sessionArray, sessionID) {\r\n\r\n        if (!sessionID || !sessionArray) {\r\n            return null;\r\n        } else {\r\n            var len = sessionArray.length;\r\n            for (var i = 0; i < len; i++) {\r\n                if (sessionArray[i].sessionID == sessionID) {\r\n                    return sessionArray[i];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function removeEventListeners() {\r\n        videoElement.removeEventListener(api.keyerror, eventHandler);\r\n        videoElement.removeEventListener(api.needkey, eventHandler);\r\n        videoElement.removeEventListener(api.keymessage, eventHandler);\r\n        videoElement.removeEventListener(api.keyadded, eventHandler);\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData: getAllInitData,\r\n        requestKeySystemAccess: requestKeySystemAccess,\r\n        getKeySystem: getKeySystem,\r\n        selectKeySystem: selectKeySystem,\r\n        setMediaElement: setMediaElement,\r\n        createKeySession: createKeySession,\r\n        updateKeySession: updateKeySession,\r\n        closeKeySession: closeKeySession,\r\n        setServerCertificate: setServerCertificate,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\r\nexport default FactoryMaker.getClassFactory(ProtectionModel_01b);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Most recent EME implementation\r\n *\r\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController.js';\r\nimport NeedKey from '../vo/NeedKey.js';\r\nimport KeyError from '../vo/KeyError.js';\r\nimport KeyMessage from '../vo/KeyMessage.js';\r\nimport KeySystemAccess from '../vo/KeySystemAccess.js';\r\nimport Events from '../../../core/events/Events.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction ProtectionModel_21Jan2015(config) {\r\n\r\n    let context = this.context;\r\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    let log = config.log;\r\n\r\n    var instance,\r\n        keySystem,\r\n        videoElement,\r\n        mediaKeys,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        keySystem = null;\r\n        videoElement = null;\r\n        mediaKeys = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        var numSessions = sessions.length;\r\n        var session;\r\n\r\n        if (numSessions !== 0) {\r\n            // Called when we are done closing a session.  Success or fail\r\n            var done = function (session) {\r\n                removeSession(session);\r\n                if (sessions.length === 0) {\r\n                    if (videoElement) {\r\n                        videoElement.removeEventListener('encrypted', eventHandler);\r\n                        videoElement.setMediaKeys(null).then(function () {\r\n                            eventBus.trigger(Events.TEARDOWN_COMPLETE);\r\n                        });\r\n                    } else {\r\n                        eventBus.trigger(Events.TEARDOWN_COMPLETE);\r\n                    }\r\n                }\r\n            };\r\n            for (var i = 0; i < numSessions; i++) {\r\n                session = sessions[i];\r\n                (function (s) {\r\n                    // Override closed promise resolver\r\n                    session.session.closed.then(function () {\r\n                        done(s);\r\n                    });\r\n                    // Close the session and handle errors, otherwise promise\r\n                    // resolver above will be called\r\n                    closeKeySessionInternal(session).catch(function () {\r\n                        done(s);\r\n                    });\r\n\r\n                })(session);\r\n            }\r\n        } else {\r\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\r\n        }\r\n    }\r\n\r\n    function getKeySystem() {\r\n        return keySystem;\r\n    }\r\n\r\n    function getAllInitData() {\r\n        var retVal = [];\r\n        for (var i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        requestKeySystemAccessInternal(ksConfigurations, 0);\r\n    }\r\n\r\n    function selectKeySystem(keySystemAccess) {\r\n        keySystemAccess.mksa.createMediaKeys().then(function (mkeys) {\r\n            keySystem = keySystemAccess.keySystem;\r\n            mediaKeys = mkeys;\r\n            if (videoElement) {\r\n                videoElement.setMediaKeys(mediaKeys);\r\n            }\r\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\r\n\r\n        }).catch(function () {\r\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\r\n        });\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener('encrypted', eventHandler);\r\n            videoElement.setMediaKeys(null);\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener('encrypted', eventHandler);\r\n            if (mediaKeys) {\r\n                videoElement.setMediaKeys(mediaKeys);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setServerCertificate(serverCertificate) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not set server certificate until you have selected a key system');\r\n        }\r\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\r\n            log('DRM: License server certificate successfully updated.');\r\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED);\r\n        }).catch(function (error) {\r\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED, {error: 'Error updating server certificate -- ' + error.name});\r\n        });\r\n    }\r\n\r\n    function createKeySession(initData, sessionType) {\r\n\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        var session = mediaKeys.createSession(sessionType);\r\n        var sessionToken = createSessionToken(session, initData, sessionType);\r\n\r\n        // Generate initial key request\r\n        session.generateRequest('cenc', initData).then(function () {\r\n            log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\r\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\r\n        }).catch(function (error) {\r\n            // TODO: Better error string\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error generating key request -- ' + error.name});\r\n        });\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n\r\n        var session = sessionToken.session;\r\n\r\n        // Send our request to the key session\r\n        if (protectionKeyController.isClearKey(keySystem)) {\r\n            message = message.toJWK();\r\n        }\r\n        session.update(message).catch(function (error) {\r\n            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, 'Error sending update() message! ' + error.name)});\r\n        });\r\n    }\r\n\r\n    function loadKeySession(sessionID) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not load sessions until you have selected a key system');\r\n        }\r\n\r\n        var session = mediaKeys.createSession();\r\n\r\n        // Load persisted session data into our newly created session object\r\n        session.load(sessionID).then(function (success) {\r\n            if (success) {\r\n                var sessionToken = createSessionToken(session);\r\n                log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\r\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\r\n            } else {\r\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session! Invalid Session ID (' + sessionID + ')'});\r\n            }\r\n        }).catch(function (error) {\r\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session (' + sessionID + ')! ' + error.name});\r\n        });\r\n    }\r\n\r\n    function removeKeySession(sessionToken) {\r\n        var session = sessionToken.session;\r\n\r\n        session.remove().then(function () {\r\n            log('DRM: Session removed.  SessionID = ' + sessionToken.getSessionID());\r\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: sessionToken.getSessionID()});\r\n        }, function (error) {\r\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: null, error: 'Error removing session (' + sessionToken.getSessionID() + '). ' + error.name});\r\n\r\n        });\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the key session\r\n        closeKeySessionInternal(sessionToken).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: null, error: 'Error closing session (' + sessionToken.getSessionID() + ') ' + error.name});\r\n        });\r\n    }\r\n\r\n    function requestKeySystemAccessInternal(ksConfigurations, idx) {\r\n        (function (i) {\r\n            var keySystem = ksConfigurations[i].ks;\r\n            var configs = ksConfigurations[i].configs;\r\n            navigator.requestMediaKeySystemAccess(keySystem.systemString, configs).then(function (mediaKeySystemAccess) {\r\n\r\n                // Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()\r\n                var configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\r\n                        mediaKeySystemAccess.getConfiguration() : null;\r\n                var keySystemAccess = new KeySystemAccess(keySystem, configuration);\r\n                keySystemAccess.mksa = mediaKeySystemAccess;\r\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: keySystemAccess});\r\n\r\n            }).catch(function () {\r\n                if (++i < ksConfigurations.length) {\r\n                    requestKeySystemAccessInternal(ksConfigurations, i);\r\n                } else {\r\n                    eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied!'});\r\n                }\r\n            });\r\n        })(idx);\r\n    }\r\n\r\n    function closeKeySessionInternal(sessionToken) {\r\n        var session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener('keystatuseschange', sessionToken);\r\n        session.removeEventListener('message', sessionToken);\r\n\r\n        // Send our request to the key session\r\n        return session.close();\r\n    }\r\n\r\n    // This is our main event handler for all desired HTMLMediaElement events\r\n    // related to EME.  These events are translated into our API-independent\r\n    // versions of the same events\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n\r\n                    case 'encrypted':\r\n                        if (event.initData) {\r\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, event.initDataType)});\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    function removeSession(token) {\r\n        // Remove from our session list\r\n        for (var i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === token) {\r\n                sessions.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(session, initData, sessionType) {\r\n\r\n        var token = { // Implements SessionToken\r\n            session: session,\r\n            initData: initData,\r\n\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'keystatuseschange':\r\n                        eventBus.trigger(Events.KEY_STATUSES_CHANGED, {data: this});\r\n                        break;\r\n\r\n                    case 'message':\r\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(this, message, undefined, event.messageType)});\r\n                        break;\r\n                }\r\n            },\r\n\r\n            getSessionID: function () {\r\n                return session.sessionId;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return session.expiration;\r\n            },\r\n\r\n            getKeyStatuses: function () {\r\n                return session.keyStatuses;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return sessionType;\r\n            }\r\n        };\r\n\r\n        // Add all event listeners\r\n        session.addEventListener('keystatuseschange', token);\r\n        session.addEventListener('message', token);\r\n\r\n        // Register callback for session closed Promise\r\n        session.closed.then(function () {\r\n            removeSession(token);\r\n            log('DRM: Session closed.  SessionID = ' + token.getSessionID());\r\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: token.getSessionID()});\r\n        });\r\n\r\n        // Add to our session list\r\n        sessions.push(token);\r\n\r\n        return token;\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData: getAllInitData,\r\n        requestKeySystemAccess: requestKeySystemAccess,\r\n        getKeySystem: getKeySystem,\r\n        selectKeySystem: selectKeySystem,\r\n        setMediaElement: setMediaElement,\r\n        setServerCertificate: setServerCertificate,\r\n        createKeySession: createKeySession,\r\n        updateKeySession: updateKeySession,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        closeKeySession: closeKeySession,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\r\nexport default FactoryMaker.getClassFactory(ProtectionModel_21Jan2015);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\r\n *\r\n * Implemented by Internet Explorer 11 (Windows 8.1)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\n\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController.js';\r\nimport NeedKey from '../vo/NeedKey.js';\r\nimport KeyError from '../vo/KeyError.js';\r\nimport KeyMessage from '../vo/KeyMessage.js';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration.js';\r\nimport KeySystemAccess from '../vo/KeySystemAccess.js';\r\nimport Events from '../../../core/events/Events.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction ProtectionModel_3Feb2014(config) {\r\n\r\n    let context = this.context;\r\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    let log = config.log;\r\n    let api = config.api;\r\n\r\n\r\n    let instance,\r\n        videoElement,\r\n        keySystem,\r\n        mediaKeys,\r\n        keySystemAccess,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        videoElement = null;\r\n        keySystem = null;\r\n        mediaKeys = null;\r\n        keySystemAccess = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        try {\r\n            for (var i = 0; i < sessions.length; i++) {\r\n                closeKeySession(sessions[i]);\r\n            }\r\n            if (videoElement) {\r\n                videoElement.removeEventListener(api.needkey, eventHandler);\r\n            }\r\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\r\n        } catch (error) {\r\n            eventBus.trigger(Events.TEARDOWN_COMPLETE, {error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message});\r\n        }\r\n    }\r\n\r\n    function getKeySystem() {\r\n        return keySystem;\r\n    }\r\n\r\n    function getAllInitData() {\r\n        var retVal = [];\r\n        for (var i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n\r\n        // Try key systems in order, first one with supported key system configuration\r\n        // is used\r\n        var found = false;\r\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\r\n            var configs = ksConfigurations[ksIdx].configs;\r\n            var supportedAudio = null;\r\n            var supportedVideo = null;\r\n\r\n            // Try key system configs in order, first one with supported audio/video\r\n            // is used\r\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                var audios = configs[configIdx].audioCapabilities;\r\n                var videos = configs[configIdx].videoCapabilities;\r\n\r\n                // Look for supported audio container/codecs\r\n                if (audios && audios.length !== 0) {\r\n                    supportedAudio = []; // Indicates that we have a requested audio config\r\n                    for (var audioIdx = 0; audioIdx < audios.length; audioIdx++) {\r\n                        if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\r\n                            supportedAudio.push(audios[audioIdx]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Look for supported video container/codecs\r\n                if (videos && videos.length !== 0) {\r\n                    supportedVideo = []; // Indicates that we have a requested video config\r\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                        if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\r\n                            supportedVideo.push(videos[videoIdx]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // No supported audio or video in this configuration OR we have\r\n                // requested audio or video configuration that is not supported\r\n                if ((!supportedAudio && !supportedVideo) ||\r\n                    (supportedAudio && supportedAudio.length === 0) ||\r\n                    (supportedVideo && supportedVideo.length === 0)) {\r\n                    continue;\r\n                }\r\n\r\n                // This configuration is supported\r\n                found = true;\r\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: new KeySystemAccess(ks, ksConfig)});\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\r\n        }\r\n    }\r\n\r\n    function selectKeySystem(ksAccess) {\r\n        try {\r\n            mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\r\n            keySystem = ksAccess.keySystem;\r\n            keySystemAccess = ksAccess;\r\n            if (videoElement) {\r\n                setMediaKeys();\r\n            }\r\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\r\n        } catch (error) {\r\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\r\n        }\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener(api.needkey, eventHandler);\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            if (mediaKeys) {\r\n                setMediaKeys();\r\n            }\r\n        }\r\n    }\r\n\r\n    function createKeySession(initData /*, keySystemType */) {\r\n\r\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Use the first video capability for the contentType.\r\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\r\n\r\n        // If player is trying to playback Audio only stream - don't error out.\r\n        var capabilities = null;\r\n\r\n        if (keySystemAccess.ksConfiguration.videoCapabilities !== null && keySystemAccess.ksConfiguration.videoCapabilities.length > 0)\r\n          capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\r\n\r\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities !== null && keySystemAccess.ksConfiguration.audioCapabilities.length > 0)\r\n          capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\r\n\r\n        if (capabilities === null)\r\n          throw new Error('Can not create sessions for unknown content types.');\r\n\r\n        var contentType = capabilities.contentType;\r\n        var session = mediaKeys.createSession(contentType, new Uint8Array(initData));\r\n        var sessionToken = createSessionToken(session, initData);\r\n\r\n        // Add all event listeners\r\n        session.addEventListener(api.error, sessionToken);\r\n        session.addEventListener(api.message, sessionToken);\r\n        session.addEventListener(api.ready, sessionToken);\r\n        session.addEventListener(api.close, sessionToken);\r\n\r\n        // Add to our session list\r\n        sessions.push(sessionToken);\r\n        log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\r\n        eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n\r\n        var session = sessionToken.session;\r\n\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the key session\r\n            session.update(new Uint8Array(message));\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            session.update(new Uint8Array(message.toJWK()));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close the given session and release all associated keys.  Following\r\n     * this call, the sessionToken becomes invalid\r\n     *\r\n     * @param sessionToken the session token\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n\r\n        var session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener(api.error, sessionToken);\r\n        session.removeEventListener(api.message, sessionToken);\r\n        session.removeEventListener(api.ready, sessionToken);\r\n        session.removeEventListener(api.close, sessionToken);\r\n\r\n        // Remove from our session list\r\n        for (var i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === sessionToken) {\r\n                sessions.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Send our request to the key session\r\n        session[api.release]();\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\r\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\r\n\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n\r\n                    case api.needkey:\r\n                        if (event.initData) {\r\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    // IE11 does not let you set MediaKeys until it has entered a certain\r\n    // readyState, so we need this logic to ensure we don't set the keys\r\n    // too early\r\n    function setMediaKeys() {\r\n        var boundDoSetKeys = null;\r\n        var doSetKeys = function () {\r\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\r\n            videoElement[api.setMediaKeys](mediaKeys);\r\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\r\n        };\r\n        if (videoElement.readyState >= 1) {\r\n            doSetKeys();\r\n        } else {\r\n            boundDoSetKeys = doSetKeys.bind(this);\r\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\r\n        }\r\n\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(keySession, initData) {\r\n        return {\r\n            // Implements SessionToken\r\n            session: keySession,\r\n            initData: initData,\r\n\r\n            getSessionID: function () {\r\n                return this.session.sessionId;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return NaN;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return 'temporary';\r\n            },\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n\r\n                    case api.error:\r\n                        var errorStr = 'KeyError'; // TODO: Make better string from event\r\n                        eventBus.trigger(Events.KEY_ERROR, { data: new KeyError(this, errorStr) });\r\n                        break;\r\n                    case api.message:\r\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\r\n                        break;\r\n                    case api.ready:\r\n                        log('DRM: Key added.');\r\n                        eventBus.trigger(Events.KEY_ADDED);\r\n                        break;\r\n\r\n                    case api.close:\r\n                        log('DRM: Session closed.  SessionID = ' + this.getSessionID());\r\n                        eventBus.trigger(Events.KEY_SESSION_CLOSED, { data: this.getSessionID() });\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData: getAllInitData,\r\n        requestKeySystemAccess: requestKeySystemAccess,\r\n        getKeySystem: getKeySystem,\r\n        selectKeySystem: selectKeySystem,\r\n        setMediaElement: setMediaElement,\r\n        createKeySession: createKeySession,\r\n        updateKeySession: updateKeySession,\r\n        closeKeySession: closeKeySession,\r\n        setServerCertificate: setServerCertificate,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\r\nexport default FactoryMaker.getClassFactory(ProtectionModel_3Feb2014);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CableLabs ClearKey license server implementation\r\n *\r\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\r\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\nimport KeyPair from '../vo/KeyPair.js';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction ClearKey() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url, message/*, messageType*/) {\r\n        // Build ClearKey server query string\r\n        var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n        url += '/?';\r\n        for (var i = 0; i < jsonMsg.kids.length; i++) {\r\n            url += jsonMsg.kids[i] + '&';\r\n        }\r\n        url = url.substring(0, url.length - 1);\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'GET';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr*/) {\r\n        return 'json';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        if (!serverResponse.hasOwnProperty('keys')) {\r\n            return null;\r\n        }\r\n        var keyPairs = [];\r\n        for (let i = 0; i < serverResponse.keys.length; i++) {\r\n            var keypair = serverResponse.keys[i];\r\n            var keyid = keypair.kid.replace(/=/g, '');\r\n            var key = keypair.k.replace(/=/g, '');\r\n\r\n            keyPairs.push(new KeyPair(keyid, key));\r\n        }\r\n        return new ClearKeyKeySet(keyPairs);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nClearKey.__dashjs_factory_name = 'ClearKey';\r\nexport default FactoryMaker.getSingletonFactory(ClearKey);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CastLabs DRMToday License Server implementation\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport BASE64 from '../../../../externals/base64.js';\r\n\r\nfunction DRMToday() {\r\n\r\n    const keySystems = {\r\n        'com.widevine.alpha': {\r\n            responseType: 'json',\r\n            getLicenseMessage: function (response) {\r\n                return BASE64.decodeArray(response.license);\r\n            },\r\n            getErrorResponse: function (response) {\r\n                return response;\r\n            }\r\n        },\r\n        'com.microsoft.playready': {\r\n            responseType: 'arraybuffer',\r\n            getLicenseMessage: function (response) {\r\n                return response;\r\n            },\r\n            getErrorResponse: function (response) {\r\n                return String.fromCharCode.apply(null, new Uint8Array(response));\r\n            }\r\n        }\r\n    };\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].responseType;\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDRMToday.__dashjs_factory_name = 'DRMToday';\r\nexport default FactoryMaker.getSingletonFactory(DRMToday);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Microsoft PlayReady Test License Server\r\n *\r\n * For testing content that uses the PlayReady test server at\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction PlayReady() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return serverResponse;\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nPlayReady.__dashjs_factory_name = 'PlayReady';\r\nexport default FactoryMaker.getSingletonFactory(PlayReady);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction Widevine() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return serverResponse;\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nWidevine.__dashjs_factory_name = 'Widevine';\r\nexport default FactoryMaker.getSingletonFactory(Widevine);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * A collection of ClearKey encryption keys with an (optional) associated\r\n * type\r\n *\r\n * @param keyPairs {KeyPair[]} array of key pairs\r\n * @param type the type of keys in this set.  One of either 'persistent'\r\n * or 'temporary'.  Can also be null or undefined.\r\n * @class\r\n * @ignore\r\n */\r\nclass ClearKeyKeySet {\r\n    constructor(keyPairs, type) {\r\n        if (type && type !== 'persistent' && type !== 'temporary')\r\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\r\n        this.keyPairs = keyPairs;\r\n        this.type = type;\r\n    }\r\n\r\n    /**\r\n     * Convert this key set to its JSON Web Key (JWK) representation\r\n     *\r\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\r\n     */\r\n    toJWK() {\r\n        var i;\r\n        var numKeys = this.keyPairs.length;\r\n        var jwk = {keys: []};\r\n\r\n        for (i = 0; i < numKeys; i++) {\r\n            var key = {\r\n                kty: 'oct',\r\n                alg: 'A128KW',\r\n                kid: this.keyPairs[i].keyID,\r\n                k: this.keyPairs[i].key\r\n            };\r\n            jwk.keys.push(key);\r\n        }\r\n        if (this.type) {\r\n            jwk.type = this.type;\r\n        }\r\n        var jwkString = JSON.stringify(jwk);\r\n        var len = jwkString.length;\r\n\r\n        // Convert JSON string to ArrayBuffer\r\n        var buf = new ArrayBuffer(len);\r\n        var bView = new Uint8Array(buf);\r\n        for (i = 0; i < len; i++)\r\n            bView[i] = jwkString.charCodeAt(i);\r\n        return buf;\r\n    }\r\n}\r\n\r\nexport default ClearKeyKeySet;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * EME-independent KeyError\r\n *\r\n * @param sessionToken the key session to which this error is associated\r\n * @param errorString an informational error message\r\n * @class\r\n * @deprecated Newest versions of EME APIs will not use this error object\r\n */\r\nclass KeyError {\r\n    constructor(sessionToken, errorString) {\r\n        this.sessionToken = sessionToken;\r\n        this.error = errorString;\r\n    }\r\n}\r\n\r\nexport default KeyError;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * EME-independent KeyMessage\r\n *\r\n * @param {SessionToken} sessionToken the session\r\n * to which the key message is associated\r\n * @param {ArrayBuffer} message the key message\r\n * @param [defaultURL] license acquisition URL provided by the CDM\r\n * @param [messageType=\"license-request\"] the message type.  Supported message types can be found\r\n * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n * @class\r\n */\r\nclass KeyMessage {\r\n    constructor(sessionToken, message, defaultURL, messageType) {\r\n        this.sessionToken = sessionToken;\r\n        this.message = message;\r\n        this.defaultURL = defaultURL;\r\n        this.messageType = messageType ? messageType : 'license-request';\r\n    }\r\n}\r\n\r\nexport default KeyMessage;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Represents a 128-bit keyID and 128-bit encryption key\r\n *\r\n * @param keyID {String} 128-bit key ID, base64 encoded, with no padding\r\n * @param key {String} 128-bit encryption key, base64 encoded, with no padding\r\n * @class\r\n * @ignore\r\n */\r\nclass KeyPair {\r\n    constructor(keyID, key) {\r\n        this.keyID = keyID;\r\n        this.key = key;\r\n    }\r\n}\r\n\r\nexport default KeyPair;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Creates a new key system access token.  Represents a valid key system for\r\n * given piece of content and key system requirements.  Used to initialize license\r\n * acquisition operations.\r\n *\r\n * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\r\n * @param {KeySystemConfiguration} ksConfiguration the\r\n * subset of configurations passed to the key system access request that are supported\r\n * by this user agent\r\n * @class\r\n * @ignore\r\n */\r\nclass KeySystemAccess {\r\n    constructor(keySystem, ksConfiguration) {\r\n        this.keySystem = keySystem;\r\n        this.ksConfiguration = ksConfiguration;\r\n    }\r\n}\r\n\r\nexport default KeySystemAccess;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Represents a set of configurations that describe the capabilities desired for\r\n * support by a given CDM\r\n *\r\n * @param {MediaCapability[]} audioCapabilities array of\r\n * desired audio capabilities.  Higher preference capabilities should be placed earlier\r\n * in the array.\r\n * @param {MediaCapability[]} videoCapabilities array of\r\n * desired video capabilities.  Higher preference capabilities should be placed earlier\r\n * in the array.\r\n * @param {string} [distinctiveIdentifier=\"optional\"] desired use of distinctive identifiers.\r\n * One of \"required\", \"optional\", or \"not-allowed\"\r\n * @param {string} [persistentState=\"optional\"] desired support for persistent storage of\r\n * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\r\n * @param {string[]} [sessionTypes=[\"temporary\"]] List of session types that must\r\n * be supported by the key system\r\n * @class\r\n */\r\nclass KeySystemConfiguration {\r\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\r\n        this.initDataTypes = [ 'cenc' ];\r\n        this.audioCapabilities = audioCapabilities;\r\n        this.videoCapabilities = videoCapabilities;\r\n        this.distinctiveIdentifier = distinctiveIdentifier;\r\n        this.persistentState = persistentState;\r\n        this.sessionTypes = sessionTypes;\r\n    }\r\n}\r\n\r\nexport default KeySystemConfiguration;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * A media capability\r\n *\r\n * @param {string} contentType MIME type and codecs (RFC6386)\r\n * @param {string} [robustness]\r\n * @constructor\r\n * @ignore\r\n */\r\nclass MediaCapability {\r\n    constructor(contentType, robustness) {\r\n        this.contentType = contentType;\r\n        this.robustness = robustness;\r\n    }\r\n}\r\n\r\nexport default MediaCapability;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass NeedKey {\r\n    /**\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @param {String} [initDataType] initialization data type\r\n     * @constructor\r\n     */\r\n    constructor(initData, initDataType) {\r\n        this.initData = initData;\r\n        this.initDataType = initDataType;\r\n    }\r\n}\r\n\r\nexport default NeedKey;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction RulesContext(config) {\r\n\r\n    let instance;\r\n    let representationInfo = config.streamProcessor.getCurrentRepresentationInfo();\r\n    let sp = config.streamProcessor;\r\n    let currentValue = config.currentValue;\r\n\r\n    function getStreamInfo() {\r\n        return representationInfo.mediaInfo.streamInfo;\r\n    }\r\n\r\n    function getMediaInfo() {\r\n        return representationInfo.mediaInfo;\r\n    }\r\n\r\n    function getTrackInfo() {\r\n        return representationInfo;\r\n    }\r\n\r\n    function getCurrentValue() {\r\n        return currentValue;\r\n    }\r\n\r\n    function getManifestInfo() {\r\n        return representationInfo.mediaInfo.streamInfo.manifestInfo;\r\n    }\r\n\r\n    function getStreamProcessor() {\r\n        return sp;\r\n    }\r\n\r\n    instance = {\r\n        getStreamInfo: getStreamInfo,\r\n        getMediaInfo: getMediaInfo,\r\n        getTrackInfo: getTrackInfo,\r\n        getCurrentValue: getCurrentValue,\r\n        getManifestInfo: getManifestInfo,\r\n        getStreamProcessor: getStreamProcessor\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nRulesContext.__dashjs_factory_name = 'RulesContext';\r\nexport default FactoryMaker.getClassFactory(RulesContext);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport RulesContext from './RulesContext.js';\r\nimport SwitchRequest from './SwitchRequest.js';\r\nimport ABRRulesCollection from './abr/ABRRulesCollection.js';\r\nimport SynchronizationRulesCollection from './synchronization/SynchronizationRulesCollection.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nconst ABR_RULE = 0;\r\nconst SYNC_RULE = 1;\r\n\r\nfunction RulesController() {\r\n\r\n    let context = this.context;\r\n\r\n    let instance,\r\n        rules;\r\n\r\n    function initialize() {\r\n        rules = {};\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.abrRulesCollection) {\r\n            rules[ABR_RULE] = config.abrRulesCollection;\r\n        }\r\n\r\n        if (config.synchronizationRulesCollection) {\r\n            rules[SYNC_RULE] = config.synchronizationRulesCollection;\r\n        }\r\n    }\r\n\r\n    function applyRules(rulesArr, streamProcessor, callback, current, overrideFunc) {\r\n        var values = {};\r\n        var rule,\r\n            i;\r\n\r\n        var rulesCount = rulesArr.length;\r\n        var ln = rulesCount;\r\n        var rulesContext = getRulesContext(streamProcessor, current);\r\n\r\n        var callbackFunc = function (result) {\r\n            var value,\r\n                confidence;\r\n\r\n            if (result.value !== SwitchRequest.NO_CHANGE) {\r\n                values[result.priority] = overrideFunc(values[result.priority], result.value);\r\n            }\r\n\r\n            if (--rulesCount) return;\r\n\r\n            if (values[SwitchRequest.WEAK] !== SwitchRequest.NO_CHANGE) {\r\n                confidence = SwitchRequest.WEAK;\r\n                value = values[SwitchRequest.WEAK];\r\n\r\n            }\r\n\r\n            if (values[SwitchRequest.DEFAULT] !== SwitchRequest.NO_CHANGE) {\r\n                confidence = SwitchRequest.DEFAULT;\r\n                value = values[SwitchRequest.DEFAULT];\r\n            }\r\n\r\n            if (values[SwitchRequest.STRONG] !== SwitchRequest.NO_CHANGE) {\r\n                confidence = SwitchRequest.STRONG;\r\n                value = values[SwitchRequest.STRONG];\r\n            }\r\n\r\n            if (confidence != SwitchRequest.STRONG &&\r\n                confidence != SwitchRequest.WEAK) {\r\n                confidence = SwitchRequest.DEFAULT;\r\n            }\r\n\r\n\r\n            callback({ value: (value !== undefined) ? value : current, confidence: confidence });\r\n\r\n        };\r\n\r\n        values[SwitchRequest.STRONG] = SwitchRequest.NO_CHANGE;\r\n        values[SwitchRequest.WEAK] = SwitchRequest.NO_CHANGE;\r\n        values[SwitchRequest.DEFAULT] = SwitchRequest.NO_CHANGE;\r\n\r\n        for (i = 0; i < ln; i++) {\r\n            rule = rulesArr[i];\r\n            rule.execute(rulesContext, callbackFunc);\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        var abrRules = rules[ABR_RULE];\r\n        var synchronizationRules = rules[SYNC_RULE];\r\n        var allRules = (abrRules.getRules(ABRRulesCollection.QUALITY_SWITCH_RULES) || []).\r\n            concat(abrRules.getRules(ABRRulesCollection.ABANDON_FRAGMENT_RULES) || []).\r\n            concat(synchronizationRules.getRules(SynchronizationRulesCollection.TIME_SYNCHRONIZED_RULES) || []).\r\n            concat(synchronizationRules.getRules(SynchronizationRulesCollection.BEST_GUESS_RULES) || []);\r\n        var ln = allRules.length;\r\n\r\n        var rule,\r\n            i;\r\n\r\n        for (i = 0; i < ln; i++) {\r\n            rule = allRules[i];\r\n\r\n            if (typeof (rule.reset) !== 'function') continue;\r\n\r\n            rule.reset();\r\n        }\r\n\r\n        rules = {};\r\n    }\r\n\r\n    function getRulesContext(streamProcessor, currentValue) {\r\n        return RulesContext(context).create({streamProcessor: streamProcessor, currentValue: currentValue});\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        setConfig: setConfig,\r\n        applyRules: applyRules,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nRulesController.__dashjs_factory_name = 'RulesController';\r\nlet factory =  FactoryMaker.getSingletonFactory(RulesController);\r\nfactory.ABR_RULE = ABR_RULE;\r\nfactory.SYNC_RULE = SYNC_RULE;\r\nexport default factory;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nconst NO_CHANGE = 999;\r\nconst DEFAULT = 0.5;\r\nconst STRONG = 1;\r\nconst WEAK = 0;\r\n\r\nfunction SwitchRequest (v, p) {\r\n    //TODO refactor all the calls to this to use config to be like everything else.\r\n    let value = (v === undefined) ? NO_CHANGE : v;\r\n    let priority = (p === undefined) ? DEFAULT : p;\r\n\r\n    let instance = {\r\n        value: value,\r\n        priority: priority\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nSwitchRequest.__dashjs_factory_name = 'SwitchRequest';\r\nlet factory = FactoryMaker.getClassFactory(SwitchRequest);\r\nfactory.NO_CHANGE = NO_CHANGE;\r\nfactory.DEFAULT = DEFAULT;\r\nfactory.STRONG = STRONG;\r\nfactory.WEAK = WEAK;\r\nexport default factory;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ThroughputRule from './ThroughputRule.js';\r\nimport BufferOccupancyRule from './BufferOccupancyRule.js';\r\nimport InsufficientBufferRule from './InsufficientBufferRule.js';\r\nimport AbandonRequestsRule from './AbandonRequestsRule.js';\r\nimport BolaRule from './BolaRule.js';\r\nimport BolaAbandonRule from './BolaAbandonRule.js';\r\nimport MediaPlayerModel from '../../models/MediaPlayerModel.js';\r\nimport MetricsModel from '../../models/MetricsModel.js';\r\nimport DashMetrics from '../../../dash/DashMetrics.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nconst QUALITY_SWITCH_RULES = 'qualitySwitchRules';\r\nconst ABANDON_FRAGMENT_RULES = 'abandonFragmentRules';\r\n\r\nfunction ABRRulesCollection() {\r\n\r\n    let context = this.context;\r\n\r\n    let instance,\r\n        qualitySwitchRules,\r\n        abandonFragmentRules;\r\n\r\n    function initialize() {\r\n        qualitySwitchRules = [];\r\n        abandonFragmentRules = [];\r\n\r\n        let metricsModel = MetricsModel(context).getInstance();\r\n        let dashMetrics = DashMetrics(context).getInstance();\r\n        let mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n\r\n        if (mediaPlayerModel.getBufferOccupancyABREnabled()) {\r\n            qualitySwitchRules.push(\r\n                BolaRule(context).create({\r\n                    metricsModel: metricsModel,\r\n                    dashMetrics: DashMetrics(context).getInstance()\r\n                })\r\n            );\r\n            abandonFragmentRules.push(\r\n                BolaAbandonRule(context).create({\r\n                    metricsModel: metricsModel,\r\n                    dashMetrics: DashMetrics(context).getInstance()\r\n                })\r\n            );\r\n        } else {\r\n            qualitySwitchRules.push(\r\n                ThroughputRule(context).create({\r\n                    metricsModel: metricsModel,\r\n                    dashMetrics: dashMetrics\r\n                })\r\n            );\r\n\r\n            qualitySwitchRules.push(\r\n                BufferOccupancyRule(context).create({\r\n                    metricsModel: metricsModel,\r\n                    dashMetrics: dashMetrics\r\n                })\r\n            );\r\n\r\n            qualitySwitchRules.push(InsufficientBufferRule(context).create({metricsModel: metricsModel}));\r\n            abandonFragmentRules.push(AbandonRequestsRule(context).create());\r\n        }\r\n    }\r\n\r\n    function getRules (type) {\r\n        switch (type) {\r\n            case QUALITY_SWITCH_RULES:\r\n                return qualitySwitchRules;\r\n            case ABANDON_FRAGMENT_RULES:\r\n                return abandonFragmentRules;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        getRules: getRules\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nABRRulesCollection.__dashjs_factory_name = 'ABRRulesCollection';\r\nlet factory =  FactoryMaker.getSingletonFactory(ABRRulesCollection);\r\nfactory.QUALITY_SWITCH_RULES = QUALITY_SWITCH_RULES;\r\nfactory.ABANDON_FRAGMENT_RULES = ABANDON_FRAGMENT_RULES;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport SwitchRequest from '../SwitchRequest.js';\r\nimport MediaPlayerModel from '../../models/MediaPlayerModel.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport Debug from '../../../core/Debug.js';\r\n\r\nconst GRACE_TIME_THRESHOLD = 500;\r\nconst ABANDON_MULTIPLIER = 1.5;\r\n\r\nfunction AbandonRequestsRule(/*config*/) {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n\r\n    let instance,\r\n        fragmentDict,\r\n        abandonDict,\r\n        mediaPlayerModel;\r\n\r\n    function setup() {\r\n        fragmentDict = {};\r\n        abandonDict = {};\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n    }\r\n\r\n    function setFragmentRequestDict(type, id) {\r\n        fragmentDict[type] = fragmentDict[type] || {};\r\n        fragmentDict[type][id] = fragmentDict[type][id] || {};\r\n    }\r\n\r\n    function execute(rulesContext, callback) {\r\n        var fragmentInfo;\r\n        var now = new Date().getTime();\r\n        var mediaInfo = rulesContext.getMediaInfo();\r\n        var mediaType = mediaInfo.type;\r\n        var progressEvent = rulesContext.getCurrentValue();\r\n        var representationInfo = rulesContext.getTrackInfo();\r\n        var req = progressEvent.request;\r\n        var abrController = rulesContext.getStreamProcessor().getABRController();\r\n        var switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK);\r\n\r\n        if (!isNaN(req.index)) {\r\n            setFragmentRequestDict(mediaType, req.index);\r\n            fragmentInfo = fragmentDict[mediaType][req.index];\r\n\r\n            if (fragmentInfo === null || req.firstByteDate === null || abandonDict.hasOwnProperty(fragmentInfo.id)) {\r\n                callback(switchRequest);\r\n                return;\r\n            }\r\n\r\n            //setup some init info based on first progress event\r\n            if (fragmentInfo.firstByteTime === undefined) {\r\n                fragmentInfo.firstByteTime = req.firstByteDate.getTime();\r\n                fragmentInfo.segmentDuration = req.duration;\r\n                fragmentInfo.bytesTotal = req.bytesTotal;\r\n                fragmentInfo.id = req.index;\r\n                //log(\"FRAG ID : \" ,fragmentInfo.id, \" *****************\");\r\n            }\r\n            //update info base on subsequent progress events until completed.\r\n            fragmentInfo.bytesLoaded = req.bytesLoaded;\r\n            fragmentInfo.elapsedTime = now - fragmentInfo.firstByteTime;\r\n\r\n            if (fragmentInfo.bytesLoaded < fragmentInfo.bytesTotal &&\r\n                fragmentInfo.elapsedTime >= GRACE_TIME_THRESHOLD) {\r\n\r\n                fragmentInfo.measuredBandwidthInKbps = Math.round(fragmentInfo.bytesLoaded * 8 / fragmentInfo.elapsedTime);\r\n                fragmentInfo.estimatedTimeOfDownload = (fragmentInfo.bytesTotal * 8 * 0.001 / fragmentInfo.measuredBandwidthInKbps).toFixed(2);\r\n                //log(\"id: \",fragmentInfo.id,  \"kbps: \", fragmentInfo.measuredBandwidthInKbps, \"etd: \",fragmentInfo.estimatedTimeOfDownload, \"et: \", fragmentInfo.elapsedTime/1000);\r\n\r\n                if (fragmentInfo.estimatedTimeOfDownload < (fragmentInfo.segmentDuration * ABANDON_MULTIPLIER) || representationInfo.quality === 0) {\r\n                    callback(switchRequest);\r\n                    return;\r\n                }else if (!abandonDict.hasOwnProperty(fragmentInfo.id)) {\r\n                    var newQuality = abrController.getQualityForBitrate(mediaInfo, fragmentInfo.measuredBandwidthInKbps * mediaPlayerModel.getBandwidthSafetyFactor());\r\n                    switchRequest = SwitchRequest(context).create(newQuality, SwitchRequest.STRONG);\r\n                    abandonDict[fragmentInfo.id] = fragmentInfo;\r\n                    log('AbandonRequestsRule ( ', mediaType, 'frag id',fragmentInfo.id,') is asking to abandon and switch to quality to ', newQuality, ' measured bandwidth was', fragmentInfo.measuredBandwidthInKbps);\r\n                    delete fragmentDict[mediaType][fragmentInfo.id];\r\n                }\r\n            }else if (fragmentInfo.bytesLoaded === fragmentInfo.bytesTotal) {\r\n                delete fragmentDict[mediaType][fragmentInfo.id];\r\n            }\r\n        }\r\n\r\n        callback(switchRequest);\r\n    }\r\n\r\n    function reset() {\r\n        fragmentDict = {};\r\n        abandonDict = {};\r\n    }\r\n\r\n    instance = {\r\n        execute: execute,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nAbandonRequestsRule.__dashjs_factory_name = 'AbandonRequestsRule';\r\nexport default FactoryMaker.getClassFactory(AbandonRequestsRule);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2016, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport SwitchRequest from '../SwitchRequest.js';\r\nimport MediaPlayerModel from '../../models/MediaPlayerModel.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport Debug from '../../../core/Debug.js';\r\nimport BolaRule from './BolaRule.js';\r\n\r\nfunction BolaAbandonRule(config) {\r\n\r\n    // do not abandon during the grace period\r\n    const GRACE_PERIOD_MS = 500;\r\n    const POOR_RTT_MS = 200;\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let dashMetrics = config.dashMetrics;\r\n    let metricsModel = config.metricsModel;\r\n\r\n    let instance,\r\n        abandonDict,\r\n        mediaPlayerModel;\r\n\r\n    function setup() {\r\n        abandonDict = {};\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n    }\r\n\r\n    function rememberAbandon(mediaType, index, quality) {\r\n        // if this is called, then canStillAbandon(mediaType, index, quality) should have returned true\r\n        abandonDict[mediaType] = {index: index, quality: quality};\r\n    }\r\n\r\n    function canStillAbandon(mediaType, index, quality) {\r\n        let adm = abandonDict[mediaType];\r\n        if (!adm)\r\n            return true;\r\n        return index > adm.index || (index == adm.index && quality < adm.quality);\r\n    }\r\n\r\n    function execute(rulesContext, callback) {\r\n        let mediaInfo = rulesContext.getMediaInfo();\r\n        let mediaType = mediaInfo.type;\r\n        let metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\r\n        let progressEvent = rulesContext.getCurrentValue();\r\n        let request = progressEvent.request;\r\n        let switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK);\r\n\r\n        // TODO: should we abandon during startup?\r\n        if (metrics.BolaState.length === 0 || metrics.BolaState[0]._s.state !== BolaRule.BOLA_STATE_STEADY) {\r\n            abandonDict = {}; // otherwise seek back might disable abandonment - TODO: handle cleaner\r\n            callback(switchRequest);\r\n            return;\r\n        }\r\n\r\n        let bolaState = metrics.BolaState[0]._s;\r\n        // TODO: does changing bolaState conform to coding style, or should we clone?\r\n\r\n        let index = request.index;\r\n        let quality = request.quality;\r\n\r\n        if (isNaN(index) || quality === 0 || !canStillAbandon(mediaType, index, quality) || !request.firstByteDate) {\r\n            callback(switchRequest);\r\n            return;\r\n        }\r\n\r\n        let nowMilliSeconds = new Date().getTime();\r\n        let elapsedTimeMilliSeconds = nowMilliSeconds - request.firstByteDate.getTime();\r\n\r\n        let bytesLoaded = request.bytesLoaded;\r\n        let bytesTotal = request.bytesTotal;\r\n        let bytesRemaining = bytesTotal - bytesLoaded;\r\n        let duration = request.duration;\r\n\r\n        let bufferLevel = dashMetrics.getCurrentBufferLevel(metrics) ? dashMetrics.getCurrentBufferLevel(metrics) : 0.0;\r\n\r\n        let estimateThroughputBSF = bolaState.bandwidthSafetyFactor * 8000.0 * bytesLoaded / elapsedTimeMilliSeconds; // throughput in bits per second\r\n        let rttSeconds = 0.001 * (request.firstByteDate.getTime() - request.requestStartDate.getTime());\r\n        if (rttSeconds < 0.001 * POOR_RTT_MS)\r\n            rttSeconds = 0.001 * POOR_RTT_MS;\r\n\r\n        let diagnosticMessage = 'index=' + index + ' quality=' + quality + ' bytesLoaded/bytesTotal=' + bytesLoaded + '/' + bytesTotal + ' bufferLevel=' + bufferLevel + ' timeSince1stByte=' + (elapsedTimeMilliSeconds / 1000).toFixed(3) + ' estThroughput=' + (estimateThroughputBSF / 1000000).toFixed(3) + ' latency=' + rttSeconds.toFixed(3);\r\n\r\n        let estimateOtherBytesTotal = bytesTotal * bolaState.bitrate[0] / bolaState.bitrate[quality];\r\n        let estimateBytesRemainingAfterRtt = bytesRemaining - rttSeconds * estimateThroughputBSF / 8.0;\r\n        if (estimateBytesRemainingAfterRtt < 1.0) {\r\n            estimateBytesRemainingAfterRtt = 1.0;\r\n        }\r\n\r\n        if (elapsedTimeMilliSeconds < GRACE_PERIOD_MS ||\r\n            bytesRemaining <= estimateOtherBytesTotal ||\r\n            bufferLevel > bolaState.bufferTarget ||\r\n            estimateBytesRemainingAfterRtt <= estimateOtherBytesTotal ||\r\n            8 * bytesTotal / estimateThroughputBSF <= duration) {\r\n            // Do not abandon during first GRACE_PERIOD_MS.\r\n            // Do not abandon if we need to download less bytes than the size of the lowest quality fragment.\r\n            // Do not abandon if buffer level is above bufferTarget because the schedule controller will not download anything anyway.\r\n            // Do not abandon if after rttSeconds bytesRemaining is estimated to drop below size of lowest quality fragment.\r\n            // Do not abandon if fragment takes less than 1 fragment duration to download.\r\n            callback(switchRequest);\r\n            return;\r\n        }\r\n\r\n        // check if we are giving the safety guarantee (see comment in BolaRule.js)\r\n        if (bolaState.safetyGuarantee && bufferLevel <= bolaState.fragmentDuration && bolaState.state === BolaRule.BOLA_STATE_STEADY) {\r\n            // If the buffer only has one fragment left, then this is the last chance to abandon without rebuffering if the network bandwidth corresponds to the lowest bitrate.\r\n\r\n            // BOLA_STATE_STEADY: During startup the buffer has not yet grown enough and will give false positives.\r\n\r\n            bolaState.lastQuality = 0;\r\n            metricsModel.updateBolaState(mediaType, bolaState);\r\n\r\n            rememberAbandon(mediaType, index, quality);\r\n            switchRequest = SwitchRequest(context).create(0, SwitchRequest.STRONG);\r\n            if (BolaRule.BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaAbandonRule to 0 for safety guarantee' + ' - ' + diagnosticMessage);\r\n            callback(switchRequest);\r\n            return;\r\n        }\r\n\r\n        let estimateTimeRemainSeconds = 8.0 * bytesRemaining / estimateThroughputBSF;\r\n\r\n        // find maximum allowed quality that shouldn't lead to rebuffering\r\n        let maxQualityAllowed = quality; // recall that quality > 0; if quality === 0 then we would have returned early\r\n        if (estimateTimeRemainSeconds > bufferLevel) {\r\n            --maxQualityAllowed;\r\n            while (maxQualityAllowed > 0) {\r\n                estimateOtherBytesTotal = bytesTotal * bolaState.bitrate[maxQualityAllowed] / bolaState.bitrate[quality];\r\n                estimateTimeRemainSeconds = rttSeconds + 8 * estimateOtherBytesTotal / estimateThroughputBSF;\r\n                if (estimateTimeRemainSeconds <= bufferLevel) {\r\n                    break;\r\n                }\r\n                --maxQualityAllowed;\r\n            }\r\n        }\r\n\r\n        // If we abandon, there will be RTT time before we get first byte at lower quality.\r\n        // By that time, the no-abandon option would have downloaded some more, and the buffer level would have depleted some more.\r\n        // Introducing this RTT cushion also helps avoid extra abandonment, especially with close bitrates.\r\n\r\n        let bufferAfterRtt = bufferLevel + bolaState.virtualBuffer - rttSeconds;\r\n\r\n        // check if we should abandon using BOLA utility criteria\r\n        let newQuality = quality;\r\n        let score = (bolaState.utility[quality] + bolaState.gp - bufferAfterRtt / bolaState.Vp) / estimateBytesRemainingAfterRtt;\r\n\r\n        for (let i = 0; i < quality; ++i) {\r\n            estimateOtherBytesTotal = bytesTotal * bolaState.bitrate[i] / bolaState.bitrate[quality];\r\n            if (estimateOtherBytesTotal > estimateBytesRemainingAfterRtt) {\r\n                // abandoning to download at q such that i <= q < quality is not helpful\r\n                break;\r\n            }\r\n            let s = (bolaState.utility[i] + bolaState.gp - bufferAfterRtt / bolaState.Vp) / estimateOtherBytesTotal;\r\n            if (s > score) {\r\n                newQuality = i;\r\n                score = s;\r\n            }\r\n        }\r\n\r\n        // compare with maximum allowed quality that shouldn't lead to rebuffering\r\n        if (newQuality > maxQualityAllowed) {\r\n            newQuality = maxQualityAllowed;\r\n        }\r\n\r\n        if (newQuality === quality) {\r\n            // no change\r\n            callback(switchRequest);\r\n            return;\r\n        }\r\n\r\n        // Abandon, but to which quality? Abandoning should not happen often, and it's OK to be more conservative when it does.\r\n        while (newQuality > 0 && bolaState.bitrate[newQuality] > estimateThroughputBSF) {\r\n            --newQuality;\r\n        }\r\n\r\n        bolaState.lastQuality = newQuality;\r\n        metricsModel.updateBolaState(mediaType, bolaState);\r\n\r\n        rememberAbandon(mediaType, index, quality);\r\n        switchRequest = SwitchRequest(context).create(newQuality, SwitchRequest.STRONG);\r\n        if (BolaRule.BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaAbandonRule abandon to ' + newQuality + ' - ' + diagnosticMessage);\r\n        callback(switchRequest);\r\n    }\r\n\r\n    function reset() {\r\n        abandonDict = {};\r\n    }\r\n\r\n    instance = {\r\n        execute: execute,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nBolaAbandonRule.__dashjs_factory_name = 'BolaAbandonRule';\r\nexport default FactoryMaker.getClassFactory(BolaAbandonRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2016, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n// For a description of the BOLA adaptive bitrate (ABR) algorithm, see http://arxiv.org/abs/1601.06748\r\n\r\nimport SwitchRequest from '../SwitchRequest.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport MediaPlayerModel from '../../models/MediaPlayerModel.js';\r\nimport PlaybackController from '../../controllers/PlaybackController.js';\r\nimport HTTPRequest from '../../vo/metrics/HTTPRequest.js';\r\nimport DashAdapter from '../../../dash/DashAdapter.js';\r\nimport EventBus from '../../../core/EventBus.js';\r\nimport Events from '../../../core/events/Events.js';\r\nimport Debug from '../../../core/Debug.js';\r\n\r\n// BOLA_STATE_ONE_BITRATE   : If there is only one bitrate (or initialization failed), always return NO_CHANGE.\r\n// BOLA_STATE_STARTUP       : Download fragments at most recently measured throughput.\r\n// BOLA_STATE_STARTUP_NO_INC: If quality increased then decreased during startup, then quality cannot be increased.\r\n// BOLA_STATE_STEADY        : Buffer primed, we switch to steady operation.\r\n// TODO: add BOLA_STATE_SEEK and tune Bola behavior on seeking\r\nconst BOLA_STATE_ONE_BITRATE    = 0;\r\nconst BOLA_STATE_STARTUP        = 1;\r\nconst BOLA_STATE_STARTUP_NO_INC = 2;\r\nconst BOLA_STATE_STEADY         = 3;\r\nconst BOLA_DEBUG = false; // TODO: remove\r\n\r\nfunction BolaRule(config) {\r\n\r\n    // Bola needs some space between buffer levels.\r\n    const MINIMUM_BUFFER_LEVEL_SPACING = 5.0;\r\n\r\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE = 2;\r\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD = 3;\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let dashMetrics = config.dashMetrics;\r\n    let metricsModel = config.metricsModel;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        lastCallTimeDict,\r\n        seekMediaTypes,\r\n        mediaPlayerModel,\r\n        playbackController,\r\n        adapter;\r\n\r\n    function setup() {\r\n        lastCallTimeDict = {};\r\n        seekMediaTypes = [];\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n        playbackController = PlaybackController(context).getInstance();\r\n        adapter = DashAdapter(context).getInstance();\r\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\r\n        eventBus.on(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, instance);\r\n    }\r\n\r\n    function calculateInitialState(rulesContext) {\r\n        // TODO: analyze behavior of weird inputs and handle as gracefully as possible\r\n\r\n        // TODO: currently based on 12 second buffer target, tweek to utilize a higher buffer target\r\n\r\n        let initialState = {};\r\n\r\n        let mediaInfo = rulesContext.getMediaInfo();\r\n\r\n        let bitrate = mediaInfo.bitrateList.map(b => b.bandwidth);\r\n        let bitrateCount = bitrate.length;\r\n        if (bitrateCount < 2 || bitrate[0] >= bitrate[1] || bitrate[bitrateCount -  2] >= bitrate[bitrateCount - 1]) {\r\n            // if bitrate list irregular, stick to lowest bitrate\r\n            // TODO: should we tolerate repeated bitrates?\r\n            initialState.state = BOLA_STATE_ONE_BITRATE;\r\n            return initialState;\r\n        }\r\n\r\n        let streamProcessor = rulesContext.getStreamProcessor();\r\n        let streamInfo = rulesContext.getStreamInfo();\r\n        let trackInfo = rulesContext.getTrackInfo();\r\n\r\n        let isDynamic = streamProcessor.isDynamic();\r\n        let duration = streamInfo.manifestInfo.duration;\r\n        let fragmentDuration = trackInfo.fragmentDuration;\r\n\r\n        let bufferTarget;\r\n        let bufferMax;\r\n        // Note: If isDynamic (live streaming) we keep the same target for cases where the user is playing behind live edge, but then make throughput-based decisions when the buffer level is low because of availability.\r\n        bufferTarget = mediaPlayerModel.getStableBufferTime();\r\n        if (duration >= mediaPlayerModel.getLongFormContentDurationThreshold()) {\r\n            bufferMax = mediaPlayerModel.getBufferTimeAtTopQualityLongForm();\r\n        } else {\r\n            bufferMax = mediaPlayerModel.getBufferTimeAtTopQuality();\r\n        }\r\n\r\n        // During live streaming, there might not be enough fragments available to fill all the way to the buffer target. In such a case, Bola detects the lack of fragment availability and calculate a bitrate depending on what the buffer level would have been had more fragments been available. This is done by keeping an additional virtualBuffer level. Of course, in such a case Bola needs to also keep track of the real buffer to avoid rebuffering.\r\n\r\n        // Bola needs some space between buffer levels. If bolaBufferTarget is set to a level higher than the real bufferTarget, the Schedule Controller will still not fill up the buffer up to bolaBufferTarget. However, Bola will detect the effect of the Schedule Controller and calculate a bitrate depending on what the buffer level would have been had the Schedule Controller filled more buffer. This is handled similar to the live streaming scenario using the additional virtualBuffer level.\r\n        let bolaBufferTarget = bufferTarget;\r\n        if (bolaBufferTarget < fragmentDuration + MINIMUM_BUFFER_LEVEL_SPACING) {\r\n\r\n            bolaBufferTarget = fragmentDuration + MINIMUM_BUFFER_LEVEL_SPACING;\r\n        }\r\n\r\n        let utility = [];\r\n        for (let i = 0; i < bitrateCount; ++i) {\r\n            utility.push(Math.log(bitrate[i] / bitrate[0]));\r\n        }\r\n\r\n        // BOLA parameters V and gamma (multiplied by p === fragmentDuration):\r\n        // Choose Vp and gp such that logarithmic utility would always prefer the lowest bitrate when bufferLevel === fragmentDuration and would always prefer the highest bitrate when bufferLevel === bufferTarget.\r\n        // TODO: document the math\r\n        let Vp = (bolaBufferTarget - fragmentDuration) / utility[bitrateCount - 1];\r\n        let gp = 1.0 + utility[bitrateCount - 1] / (bolaBufferTarget / fragmentDuration - 1.0);\r\n\r\n        // If the bufferTarget (the real bufferTarget and not bolaBufferTarget) is large enough, we might guarantee that Bola will never rebuffer unless the network bandwidth drops below the lowest encoded bitrate level. For this to work Bola needs to use the real buffer level without the additional virtualBuffer. Also, for this to work efficiently, we need to make sure that if the buffer level drops to one fragment during a download, the current download does not have more bits remaining than the size of one fragment at the lowest quality.\r\n        let maxRtt = 0.2; // TODO: is this reasonable?\r\n        let safetyGuarantee = !isDynamic && bolaBufferTarget === bufferTarget;\r\n        if (safetyGuarantee) {\r\n            // TODO: document the math\r\n            // we might need to adjust Vp and gp\r\n            let VpNew = Vp;\r\n            let gpNew = gp;\r\n            for (let i = 1; i < bitrateCount; ++i) {\r\n                let threshold = VpNew * (gpNew - bitrate[0] * utility[i] / (bitrate[i] - bitrate[0]));\r\n                let minThreshold = fragmentDuration * (2.0 - bitrate[0] / bitrate[i]) + maxRtt;\r\n                if (minThreshold >= bufferTarget) {\r\n                    safetyGuarantee = false;\r\n                    break;\r\n                }\r\n                if (threshold < minThreshold) {\r\n                    VpNew *= (bufferTarget - minThreshold) / (bufferTarget - threshold);\r\n                    gpNew = minThreshold / VpNew + utility[i] * bitrate[0] / (bitrate[i] - bitrate[0]);\r\n                }\r\n            }\r\n            if (safetyGuarantee && (bufferTarget - fragmentDuration) * VpNew / Vp < MINIMUM_BUFFER_LEVEL_SPACING) {\r\n                safetyGuarantee = false;\r\n            }\r\n            if (safetyGuarantee) {\r\n                Vp = VpNew;\r\n                gp = gpNew;\r\n            }\r\n        }\r\n\r\n        // When using the virtualBuffer, it must be capped.\r\n        // TODO: document the math\r\n        let bolaBufferMax = Vp * (utility[bitrateCount - 1] + gp);\r\n\r\n        // Note: We either use the virtualBuffer or the safetyGuarantee, but not both.\r\n\r\n        initialState.state                 = BOLA_STATE_STARTUP;\r\n\r\n        initialState.bitrate               = bitrate;\r\n        initialState.utility               = utility;\r\n        initialState.Vp                    = Vp;\r\n        initialState.gp                    = gp;\r\n\r\n        initialState.fragmentDuration      = fragmentDuration;\r\n        initialState.bandwidthSafetyFactor = mediaPlayerModel.getBandwidthSafetyFactor();\r\n        initialState.bufferTarget          = bufferTarget;\r\n        initialState.bufferMax             = bufferMax;\r\n        initialState.bolaBufferTarget      = bolaBufferTarget;\r\n        initialState.bolaBufferMax         = bolaBufferMax;\r\n\r\n        initialState.isDynamic             = isDynamic;\r\n        initialState.safetyGuarantee       = safetyGuarantee;\r\n        initialState.lastQuality           = 0;\r\n        initialState.virtualBuffer         = 0.0;\r\n        initialState.throughputCount       = (isDynamic ? AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE : AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD);\r\n\r\n        if (BOLA_DEBUG) {\r\n            let info = '';\r\n            for (let i = 0; i < bitrate.length - 1; ++i) {\r\n                let ui  = utility[i];\r\n                let ui1 = utility[i + 1];\r\n                let ri  = bitrate[i];\r\n                let ri1 = bitrate[i + 1];\r\n                let th  = Vp * ((ui * ri1 - ui1 * ri) / (ri1 - ri) + gp);\r\n                let z = Vp * (ui + gp);\r\n                info += i + ':' + (bitrate[i] / 1000000).toFixed(3) + ' ' + th.toFixed(3) + '/' + z.toFixed(3) + ' ';\r\n            }\r\n            info += ' ' + (bitrate.length - 1) + ':' + (bitrate[bitrate.length - 1] / 1000000).toFixed(3) + ' -/' + (Vp * (utility[bitrate.length - 1] + gp)).toFixed(3);\r\n            log('BolaDebug ' + mediaInfo.type + ' bitrates ' + info);\r\n        }\r\n\r\n        return initialState;\r\n    }\r\n\r\n    function getQualityFromBufferLevel(bolaState, bufferLevel) {\r\n        let bitrateCount = bolaState.bitrate.length;\r\n        let quality = bitrateCount - 1;\r\n        let score = 0.0;\r\n        for (let i = 0; i < bitrateCount; ++i) {\r\n            let s = (bolaState.utility[i] + bolaState.gp - bufferLevel / bolaState.Vp) / bolaState.bitrate[i];\r\n            if (s > score) {\r\n                score = s;\r\n                quality = i;\r\n            }\r\n        }\r\n        return quality;\r\n    }\r\n\r\n    function getLastHttpRequests(metrics, count) {\r\n        let allHttpRequests = dashMetrics.getHttpRequests(metrics);\r\n        let httpRequests = [];\r\n        for (let i = allHttpRequests.length - 1; i >= 0; --i) {\r\n            let request = allHttpRequests[i];\r\n            if (request.type === HTTPRequest.MEDIA_SEGMENT_TYPE && request._tfinish && request.tresponse && request.trace) {\r\n                httpRequests.push(request);\r\n                if (httpRequests.length === count) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return httpRequests;\r\n    }\r\n\r\n    function getLastThroughput(metrics, count, mediaType) { // TODO: mediaType only used for debugging, remove it\r\n        // TODO: Should we replace this with an average of the last few throughputs?\r\n        let lastRequests = getLastHttpRequests(metrics, count);\r\n        if (lastRequests.length === 0) {\r\n            return 0.0;\r\n        }\r\n\r\n        let totalInverse = 0.0;\r\n        let msg = '';\r\n        for (let i = 0; i < lastRequests.length; ++i) {\r\n            // The RTT delay results in a lower throughput. We can avoid this delay in the calculation, but we do not want to.\r\n            let downloadSeconds = 0.001 * (lastRequests[i]._tfinish.getTime() - lastRequests[i].trequest.getTime());\r\n            let downloadBits = 8 * lastRequests[i].trace.reduce(function (a, b) {\r\n                return a + b.b[0];\r\n            }, 0);\r\n            msg += ' ' + (downloadBits / 1000000).toFixed(3) + '/' + downloadSeconds.toFixed(3) + '=' + (downloadBits / downloadSeconds / 1000000).toFixed(3);\r\n            totalInverse += downloadSeconds / downloadBits;\r\n        }\r\n\r\n        if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule last throughput = ' + (lastRequests.length / totalInverse / 1000000).toFixed(3) + ' :' + msg);\r\n\r\n        return lastRequests.length / totalInverse;\r\n    }\r\n\r\n    function getQualityFromThroughput(bolaState, throughput) {\r\n        // do not factor in bandwidthSafetyFactor here - it is factored at point of call\r\n\r\n        let q = 0;\r\n        for (let i = 1; i < bolaState.bitrate.length; ++i) {\r\n            if (bolaState.bitrate[i] > throughput) {\r\n                break;\r\n            }\r\n            q = i;\r\n        }\r\n        return q;\r\n    }\r\n\r\n    function getDelayFromLastFragmentInSeconds(metrics, mediaType) {\r\n        let lastRequests = getLastHttpRequests(metrics, 1);\r\n        if (lastRequests.length === 0) {\r\n            return 0.0;\r\n        }\r\n        let lastRequest = lastRequests[0];\r\n        let nowMilliSeconds = new Date().getTime();\r\n        let lastRequestFinishMilliSeconds = lastRequest._tfinish.getTime();\r\n\r\n        if (lastRequestFinishMilliSeconds > nowMilliSeconds) {\r\n            // this shouldn't happen, try to handle gracefully\r\n            lastRequestFinishMilliSeconds = nowMilliSeconds;\r\n        }\r\n\r\n        let lct = lastCallTimeDict[mediaType];\r\n        lastCallTimeDict[mediaType] = nowMilliSeconds;\r\n        let delayMilliSeconds = 0.0;\r\n        if (lct && lct > lastRequestFinishMilliSeconds) {\r\n            delayMilliSeconds = nowMilliSeconds - lct;\r\n        } else {\r\n            delayMilliSeconds = nowMilliSeconds - lastRequestFinishMilliSeconds;\r\n        }\r\n\r\n        if (delayMilliSeconds < 0.0)\r\n            return 0.0;\r\n        return 0.001 * delayMilliSeconds;\r\n    }\r\n\r\n    function onPlaybackSeeking() {\r\n        // TODO: Verify what happens if we seek mid-fragment.\r\n        // TODO: If we have 10s fragments and seek, we would like to download the first fragment at a lower quality to restart playback quickly.\r\n        for (let i = 0; i < seekMediaTypes.length; ++i) {\r\n            let mediaType = seekMediaTypes[i];\r\n            let metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\r\n            if (metrics.BolaState.length !== 0) {\r\n                let bolaState = metrics.BolaState[0]._s;\r\n                if (bolaState.state !== BOLA_STATE_ONE_BITRATE) {\r\n                    bolaState.state = BOLA_STATE_STARTUP;\r\n                }\r\n                metricsModel.updateBolaState(mediaType, bolaState);\r\n            }\r\n        }\r\n    }\r\n\r\n    function onPeriodSwitchStarted() {\r\n        // TODO\r\n    }\r\n\r\n    function execute(rulesContext, callback) {\r\n        let streamProcessor = rulesContext.getStreamProcessor();\r\n        streamProcessor.getScheduleController().setTimeToLoadDelay(0.0);\r\n\r\n        let switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK);\r\n\r\n        let mediaInfo = rulesContext.getMediaInfo();\r\n        let mediaType = mediaInfo.type;\r\n        let metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\r\n\r\n        if (metrics.BolaState.length === 0) {\r\n            // initialization\r\n\r\n            if (BOLA_DEBUG) log('BolaDebug ' + mediaType + '\\nBolaDebug ' + mediaType + ' BolaRule for state=- fragmentStart=' + adapter.getIndexHandlerTime(rulesContext.getStreamProcessor()).toFixed(3));\r\n\r\n            let initState = calculateInitialState(rulesContext);\r\n            metricsModel.updateBolaState(mediaType, initState);\r\n\r\n            let q = 0;\r\n            if (initState.state !== BOLA_STATE_ONE_BITRATE) {\r\n                // initState.state === BOLA_STATE_STARTUP\r\n\r\n                seekMediaTypes.push(mediaType);\r\n\r\n                // Bola is not invoked by dash.js to determine the bitrate quality for the first fragment. We might estimate the throughput level here, but the metric related to the HTTP request for the first fragment is usually not available.\r\n                // TODO: at some point, we may want to consider a tweak that redownloads the first fragment at a higher quality\r\n\r\n                let initThroughput = getLastThroughput(metrics, initState.throughputCount, mediaType);\r\n                if (initThroughput === 0.0) {\r\n                    // We don't have information about any download yet - let someone else decide quality.\r\n                    if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule quality unchanged for INITIALIZE');\r\n                    callback(switchRequest);\r\n                    return;\r\n                }\r\n                q = getQualityFromThroughput(initState, initThroughput * initState.bandwidthSafetyFactor);\r\n                initState.lastQuality = q;\r\n                switchRequest = SwitchRequest(context).create(q, SwitchRequest.DEFAULT);\r\n            }\r\n\r\n            if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule quality ' + q + ' for INITIALIZE');\r\n            callback(switchRequest);\r\n            return;\r\n        }\r\n\r\n        // metrics.BolaState.length > 0\r\n        let bolaState = metrics.BolaState[0]._s;\r\n        // TODO: does changing bolaState conform to coding style, or should we clone?\r\n\r\n        if (bolaState.state === BOLA_STATE_ONE_BITRATE) {\r\n            if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule quality 0 for ONE_BITRATE');\r\n            callback(switchRequest);\r\n            return;\r\n        }\r\n\r\n        if (BOLA_DEBUG) log('BolaDebug ' + mediaType + '\\nBolaDebug ' + mediaType + ' EXECUTE BolaRule for state=' + bolaState.state + ' fragmentStart=' + adapter.getIndexHandlerTime(rulesContext.getStreamProcessor()).toFixed(3));\r\n\r\n        let bufferLevel = dashMetrics.getCurrentBufferLevel(metrics) ? dashMetrics.getCurrentBufferLevel(metrics) : 0.0;\r\n        let bolaQuality = getQualityFromBufferLevel(bolaState, bufferLevel);\r\n        let lastThroughput = getLastThroughput(metrics, bolaState.throughputCount, mediaType);\r\n\r\n        if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule bufferLevel=' + bufferLevel.toFixed(3) + '(+' + bolaState.virtualBuffer.toFixed(3) + ') lastThroughput=' + (lastThroughput / 1000000.0).toFixed(3) + ' tentativeQuality=' + bolaQuality + ',' + getQualityFromBufferLevel(bolaState, bufferLevel + bolaState.virtualBuffer));\r\n\r\n        if (bufferLevel <= 0.1) {\r\n            // rebuffering occurred, reset virtual buffer\r\n            bolaState.virtualBuffer = 0.0;\r\n        }\r\n\r\n        if (!bolaState.safetyGuarantee) { // we can use virtualBuffer\r\n            // find out if there was delay because of lack of availability or because bolaBufferTarget > bufferTarget\r\n            let timeSinceLastDownload = getDelayFromLastFragmentInSeconds(metrics, mediaType);\r\n            if (timeSinceLastDownload > 0.0) { // TODO: maybe we should set some positive threshold here\r\n                bolaState.virtualBuffer += timeSinceLastDownload;\r\n            }\r\n            if (bufferLevel + bolaState.virtualBuffer > bolaState.bolaBufferMax) {\r\n                bolaState.virtualBuffer = bolaState.bolaBufferMax - bufferLevel;\r\n            }\r\n            if (bolaState.virtualBuffer < 0.0) {\r\n                bolaState.virtualBuffer = 0.0;\r\n            }\r\n\r\n            // update bolaQuality using virtualBuffer: bufferLevel might be artificially low because of lack of availability\r\n\r\n            let bolaQualityVirtual = getQualityFromBufferLevel(bolaState, bufferLevel + bolaState.virtualBuffer);\r\n            if (bolaQualityVirtual > bolaQuality) {\r\n                // May use quality higher than that indicated by real buffer level.\r\n\r\n                // In this case, make sure there is enough throughput to download a fragment before real buffer runs out.\r\n\r\n                let maxQuality = bolaQuality;\r\n                while (maxQuality < bolaQualityVirtual &&\r\n                       (bolaState.bitrate[maxQuality + 1] * bolaState.fragmentDuration) /\r\n                       (lastThroughput * bolaState.bandwidthSafetyFactor) < bufferLevel\r\n                      ) {\r\n                    ++maxQuality;\r\n                }\r\n\r\n                // TODO: maybe we can use a more conservative level here, but this should be OK\r\n\r\n                if (maxQuality > bolaQuality) {\r\n                    // We can (and will) download at a quality higher than that indicated by real buffer level.\r\n                    if (bolaQualityVirtual <= maxQuality) {\r\n                        // we can download fragment indicated by real+virtual buffer without rebuffering\r\n                        bolaQuality = bolaQualityVirtual;\r\n                    } else {\r\n                        // downloading fragment indicated by real+virtual rebuffers, use lower quality\r\n                        bolaQuality = maxQuality;\r\n                        // deflate virtual buffer to match quality\r\n                        // TODO: document the math\r\n                        let targetBufferLevel = bolaState.Vp * (bolaState.gp + bolaState.utility[bolaQuality]);\r\n                        if (bufferLevel + bolaState.virtualBuffer > targetBufferLevel) {\r\n                            bolaState.virtualBuffer = targetBufferLevel - bufferLevel;\r\n                            if (bolaState.virtualBuffer < 0.0) { // should be false\r\n                                bolaState.virtualBuffer = 0.0;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } // !bolaState.safetyGuarantee: we can use virtualBuffer\r\n\r\n        if (bolaState.state === BOLA_STATE_STARTUP || bolaState.state === BOLA_STATE_STARTUP_NO_INC) {\r\n            // in startup phase, use some throughput estimation\r\n\r\n            let q = getQualityFromThroughput(bolaState, lastThroughput * bolaState.bandwidthSafetyFactor);\r\n\r\n            if (lastThroughput <= 0.0) {\r\n                // something went wrong - go to steady state\r\n                bolaState.state = BOLA_STATE_STEADY;\r\n            }\r\n            if (bolaState.state === BOLA_STATE_STARTUP && q < bolaState.lastQuality) {\r\n                // Since the quality is decreasing during startup, it will not be allowed to increase again.\r\n                bolaState.state = BOLA_STATE_STARTUP_NO_INC;\r\n            }\r\n            if (bolaState.state === BOLA_STATE_STARTUP_NO_INC && q > bolaState.lastQuality) {\r\n                // In this state the quality is not allowed to increase until steady state.\r\n                q = bolaState.lastQuality;\r\n            }\r\n            if (q <= bolaQuality) {\r\n                // Since the buffer is full enough for steady state operation to match startup operation, switch over to steady state.\r\n                bolaState.state = BOLA_STATE_STEADY;\r\n            }\r\n            if (bolaState.state !== BOLA_STATE_STEADY) {\r\n                // still in startup mode\r\n                if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule quality ' + q + '>' + bolaQuality + ' for STARTUP');\r\n                bolaState.lastQuality = q;\r\n                metricsModel.updateBolaState(mediaType, bolaState);\r\n                switchRequest = SwitchRequest(context).create(q, SwitchRequest.DEFAULT);\r\n                callback(switchRequest);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // steady state\r\n\r\n        // we want to avoid oscillations\r\n        // We implement the \"BOLA-O\" variant: when network bandwidth lies between two encoded bitrate levels, stick to the lowest level.\r\n        let delaySeconds = 0.0;\r\n        if (bolaQuality > bolaState.lastQuality) {\r\n            // do not multiply throughput by bandwidthSafetyFactor here: we are not using throughput estimation but capping bitrate to avoid oscillations\r\n            let q = getQualityFromThroughput(bolaState, lastThroughput);\r\n            if (bolaQuality > q) {\r\n                // only intervene if we are trying to *increase* quality to an *unsustainable* level\r\n\r\n                if (q < bolaState.lastQuality) {\r\n                    // we are only avoid oscillations - do not drop below last quality\r\n                    q = bolaState.lastQuality;\r\n                } else {\r\n                    // We are dropping to an encoded bitrate which is a little less than the network bandwidth because bitrate levels are discrete. Quality q might lead to buffer inflation, so we deflate buffer to the level that q gives postive utility.\r\n                    let wantBufferLevel = bolaState.Vp * (bolaState.utility[q] + bolaState.gp);\r\n                    delaySeconds = bufferLevel - wantBufferLevel;\r\n                }\r\n                bolaQuality = q;\r\n            }\r\n        }\r\n\r\n        if (delaySeconds > 0.0) {\r\n            // first reduce virtual buffer\r\n            if (delaySeconds > bolaState.virtualBuffer) {\r\n                delaySeconds -= bolaState.virtualBuffer;\r\n                bolaState.virtualBuffer = 0.0;\r\n            } else {\r\n                bolaState.virtualBuffer -= delaySeconds;\r\n                delaySeconds = 0.0;\r\n            }\r\n        }\r\n        if (delaySeconds > 0.0) {\r\n            streamProcessor.getScheduleController().setTimeToLoadDelay(1000.0 * delaySeconds);\r\n        }\r\n\r\n        bolaState.lastQuality = bolaQuality;\r\n        metricsModel.updateBolaState(mediaType, bolaState);\r\n        switchRequest = SwitchRequest(context).create(bolaQuality, SwitchRequest.DEFAULT);\r\n        if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule quality ' + bolaQuality + ' delay=' + delaySeconds.toFixed(3) + ' for STEADY');\r\n        callback(switchRequest);\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\r\n        eventBus.off(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, instance);\r\n        setup();\r\n    }\r\n\r\n    instance = {\r\n        execute: execute,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nBolaRule.__dashjs_factory_name = 'BolaRule';\r\nlet factory = FactoryMaker.getClassFactory(BolaRule);\r\nfactory.BOLA_STATE_ONE_BITRATE    = BOLA_STATE_ONE_BITRATE;\r\nfactory.BOLA_STATE_STARTUP        = BOLA_STATE_STARTUP;\r\nfactory.BOLA_STATE_STARTUP_NO_INC = BOLA_STATE_STARTUP_NO_INC;\r\nfactory.BOLA_STATE_STEADY         = BOLA_STATE_STEADY;\r\nfactory.BOLA_DEBUG = BOLA_DEBUG; // TODO: remove\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport SwitchRequest from '../SwitchRequest.js';\r\nimport MediaPlayerModel from '../../models/MediaPlayerModel.js';\r\nimport AbrController from '../../controllers/AbrController.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport Debug from '../../../core/Debug.js';\r\n\r\nfunction BufferOccupancyRule(config) {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n\r\n    let metricsModel = config.metricsModel;\r\n    let dashMetrics = config.dashMetrics;\r\n\r\n    let lastSwitchTime,\r\n        mediaPlayerModel;\r\n\r\n    function setup() {\r\n        lastSwitchTime = 0;\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n    }\r\n\r\n    function execute (rulesContext, callback) {\r\n        var now = new Date().getTime() / 1000;\r\n        var mediaInfo = rulesContext.getMediaInfo();\r\n        var representationInfo = rulesContext.getTrackInfo();\r\n        var mediaType = mediaInfo.type;\r\n        var waitToSwitchTime = !isNaN(representationInfo.fragmentDuration) ? representationInfo.fragmentDuration / 2 : 2;\r\n        var current = rulesContext.getCurrentValue();\r\n        var streamProcessor = rulesContext.getStreamProcessor();\r\n        var abrController = streamProcessor.getABRController();\r\n        var metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\r\n        var lastBufferLevel = dashMetrics.getCurrentBufferLevel(metrics);\r\n        var lastBufferStateVO = (metrics.BufferState.length > 0) ? metrics.BufferState[metrics.BufferState.length - 1] : null;\r\n        var isBufferRich = false;\r\n        var maxIndex = mediaInfo.representationCount - 1;\r\n        var switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK);\r\n\r\n        if (now - lastSwitchTime < waitToSwitchTime ||\r\n            abrController.getAbandonmentStateFor(mediaType) === AbrController.ABANDON_LOAD) {\r\n            callback(switchRequest);\r\n            return;\r\n        }\r\n\r\n        if (lastBufferStateVO !== null) {\r\n            // This will happen when another rule tries to switch from top to any other.\r\n            // If there is enough buffer why not try to stay at high level.\r\n            if (lastBufferLevel > lastBufferStateVO.target) {\r\n                isBufferRich = (lastBufferLevel - lastBufferStateVO.target) > mediaPlayerModel.getRichBufferThreshold();\r\n\r\n                if (isBufferRich && mediaInfo.representationCount > 1) {\r\n                    switchRequest = SwitchRequest(context).create(maxIndex, SwitchRequest.STRONG);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (switchRequest.value !== SwitchRequest.NO_CHANGE && switchRequest.value !== current) {\r\n            log('BufferOccupancyRule requesting switch to index: ', switchRequest.value, 'type: ',mediaType, ' Priority: ',\r\n                switchRequest.priority === SwitchRequest.DEFAULT ? 'Default' :\r\n                    switchRequest.priority === SwitchRequest.STRONG ? 'Strong' : 'Weak');\r\n        }\r\n\r\n        callback(switchRequest);\r\n    }\r\n\r\n    function reset() {\r\n        lastSwitchTime = 0;\r\n    }\r\n\r\n    instance = {\r\n        execute: execute,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nBufferOccupancyRule.__dashjs_factory_name = 'BufferOccupancyRule';\r\nexport default FactoryMaker.getClassFactory(BufferOccupancyRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport SwitchRequest from '../SwitchRequest.js';\r\nimport BufferController from '../../controllers/BufferController.js';\r\nimport EventBus from '../../../core/EventBus.js';\r\nimport Events from '../../../core/events/Events.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport Debug from '../../../core/Debug.js';\r\n\r\nfunction InsufficientBufferRule(config) {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let metricsModel = config.metricsModel;\r\n\r\n    let instance,\r\n        bufferStateDict,\r\n        lastSwitchTime,\r\n        waitToSwitchTime;\r\n\r\n    function setup() {\r\n        bufferStateDict = {};\r\n        lastSwitchTime = 0;\r\n        waitToSwitchTime = 1000;\r\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\r\n    }\r\n\r\n    function execute (rulesContext, callback) {\r\n        var now = new Date().getTime();\r\n        var mediaType = rulesContext.getMediaInfo().type;\r\n        var current = rulesContext.getCurrentValue();\r\n        var metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\r\n        var lastBufferStateVO = (metrics.BufferState.length > 0) ? metrics.BufferState[metrics.BufferState.length - 1] : null;\r\n        var switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK);\r\n\r\n        if (now - lastSwitchTime < waitToSwitchTime ||\r\n            lastBufferStateVO === null) {\r\n            callback(switchRequest);\r\n            return;\r\n        }\r\n\r\n        setBufferInfo(mediaType, lastBufferStateVO.state);\r\n        // After the sessions first buffer loaded event , if we ever have a buffer empty event we want to switch all the way down.\r\n        if (lastBufferStateVO.state === BufferController.BUFFER_EMPTY && bufferStateDict[mediaType].firstBufferLoadedEvent !== undefined) {\r\n            switchRequest = SwitchRequest(context).create(0, SwitchRequest.STRONG);\r\n        }\r\n\r\n        if (switchRequest.value !== SwitchRequest.NO_CHANGE && switchRequest.value !== current) {\r\n            log('InsufficientBufferRule requesting switch to index: ', switchRequest.value, 'type: ',mediaType, ' Priority: ',\r\n                switchRequest.priority === SwitchRequest.DEFAULT ? 'Default' :\r\n                    switchRequest.priority === SwitchRequest.STRONG ? 'Strong' : 'Weak');\r\n        }\r\n\r\n        lastSwitchTime = now;\r\n        callback(switchRequest);\r\n    }\r\n\r\n    function setBufferInfo(type, state) {\r\n        bufferStateDict[type] = bufferStateDict[type] || {};\r\n        bufferStateDict[type].state = state;\r\n        if (state === BufferController.BUFFER_LOADED && !bufferStateDict[type].firstBufferLoadedEvent) {\r\n            bufferStateDict[type].firstBufferLoadedEvent = true;\r\n        }\r\n    }\r\n\r\n    function onPlaybackSeeking() {\r\n        bufferStateDict = {};\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\r\n        bufferStateDict = {};\r\n        lastSwitchTime = 0;\r\n    }\r\n\r\n    instance = {\r\n        execute: execute,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nInsufficientBufferRule.__dashjs_factory_name = 'InsufficientBufferRule';\r\nexport default FactoryMaker.getClassFactory(InsufficientBufferRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport SwitchRequest from '../SwitchRequest.js';\r\nimport BufferController from '../../controllers/BufferController.js';\r\nimport AbrController from '../../controllers/AbrController.js';\r\nimport MediaPlayerModel from '../../models/MediaPlayerModel.js';\r\nimport HTTPRequest from '../../vo/metrics/HTTPRequest.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport Debug from '../../../core/Debug.js';\r\n\r\nfunction ThroughputRule(config) {\r\n\r\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE = 2;\r\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD = 3;\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let dashMetrics = config.dashMetrics;\r\n    let metricsModel = config.metricsModel;\r\n\r\n    let instance,\r\n        throughputArray,\r\n        mediaPlayerModel;\r\n\r\n    function setup() {\r\n        throughputArray = [];\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n    }\r\n\r\n    function storeLastRequestThroughputByType(type, lastRequestThroughput) {\r\n        throughputArray[type] = throughputArray[type] || [];\r\n        if (lastRequestThroughput !== Infinity &&\r\n            lastRequestThroughput !== throughputArray[type][throughputArray[type].length - 1]) {\r\n            throughputArray[type].push(lastRequestThroughput);\r\n        }\r\n    }\r\n\r\n    function getAverageThroughput(type, isDynamic) {\r\n        var averageThroughput = 0;\r\n        var sampleAmount = isDynamic ? AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE : AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD;\r\n        var arr = throughputArray[type];\r\n        var len = arr.length;\r\n\r\n        sampleAmount = len < sampleAmount ? len : sampleAmount;\r\n\r\n        if (len > 0) {\r\n            var startValue = len - sampleAmount;\r\n            var totalSampledValue = 0;\r\n\r\n            for (var i = startValue; i < len; i++) {\r\n                totalSampledValue += arr[i];\r\n            }\r\n            averageThroughput = totalSampledValue / sampleAmount;\r\n        }\r\n\r\n        if (arr.length > sampleAmount) {\r\n            arr.shift();\r\n        }\r\n\r\n        return (averageThroughput / 1000 ) * mediaPlayerModel.getBandwidthSafetyFactor();\r\n    }\r\n\r\n    function execute (rulesContext, callback) {\r\n        var downloadTime;\r\n        var bytes;\r\n        var averageThroughput;\r\n        var lastRequestThroughput;\r\n\r\n        var mediaInfo = rulesContext.getMediaInfo();\r\n        var mediaType = mediaInfo.type;\r\n        var current = rulesContext.getCurrentValue();\r\n        var metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\r\n        var streamProcessor = rulesContext.getStreamProcessor();\r\n        var abrController = streamProcessor.getABRController();\r\n        var isDynamic = streamProcessor.isDynamic();\r\n        var lastRequest = dashMetrics.getCurrentHttpRequest(metrics);\r\n        var bufferStateVO = (metrics.BufferState.length > 0) ? metrics.BufferState[metrics.BufferState.length - 1] : null;\r\n        var bufferLevelVO = (metrics.BufferLevel.length > 0) ? metrics.BufferLevel[metrics.BufferLevel.length - 1] : null;\r\n        var switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK);\r\n\r\n        if (!metrics || !lastRequest || lastRequest.type !== HTTPRequest.MEDIA_SEGMENT_TYPE ||\r\n            !bufferStateVO || !bufferLevelVO ) {\r\n\r\n            callback(switchRequest);\r\n            return;\r\n\r\n        }\r\n\r\n        if (lastRequest.trace && lastRequest.trace.length) {\r\n            downloadTime = (lastRequest._tfinish.getTime() - lastRequest.tresponse.getTime()) / 1000;\r\n\r\n            bytes = lastRequest.trace.reduce(function (a, b) {\r\n                return a + b.b[0];\r\n            }, 0);\r\n\r\n            lastRequestThroughput = Math.round(bytes * 8) / downloadTime;\r\n            storeLastRequestThroughputByType(mediaType, lastRequestThroughput);\r\n        }\r\n\r\n        averageThroughput = Math.round(getAverageThroughput(mediaType, isDynamic));\r\n        abrController.setAverageThroughput(mediaType, averageThroughput);\r\n\r\n        if (abrController.getAbandonmentStateFor(mediaType) !== AbrController.ABANDON_LOAD) {\r\n\r\n            if (bufferStateVO.state === BufferController.BUFFER_LOADED || isDynamic) {\r\n                var newQuality = abrController.getQualityForBitrate(mediaInfo, averageThroughput);\r\n                streamProcessor.getScheduleController().setTimeToLoadDelay(0); // TODO Watch out for seek event - no delay when seeking.!!\r\n                switchRequest = SwitchRequest(context).create(newQuality, SwitchRequest.DEFAULT);\r\n            }\r\n\r\n            if (switchRequest.value !== SwitchRequest.NO_CHANGE && switchRequest.value !== current) {\r\n                log('ThroughputRule requesting switch to index: ', switchRequest.value, 'type: ',mediaType, ' Priority: ',\r\n                    switchRequest.priority === SwitchRequest.DEFAULT ? 'Default' :\r\n                        switchRequest.priority === SwitchRequest.STRONG ? 'Strong' : 'Weak', 'Average throughput', Math.round(averageThroughput), 'kbps');\r\n            }\r\n        }\r\n\r\n        callback(switchRequest);\r\n    }\r\n\r\n    function reset() {\r\n        setup();\r\n    }\r\n\r\n    instance = {\r\n        execute: execute,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nThroughputRule.__dashjs_factory_name = 'ThroughputRule';\r\nexport default FactoryMaker.getClassFactory(ThroughputRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction BasicSelector(config) {\r\n\r\n    let instance;\r\n\r\n    const blacklistController = config.blacklistController;\r\n\r\n    function select(baseUrls) {\r\n        var index = 0;\r\n        var selectedBaseUrl;\r\n\r\n        if (baseUrls && baseUrls.some((baseUrl, idx) => {\r\n            index = idx;\r\n\r\n            return (!blacklistController.contains(baseUrl.serviceLocation));\r\n        })) {\r\n            selectedBaseUrl = baseUrls[index];\r\n        }\r\n\r\n        return selectedBaseUrl;\r\n    }\r\n\r\n    instance = {\r\n        select: select\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nBasicSelector.__dashjs_factory_name = 'BasicSelector';\r\nexport default FactoryMaker.getClassFactory(BasicSelector);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction DVBSelector(config) {\r\n\r\n    let instance;\r\n\r\n    const blacklistController = config.blacklistController;\r\n\r\n    function getNonBlacklistedBaseUrls(urls) {\r\n        var removedPriorities = [];\r\n\r\n        const samePrioritiesFilter = function (el) {\r\n            if (removedPriorities.length) {\r\n                if ((el.dvb_priority) &&\r\n                        (removedPriorities.indexOf(el.dvb_priority) !== -1)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        const serviceLocationFilter = function (baseUrl) {\r\n            if (blacklistController.contains(baseUrl.serviceLocation)) {\r\n                // whenever a BaseURL is removed from the available list of\r\n                // BaseURLs, any other BaseURL with the same @priority\r\n                // value as the BaseURL being removed shall also be removed\r\n                if (baseUrl.dvb_priority) {\r\n                    removedPriorities.push(baseUrl.dvb_priority);\r\n                }\r\n\r\n                // all URLs in the list which have a @serviceLocation\r\n                // attribute matching an entry in the blacklist shall be\r\n                // removed from the available list of BaseURLs\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        return urls.filter(serviceLocationFilter).filter(samePrioritiesFilter);\r\n    }\r\n\r\n    function selectByWeight(availableUrls) {\r\n        const prioritySorter = function (a, b) {\r\n            var diff = a.dvb_priority - b.dvb_priority;\r\n            return isNaN(diff) ? 0 : diff;\r\n        };\r\n\r\n        const topPriorityFilter = function (baseUrl, idx, arr) {\r\n            return !idx || (\r\n                (arr[0].dvb_priority && baseUrl.dvb_priority) &&\r\n                (arr[0].dvb_priority === baseUrl.dvb_priority)\r\n            );\r\n        };\r\n\r\n        var totalWeight = 0;\r\n        var cumulWeights = [];\r\n        var idx = 0;\r\n        var rn;\r\n        var urls;\r\n\r\n        // It shall begin by taking the set of resolved BaseURLs present or inherited at the current\r\n        // position in the MPD, resolved and filtered as described in 10.8.2.1, that have the lowest\r\n        // @priority attribute value.\r\n        urls = availableUrls.sort(prioritySorter).filter(topPriorityFilter);\r\n\r\n        if (urls.length) {\r\n            if (urls.length > 1) {\r\n                // If there is more than one BaseURL with this lowest @priority attribute value then the Player\r\n                // shall select one of them at random such that the probability of each BaseURL being chosen\r\n                // is proportional to the value of its @weight attribute. The method described in RFC 2782\r\n                // [26] or picking from a number of weighted entries is suitable for this, but there may be other\r\n                // algorithms which achieve the same effect.\r\n\r\n                // add all the weights together, storing the accumulated weight per entry\r\n                urls.forEach(baseUrl => {\r\n                    totalWeight += baseUrl.dvb_weight;\r\n                    cumulWeights.push(totalWeight);\r\n                });\r\n\r\n                // pick a random number between zero and totalWeight\r\n                rn = Math.floor(Math.random() * (totalWeight - 1));\r\n\r\n                // select the index for the range rn falls within\r\n                cumulWeights.every((limit, index) => {\r\n                    idx = index;\r\n\r\n                    if (rn < limit) {\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                });\r\n            }\r\n\r\n            return urls[idx];\r\n        }\r\n    }\r\n\r\n    function select(baseUrls) {\r\n        return baseUrls && selectByWeight(\r\n            getNonBlacklistedBaseUrls(\r\n                baseUrls\r\n            )\r\n        );\r\n    }\r\n\r\n    instance = {\r\n        select: select\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDVBSelector.__dashjs_factory_name = 'DVBSelector';\r\nexport default FactoryMaker.getClassFactory(DVBSelector);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport MediaPlayerModel from '../../models/MediaPlayerModel.js';\r\nimport PlaybackController from '../../controllers/PlaybackController.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction BufferLevelRule(config) {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n\r\n    let dashMetrics = config.dashMetrics;\r\n    let metricsModel = config.metricsModel;\r\n    let textSourceBuffer = config.textSourceBuffer;\r\n\r\n    let mediaPlayerModel,\r\n        playbackController;\r\n\r\n    function setup() {\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n        playbackController = PlaybackController(context).getInstance();\r\n    }\r\n\r\n    function execute(streamProcessor) {\r\n\r\n        let representationInfo = streamProcessor.getCurrentRepresentationInfo();\r\n        let mediaInfo = representationInfo.mediaInfo;\r\n        let mediaType = mediaInfo.type;\r\n        let metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\r\n        let bufferLevel = dashMetrics.getCurrentBufferLevel(metrics);\r\n\r\n        return bufferLevel < getBufferTarget(streamProcessor, mediaType);\r\n    }\r\n\r\n    function reset() {}\r\n\r\n    function getBufferTarget(streamProcessor, type) {\r\n\r\n        let representationInfo = streamProcessor.getCurrentRepresentationInfo();\r\n        let mediaInfo = representationInfo.mediaInfo;\r\n        let streamInfo = mediaInfo.streamInfo;\r\n        let abrController = streamProcessor.getABRController();\r\n        let duration = streamInfo.manifestInfo.duration;\r\n        let isLongFormContent = (duration >= mediaPlayerModel.getLongFormContentDurationThreshold());\r\n        let bufferTarget = NaN;\r\n\r\n        if (type === 'fragmentedText') {\r\n            bufferTarget = textSourceBuffer.getAllTracksAreDisabled() ? 0 : representationInfo.fragmentDuration;\r\n        } else {\r\n            if (abrController.isPlayingAtTopQuality(streamInfo)) {\r\n                bufferTarget = isLongFormContent ? mediaPlayerModel.getBufferTimeAtTopQualityLongForm() : mediaPlayerModel.getBufferTimeAtTopQuality();\r\n            }else {\r\n                bufferTarget = mediaPlayerModel.getStableBufferTime();\r\n            }\r\n        }\r\n        return bufferTarget;\r\n    }\r\n\r\n    instance = {\r\n        execute: execute,\r\n        reset: reset\r\n    };\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nBufferLevelRule.__dashjs_factory_name = 'BufferLevelRule';\r\nexport default FactoryMaker.getClassFactory(BufferLevelRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Debug from '../../../core/Debug.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction NextFragmentRequestRule(config) {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n    let adapter = config.adapter;\r\n    let sourceBufferController = config.sourceBufferController;\r\n    let virtualBuffer = config.virtualBuffer;\r\n    let textSourceBuffer = config.textSourceBuffer;\r\n\r\n    function execute(streamProcessor) {\r\n\r\n        let representationInfo = streamProcessor.getCurrentRepresentationInfo();\r\n        let mediaInfo = representationInfo.mediaInfo;\r\n        let mediaType = mediaInfo.type;\r\n        let streamId = mediaInfo.streamInfo.id;\r\n        let scheduleController = streamProcessor.getScheduleController();\r\n        let seekTarget = scheduleController.getSeekTarget();\r\n        let hasSeekTarget = !isNaN(seekTarget);\r\n        let keepIdx = !hasSeekTarget;\r\n        let time = hasSeekTarget ? seekTarget : adapter.getIndexHandlerTime(streamProcessor);\r\n        let buffer = streamProcessor.getBuffer();\r\n        let range = null;\r\n        let appendedChunks;\r\n        let request;\r\n\r\n        if (isNaN(time) ||\r\n            (mediaType === 'fragmentedText' && textSourceBuffer.getAllTracksAreDisabled())) {\r\n            return null;\r\n        }\r\n\r\n        if (hasSeekTarget) {\r\n            scheduleController.setSeekTarget(NaN);\r\n        }\r\n\r\n        /**\r\n         * This is critical for IE/Safari/EDGE\r\n         * */\r\n        if (buffer) {\r\n            range = sourceBufferController.getBufferRange(streamProcessor.getBuffer(), time);\r\n            if (range !== null) {\r\n                appendedChunks = virtualBuffer.getChunks({streamId: streamId, mediaType: mediaType, appended: true, mediaInfo: mediaInfo, forRange: range});\r\n                if (appendedChunks && appendedChunks.length > 0) {\r\n                    let t = time;\r\n                    time = appendedChunks[appendedChunks.length - 1].bufferedRange.end;\r\n                    log('Prior to making a request for time, NextFragmentRequestRule is aligning index handler\\'s currentTime with bufferedRange.end.',  t, ' was changed to ', time);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        request = adapter.getFragmentRequestForTime(streamProcessor, representationInfo, time, {keepIdx: keepIdx});\r\n        //log(\"getForTime\", request, time);\r\n        if (request && streamProcessor.getFragmentModel().isFragmentLoaded(request)) {\r\n            request = adapter.getNextFragmentRequest(streamProcessor, representationInfo);\r\n            //log(\"getForNext\", request, streamProcessor.getIndexHandler().getCurrentIndex());\r\n        }\r\n\r\n        if (request) {\r\n            adapter.setIndexHandlerTime(streamProcessor, request.startTime + request.duration);\r\n            request.delayLoadingTime = new Date().getTime() + scheduleController.getTimeToLoadDelay();\r\n            scheduleController.setTimeToLoadDelay(0); // only delay one fragment\r\n        }\r\n\r\n        return request;\r\n    }\r\n\r\n    instance = {\r\n        execute: execute\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nNextFragmentRequestRule.__dashjs_factory_name = 'NextFragmentRequestRule';\r\nexport default FactoryMaker.getClassFactory(NextFragmentRequestRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport SwitchRequest from '../SwitchRequest.js';\r\nimport EventBus from '../../../core/EventBus.js';\r\nimport Events from '../../../core/events/Events.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nconst SEARCH_TIME_SPAN = 12 * 60 * 60; // set the time span that limits our search range to a 12 hours in seconds\r\n\r\nfunction LiveEdgeBinarySearchRule(config) {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let adapter = config.adapter;\r\n    let timelineConverter = config.timelineConverter;\r\n\r\n    let instance,\r\n        liveEdgeInitialSearchPosition,\r\n        liveEdgeSearchRange,\r\n        liveEdgeSearchStep,\r\n        representationInfo,\r\n        useBinarySearch,\r\n        fragmentDuration,\r\n        p,\r\n        callback,\r\n        fragmentLoader,\r\n        streamProcessor;\r\n\r\n    function setup() {\r\n        liveEdgeInitialSearchPosition = NaN;\r\n        liveEdgeSearchRange = null;\r\n        liveEdgeSearchStep = NaN;\r\n        representationInfo = null;\r\n        useBinarySearch = false;\r\n        fragmentDuration = NaN;\r\n        p = SwitchRequest.DEFAULT;\r\n    }\r\n\r\n    function execute(rulesContext, callbackFunc) {\r\n        var request,\r\n            DVRWindow; // all fragments are supposed to be available in this interval\r\n\r\n        callback = callbackFunc;\r\n        streamProcessor = rulesContext.getStreamProcessor();\r\n        fragmentLoader = streamProcessor.getFragmentLoader();\r\n        representationInfo = rulesContext.getTrackInfo();\r\n        fragmentDuration = representationInfo.fragmentDuration;\r\n        DVRWindow = representationInfo.DVRWindow; // all fragments are supposed to be available in this interval\r\n\r\n        // start position of the search, it is supposed to be a live edge - the last available fragment for the current mpd\r\n        liveEdgeInitialSearchPosition = DVRWindow.end;\r\n\r\n        if (representationInfo.useCalculatedLiveEdgeTime) {\r\n            //By default an expected live edge is the end of the last segment.\r\n            // A calculated live edge ('end' property of a range returned by TimelineConverter.calcSegmentAvailabilityRange)\r\n            // is used as an initial point for finding the actual live edge.\r\n            // But for SegmentTimeline mpds (w/o a negative @r) the end of the\r\n            // last segment is the actual live edge. At the same time, calculated live edge is an expected live edge.\r\n            // Thus, we need to switch an expected live edge and actual live edge for SegmentTimeline streams.\r\n            var actualLiveEdge = timelineConverter.getExpectedLiveEdge();\r\n            timelineConverter.setExpectedLiveEdge(liveEdgeInitialSearchPosition);\r\n            callback(SwitchRequest(context).create(actualLiveEdge, p));\r\n            return;\r\n        }\r\n\r\n        // we should search for a live edge in a time range which is limited by SEARCH_TIME_SPAN.\r\n        liveEdgeSearchRange = {start: Math.max(0, (liveEdgeInitialSearchPosition - SEARCH_TIME_SPAN)), end: liveEdgeInitialSearchPosition + SEARCH_TIME_SPAN};\r\n        // we have to use half of the availability interval (window) as a search step to ensure that we find a fragment in the window\r\n        liveEdgeSearchStep = Math.floor((DVRWindow.end - DVRWindow.start) / 2);\r\n        // start search from finding a request for the initial search time\r\n        request = adapter.getFragmentRequestForTime(streamProcessor, representationInfo, liveEdgeInitialSearchPosition, {ignoreIsFinished: true});\r\n        findLiveEdge(liveEdgeInitialSearchPosition, onSearchForFragmentSucceeded, onSearchForFragmentFailed, request);\r\n    }\r\n\r\n    function reset() {\r\n        liveEdgeInitialSearchPosition = NaN;\r\n        liveEdgeSearchRange = null;\r\n        liveEdgeSearchStep = NaN;\r\n        representationInfo = null;\r\n        useBinarySearch = false;\r\n        fragmentDuration = NaN;\r\n        streamProcessor = null;\r\n        fragmentLoader = null;\r\n    }\r\n\r\n    function findLiveEdge(searchTime, onSuccess, onError, request) {\r\n        var req;\r\n        if (request === null) {\r\n            // request can be null because it is out of the generated list of request. In this case we need to\r\n            // update the list and the DVRWindow\r\n            // try to get request object again\r\n            req = adapter.generateFragmentRequestForTime(streamProcessor, representationInfo, searchTime);\r\n            findLiveEdge(searchTime, onSuccess, onError, req);\r\n        } else {\r\n            var handler = function (e) {\r\n                eventBus.off(Events.CHECK_FOR_EXISTENCE_COMPLETED, handler, this);\r\n                if (e.exists) {\r\n                    onSuccess(e.request, searchTime);\r\n                } else {\r\n                    onError(e.request, searchTime);\r\n                }\r\n            };\r\n\r\n            eventBus.on(Events.CHECK_FOR_EXISTENCE_COMPLETED, handler, this);\r\n            fragmentLoader.checkForExistence(request);\r\n        }\r\n    }\r\n\r\n    function onSearchForFragmentFailed(request, lastSearchTime) {\r\n        var searchTime,\r\n            req,\r\n            searchInterval;\r\n\r\n        if (useBinarySearch) {\r\n            binarySearch(false, lastSearchTime);\r\n            return;\r\n        }\r\n\r\n        // we have not found any available fragments yet, update the search interval\r\n        searchInterval = lastSearchTime - liveEdgeInitialSearchPosition;\r\n        // we search forward and backward from the start position, increasing the search interval by the value of the half of the availability interval - liveEdgeSearchStep\r\n        searchTime = searchInterval > 0 ? (liveEdgeInitialSearchPosition - searchInterval) : (liveEdgeInitialSearchPosition + Math.abs(searchInterval) + liveEdgeSearchStep);\r\n\r\n        // if the search time is out of the range bounds we have not be able to find live edge, stop trying\r\n        if (searchTime < liveEdgeSearchRange.start && searchTime > liveEdgeSearchRange.end) {\r\n            callback(SwitchRequest(context).create(null, p));\r\n        } else {\r\n            // continue searching for a first available fragment\r\n            req = adapter.getFragmentRequestForTime(streamProcessor, representationInfo, searchTime, {ignoreIsFinished: true});\r\n            findLiveEdge(searchTime, onSearchForFragmentSucceeded, onSearchForFragmentFailed, req);\r\n        }\r\n    }\r\n\r\n    function onSearchForFragmentSucceeded(request, lastSearchTime) {\r\n        var startTime = request.startTime;\r\n        var req,\r\n            searchTime;\r\n\r\n        if (!useBinarySearch) {\r\n            // if the fragment duration is unknown we cannot use binary search because we will not be able to\r\n            // decide when to stop the search, so let the start time of the current fragment be a liveEdge\r\n            if (!representationInfo.fragmentDuration) {\r\n                callback(SwitchRequest(context).create(startTime, p));\r\n                return;\r\n            }\r\n            useBinarySearch = true;\r\n            liveEdgeSearchRange.end = startTime + (2 * liveEdgeSearchStep);\r\n\r\n            //if the first request has succeeded we should check next fragment - if it does not exist we have found live edge,\r\n            // otherwise start binary search to find live edge\r\n            if (lastSearchTime === liveEdgeInitialSearchPosition) {\r\n                searchTime = lastSearchTime + fragmentDuration;\r\n                req = adapter.getFragmentRequestForTime(streamProcessor, representationInfo, searchTime, {ignoreIsFinished: true});\r\n                findLiveEdge(searchTime, function () {\r\n                    binarySearch(true, searchTime);\r\n                }, function () {\r\n                    callback(SwitchRequest(context).create(searchTime, p));\r\n                }, req);\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        binarySearch(true, lastSearchTime);\r\n    }\r\n\r\n    function binarySearch(lastSearchSucceeded, lastSearchTime) {\r\n        var isSearchCompleted,\r\n            req,\r\n            searchTime;\r\n\r\n        if (lastSearchSucceeded) {\r\n            liveEdgeSearchRange.start = lastSearchTime;\r\n        } else {\r\n            liveEdgeSearchRange.end = lastSearchTime;\r\n        }\r\n\r\n        isSearchCompleted = (Math.floor(liveEdgeSearchRange.end - liveEdgeSearchRange.start)) <= fragmentDuration;\r\n\r\n        if (isSearchCompleted) {\r\n            // search completed, we should take the time of the last found fragment. If the last search succeeded we\r\n            // take this time. Otherwise, we should subtract the time of the search step which is equal to fragment duration\r\n            callback(SwitchRequest(context).create((lastSearchSucceeded ? lastSearchTime : (lastSearchTime - fragmentDuration)), p));\r\n        } else {\r\n            // update the search time and continue searching\r\n            searchTime = ((liveEdgeSearchRange.start + liveEdgeSearchRange.end) / 2);\r\n            req = adapter.getFragmentRequestForTime(streamProcessor, representationInfo, searchTime, {ignoreIsFinished: true});\r\n            findLiveEdge(searchTime, onSearchForFragmentSucceeded, onSearchForFragmentFailed, req);\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        execute: execute,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nLiveEdgeBinarySearchRule.__dashjs_factory_name = 'LiveEdgeBinarySearchRule';\r\nexport default FactoryMaker.getClassFactory(LiveEdgeBinarySearchRule);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport SwitchRequest from '../SwitchRequest.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nfunction LiveEdgeWithTimeSynchronizationRule(config) {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n    let timelineConverter = config.timelineConverter;\r\n\r\n    // if the time has been synchronized correctly (which it must have been\r\n    // to end up executing this rule), the last entry in the DVR window\r\n    // should be the live edge. if that is incorrect for whatever reason,\r\n    // playback will fail to start and some other action should be taken.\r\n    function execute(rulesContext, callback) {\r\n        var representationInfo = rulesContext.getTrackInfo();\r\n        var liveEdgeInitialSearchPosition = representationInfo.DVRWindow.end;\r\n        var p = SwitchRequest.DEFAULT;\r\n\r\n        if (representationInfo.useCalculatedLiveEdgeTime) {\r\n            //By default an expected live edge is the end of the last segment.\r\n            // A calculated live edge ('end' property of a range returned by TimelineConverter.calcSegmentAvailabilityRange)\r\n            // is used as an initial point for finding the actual live edge.\r\n            // But for SegmentTimeline mpds (w/o a negative @r) the end of the\r\n            // last segment is the actual live edge. At the same time, calculated live edge is an expected live edge.\r\n            // Thus, we need to switch an expected live edge and actual live edge for SegmentTimeline streams.\r\n            var actualLiveEdge = timelineConverter.getExpectedLiveEdge();\r\n            timelineConverter.setExpectedLiveEdge(liveEdgeInitialSearchPosition);\r\n            callback(SwitchRequest(context).create(actualLiveEdge, p));\r\n        } else {\r\n            callback(SwitchRequest(context).create(liveEdgeInitialSearchPosition, p));\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        execute: execute\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nLiveEdgeWithTimeSynchronizationRule.__dashjs_factory_name = 'LiveEdgeWithTimeSynchronizationRule';\r\nexport default FactoryMaker.getClassFactory(LiveEdgeWithTimeSynchronizationRule);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\nimport TimelineConverter from '../../../dash/utils/TimelineConverter.js';\r\nimport LiveEdgeBinarySearchRule from './LiveEdgeBinarySearchRule.js';\r\nimport LiveEdgeWithTimeSynchronizationRule from './LiveEdgeWithTimeSynchronizationRule.js';\r\nimport DashAdapter from '../../../dash/DashAdapter.js';\r\n\r\n\r\nconst TIME_SYNCHRONIZED_RULES = 'withAccurateTimeSourceRules';\r\nconst BEST_GUESS_RULES = 'bestGuestRules';\r\n\r\nfunction SynchronizationRulesCollection() {\r\n\r\n    let context = this.context;\r\n\r\n    let instance,\r\n        withAccurateTimeSourceRules,\r\n        bestGuestRules;\r\n\r\n    function initialize() {\r\n        withAccurateTimeSourceRules = [];\r\n        bestGuestRules = [];\r\n\r\n        withAccurateTimeSourceRules.push(LiveEdgeWithTimeSynchronizationRule(context).create({\r\n            timelineConverter: TimelineConverter(context).getInstance()\r\n        }));\r\n\r\n        bestGuestRules.push(LiveEdgeBinarySearchRule(context).create({\r\n            timelineConverter: TimelineConverter(context).getInstance(),\r\n            adapter: DashAdapter(context).getInstance()\r\n        }));\r\n    }\r\n\r\n    function getRules(type) {\r\n        switch (type) {\r\n            case TIME_SYNCHRONIZED_RULES:\r\n                return withAccurateTimeSourceRules;\r\n            case BEST_GUESS_RULES:\r\n                return bestGuestRules;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        getRules: getRules\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nSynchronizationRulesCollection.__dashjs_factory_name = 'SynchronizationRulesCollection';\r\nlet factory = FactoryMaker.getSingletonFactory(SynchronizationRulesCollection);\r\nfactory.TIME_SYNCHRONIZED_RULES = TIME_SYNCHRONIZED_RULES;\r\nfactory.BEST_GUESS_RULES = BEST_GUESS_RULES;\r\nexport default factory;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport DashManifestModel from '../../dash/models/DashManifestModel.js';\r\nimport BlacklistController from '../controllers/BlacklistController.js';\r\nimport DVBSelector from '../rules/baseUrlResolution/DVBSelector.js';\r\nimport BasicSelector from '../rules/baseUrlResolution/BasicSelector.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nconst URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = 1;\r\nconst URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = 'Failed to resolve a valid URL';\r\n\r\nfunction BaseURLSelector() {\r\n\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n    const dashManifestModel = DashManifestModel(context).getInstance();\r\n\r\n    let instance,\r\n        serviceLocationBlacklistController,\r\n        basicSelector,\r\n        dvbSelector,\r\n        selector;\r\n\r\n    function setup() {\r\n        serviceLocationBlacklistController = BlacklistController(context).create({\r\n            updateEventName:        Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\r\n            loadFailedEventName:    Events.FRAGMENT_LOADING_COMPLETED\r\n        });\r\n\r\n        basicSelector = BasicSelector(context).create({\r\n            blacklistController: serviceLocationBlacklistController\r\n        });\r\n\r\n        dvbSelector = DVBSelector(context).create({\r\n            blacklistController: serviceLocationBlacklistController\r\n        });\r\n\r\n        selector = basicSelector;\r\n    }\r\n\r\n    function chooseSelectorFromManifest(manifest) {\r\n        if (dashManifestModel.getIsDVB(manifest)) {\r\n            selector = dvbSelector;\r\n        } else {\r\n            selector = basicSelector;\r\n        }\r\n    }\r\n\r\n    function select(data) {\r\n        const baseUrls = data.baseUrls;\r\n        const selectedIdx = data.selectedIdx;\r\n\r\n        // Once a random selection has been carried out amongst a group of BaseURLs with the same\r\n        // @priority attribute value, then that choice should be re-used if the selection needs to be made again\r\n        // unless the blacklist has been modified or the available BaseURLs have changed.\r\n        if (!isNaN(selectedIdx)) {\r\n            return baseUrls[selectedIdx];\r\n        }\r\n\r\n        let selectedBaseUrl = selector.select(baseUrls);\r\n\r\n        if (!selectedBaseUrl) {\r\n            eventBus.trigger(\r\n                Events.URL_RESOLUTION_FAILED,\r\n                {\r\n                    error: new Error(\r\n                        URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE,\r\n                        URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE\r\n                    )\r\n                }\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        data.selectedIdx = baseUrls.indexOf(selectedBaseUrl);\r\n\r\n        return selectedBaseUrl;\r\n    }\r\n\r\n    function reset() {\r\n        serviceLocationBlacklistController.reset();\r\n    }\r\n\r\n    instance = {\r\n        chooseSelectorFromManifest: chooseSelectorFromManifest,\r\n        select: select,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nBaseURLSelector.__dashjs_factory_name = 'BaseURLSelector';\r\nlet factory = FactoryMaker.getClassFactory(BaseURLSelector);\r\nfactory.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE;\r\nfactory.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport IsoFile from './IsoFile.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport ISOBoxer from 'codem-isoboxer';\r\n\r\nfunction BoxParser(/*config*/) {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n\r\n    /**\r\n     * @param {ArrayBuffer} data\r\n     * @returns {@link IsoFile}\r\n     * @memberof BoxParser#\r\n     */\r\n    function parse(data) {\r\n        if (!data) return null;\r\n\r\n        if (data.fileStart === undefined) {\r\n            data.fileStart = 0;\r\n        }\r\n\r\n        var parsedFile = ISOBoxer.parseBuffer(data);\r\n        var dashIsoFile = IsoFile(context).create();\r\n\r\n        dashIsoFile.setData(parsedFile);\r\n\r\n        return dashIsoFile;\r\n    }\r\n\r\n    instance = {\r\n        parse: parse\r\n    };\r\n\r\n    return instance;\r\n}\r\nBoxParser.__dashjs_factory_name = 'BoxParser';\r\nexport default FactoryMaker.getSingletonFactory(BoxParser);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction Capabilities() {\r\n\r\n    let instance,\r\n        encryptedMediaSupported;\r\n\r\n    function setup() {\r\n        encryptedMediaSupported = false;\r\n    }\r\n\r\n    function supportsMediaSource() {\r\n        let hasWebKit = ('WebKitMediaSource' in window);\r\n        let hasMediaSource = ('MediaSource' in window);\r\n\r\n        return (hasWebKit || hasMediaSource);\r\n    }\r\n\r\n    /**\r\n     * Returns whether Encrypted Media Extensions are supported on this\r\n     * user agent\r\n     *\r\n     * @return {boolean} true if EME is supported, false otherwise\r\n     */\r\n    function supportsEncryptedMedia() {\r\n        return encryptedMediaSupported;\r\n    }\r\n\r\n    function setEncryptedMediaSupported(value) {\r\n        encryptedMediaSupported = value;\r\n    }\r\n\r\n    function supportsCodec(element, codec) {\r\n        var canPlay = element.canPlayType(codec);\r\n        return (canPlay === 'probably' || canPlay === 'maybe');\r\n    }\r\n\r\n    instance = {\r\n        supportsMediaSource: supportsMediaSource,\r\n        supportsEncryptedMedia: supportsEncryptedMedia,\r\n        supportsCodec: supportsCodec,\r\n        setEncryptedMediaSupported: setEncryptedMediaSupported\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\nCapabilities.__dashjs_factory_name = 'Capabilities';\r\nexport default FactoryMaker.getSingletonFactory(Capabilities);","﻿/**\r\n* The copyright in this software is being made available under the BSD License,\r\n* included below. This software may be subject to other third party and contributor\r\n* rights, including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2013, Dash Industry Forum.\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification,\r\n* are permitted provided that the following conditions are met:\r\n*  * Redistributions of source code must retain the above copyright notice, this\r\n*  list of conditions and the following disclaimer.\r\n*  * Redistributions in binary form must reproduce the above copyright notice,\r\n*  this list of conditions and the following disclaimer in the documentation and/or\r\n*  other materials provided with the distribution.\r\n*  * Neither the name of Dash Industry Forum nor the names of its\r\n*  contributors may be used to endorse or promote products derived from this software\r\n*  without specific prior written permission.\r\n*\r\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n*  POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction CustomTimeRanges(/*config*/) {\r\n    let customTimeRangeArray = [];\r\n    let length = 0;\r\n\r\n    function add(start, end) {\r\n        var i = 0;\r\n\r\n        for (i = 0; (i < this.customTimeRangeArray.length) && (start > this.customTimeRangeArray[i].start); i++);\r\n\r\n        this.customTimeRangeArray.splice(i, 0, {start: start,end: end});\r\n\r\n        for (i = 0; i < this.customTimeRangeArray.length - 1; i++) {\r\n            if (this.mergeRanges(i,i + 1)) {\r\n                i--;\r\n            }\r\n        }\r\n        this.length = this.customTimeRangeArray.length;\r\n    }\r\n\r\n    function clear() {\r\n        this.customTimeRangeArray = [];\r\n        this.length = 0;\r\n    }\r\n\r\n    function remove(start, end) {\r\n        for (var i = 0; i < this.customTimeRangeArray.length; i++) {\r\n            if (start <= this.customTimeRangeArray[i].start && end >= this.customTimeRangeArray[i].end) {\r\n                //      |--------------Range i-------|\r\n                //|---------------Range to remove ---------------|\r\n                //    or\r\n                //|--------------Range i-------|\r\n                //|--------------Range to remove ---------------|\r\n                //    or\r\n                //                 |--------------Range i-------|\r\n                //|--------------Range to remove ---------------|\r\n                this.customTimeRangeArray.splice(i,1);\r\n                i--;\r\n\r\n            }else if (start > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\r\n                //|-----------------Range i----------------|\r\n                //        |-------Range to remove -----|\r\n                this.customTimeRangeArray.splice(i + 1, 0, {start: end,end: this.customTimeRangeArray[i].end});\r\n                this.customTimeRangeArray[i].end = start;\r\n                break;\r\n            }else if ( start > this.customTimeRangeArray[i].start && start < this.customTimeRangeArray[i].end) {\r\n                //|-----------Range i----------|\r\n                //                    |---------Range to remove --------|\r\n                //    or\r\n                //|-----------------Range i----------------|\r\n                //            |-------Range to remove -----|\r\n                this.customTimeRangeArray[i].end = start;\r\n            }else if ( end > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\r\n                //                     |-----------Range i----------|\r\n                //|---------Range to remove --------|\r\n                //            or\r\n                //|-----------------Range i----------------|\r\n                //|-------Range to remove -----|\r\n                this.customTimeRangeArray[i].start = end;\r\n            }\r\n        }\r\n\r\n        this.length = this.customTimeRangeArray.length;\r\n    }\r\n\r\n    function mergeRanges(rangeIndex1, rangeIndex2) {\r\n        var range1 = this.customTimeRangeArray[rangeIndex1];\r\n        var range2 = this.customTimeRangeArray[rangeIndex2];\r\n\r\n        if (range1.start <=  range2.start && range2.start <= range1.end && range1.end <= range2.end) {\r\n            //|-----------Range1----------|\r\n            //                    |-----------Range2----------|\r\n            range1.end = range2.end;\r\n            this.customTimeRangeArray.splice(rangeIndex2,1);\r\n            return true;\r\n\r\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range2.end <= range1.end) {\r\n            //                |-----------Range1----------|\r\n            //|-----------Range2----------|\r\n            range1.start = range2.start;\r\n            this.customTimeRangeArray.splice(rangeIndex2,1);\r\n            return true;\r\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range1.end <= range2.end) {\r\n            //      |--------Range1-------|\r\n            //|---------------Range2--------------|\r\n            this.customTimeRangeArray.splice(rangeIndex1,1);\r\n            return true;\r\n        } else if (range1.start <= range2.start && range2.start <= range1.end && range2.end <= range1.end) {\r\n            //|-----------------Range1--------------|\r\n            //        |-----------Range2----------|\r\n            this.customTimeRangeArray.splice(rangeIndex2,1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function start(index) {\r\n        return this.customTimeRangeArray[index].start;\r\n    }\r\n\r\n    function end(index) {\r\n        return this.customTimeRangeArray[index].end;\r\n    }\r\n\r\n    return {\r\n        customTimeRangeArray: customTimeRangeArray,\r\n        length: length,\r\n        add: add,\r\n        clear: clear,\r\n        remove: remove,\r\n        mergeRanges: mergeRanges,\r\n        start: start,\r\n        end: end\r\n    };\r\n}\r\nCustomTimeRanges.__dashjs_factory_name = 'CustomTimeRanges';\r\nexport default FactoryMaker.getClassFactory(CustomTimeRanges);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport MediaPlayerModel from '../models/MediaPlayerModel.js';\r\nimport Debug from '../../core/Debug.js';\r\n\r\nconst legacyKeysAndReplacements = [\r\n    { oldKey: 'dashjs_vbitrate',  newKey: 'dashjs_video_bitrate' },\r\n    { oldKey: 'dashjs_abitrate',  newKey: 'dashjs_audio_bitrate' },\r\n    { oldKey: 'dashjs_vsettings', newKey: 'dashjs_video_settings' },\r\n    { oldKey: 'dashjs_asettings', newKey: 'dashjs_audio_settings' }\r\n];\r\n\r\nconst LOCAL_STORAGE_BITRATE_KEY_TEMPLATE = 'dashjs_?_bitrate';\r\nconst LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE = 'dashjs_?_settings';\r\n\r\nconst STORAGE_TYPE_LOCAL = 'localStorage';\r\nconst STORAGE_TYPE_SESSION = 'sessionStorage';\r\n\r\nfunction DOMStorage() {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n\r\n    let instance,\r\n        supported,\r\n        mediaPlayerModel;\r\n\r\n    //type can be local, session\r\n    function isSupported(type) {\r\n        if (supported !== undefined) return supported;\r\n\r\n        supported = false;\r\n\r\n        var testKey = '1';\r\n        var testValue = '1';\r\n        var storage;\r\n\r\n        try {\r\n            if (typeof window !== 'undefined') {\r\n                storage = window[type];\r\n            }\r\n        } catch (error) {\r\n            log('Warning: DOMStorage access denied: ' + error.message);\r\n            return supported;\r\n        }\r\n\r\n        if (!storage || (type !== STORAGE_TYPE_LOCAL && type !== STORAGE_TYPE_SESSION)) {\r\n            return supported;\r\n        }\r\n\r\n        /* When Safari (OS X or iOS) is in private browsing mode, it appears as though localStorage is available, but trying to call setItem throws an exception.\r\n         http://stackoverflow.com/questions/14555347/html5-localstorage-error-with-safari-quota-exceeded-err-dom-exception-22-an\r\n\r\n         Check if the storage can be used\r\n         */\r\n        try {\r\n            storage.setItem(testKey, testValue);\r\n            storage.removeItem(testKey);\r\n            supported = true;\r\n        } catch (error) {\r\n            log('Warning: DOMStorage is supported, but cannot be used: ' + error.message);\r\n        }\r\n\r\n        return supported;\r\n    }\r\n\r\n    function translateLegacyKeys() {\r\n        if (isSupported(STORAGE_TYPE_LOCAL)) {\r\n            legacyKeysAndReplacements.forEach(entry => {\r\n                const value = localStorage.getItem(entry.oldKey);\r\n\r\n                if (value) {\r\n                    localStorage.removeItem(entry.oldKey);\r\n\r\n                    try {\r\n                        localStorage.setItem(entry.newKey, value);\r\n                    } catch (e) {\r\n                        log(e.message);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function setup() {\r\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\r\n\r\n        translateLegacyKeys();\r\n    }\r\n\r\n    // Return current epoch time, ms, rounded to the nearest 10m to avoid fingerprinting user\r\n    function getTimestamp() {\r\n        let ten_minutes_ms = 60 * 1000 * 10;\r\n        return Math.round(new Date().getTime() / ten_minutes_ms) * ten_minutes_ms;\r\n    }\r\n\r\n    function canStore(storageType, key) {\r\n        return isSupported(storageType) && mediaPlayerModel['get' + key + 'CachingInfo']().enabled;\r\n    }\r\n\r\n    function getSavedMediaSettings(type) {\r\n        //Checks local storage to see if there is valid, non-expired media settings\r\n        if (!canStore(STORAGE_TYPE_LOCAL, 'LastMediaSettings')) return null;\r\n\r\n        var key = LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\\?/, type);\r\n        var obj = JSON.parse(localStorage.getItem(key)) || {};\r\n        var isExpired = (new Date().getTime() - parseInt(obj.timestamp, 10)) >= mediaPlayerModel.getLastMediaSettingsCachingInfo().ttl || false;\r\n        var settings = obj.settings;\r\n\r\n        if (isExpired) {\r\n            localStorage.removeItem(key);\r\n            settings = null;\r\n        }\r\n\r\n        return settings;\r\n    }\r\n\r\n    function getSavedBitrateSettings(type) {\r\n        let savedBitrate = NaN;\r\n        //Checks local storage to see if there is valid, non-expired bit rate\r\n        //hinting from the last play session to use as a starting bit rate.\r\n        if (canStore(STORAGE_TYPE_LOCAL, 'LastBitrate')) {\r\n            var key = LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\\?/, type);\r\n            var obj = JSON.parse(localStorage.getItem(key)) || {};\r\n            var isExpired = (new Date().getTime() - parseInt(obj.timestamp, 10)) >= mediaPlayerModel.getLastBitrateCachingInfo().ttl || false;\r\n            var bitrate = parseInt(obj.bitrate, 10);\r\n\r\n            if (!isNaN(bitrate) && !isExpired) {\r\n                savedBitrate = bitrate;\r\n                log('Last saved bitrate for ' + type + ' was ' + bitrate);\r\n            } else if (isExpired) {\r\n                localStorage.removeItem(key);\r\n            }\r\n        }\r\n        return savedBitrate;\r\n    }\r\n\r\n    function setSavedMediaSettings(type, value) {\r\n        if (canStore(STORAGE_TYPE_LOCAL, 'LastMediaSettings')) {\r\n            let key = LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\\?/, type);\r\n            try {\r\n                localStorage.setItem(key, JSON.stringify({settings: value, timestamp: getTimestamp()}));\r\n            } catch (e) {\r\n                log(e.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setSavedBitrateSettings(type, bitrate) {\r\n        if (canStore(STORAGE_TYPE_LOCAL, 'LastBitrate') && bitrate) {\r\n            let key = LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\\?/, type);\r\n            try {\r\n                localStorage.setItem(key, JSON.stringify({bitrate: bitrate / 1000, timestamp: getTimestamp()}));\r\n            } catch (e) {\r\n                log(e.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        getSavedBitrateSettings: getSavedBitrateSettings,\r\n        setSavedBitrateSettings: setSavedBitrateSettings,\r\n        getSavedMediaSettings: getSavedMediaSettings,\r\n        setSavedMediaSettings: setSavedMediaSettings,\r\n        isSupported: isSupported\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nDOMStorage.__dashjs_factory_name = 'DOMStorage';\r\nlet factory = FactoryMaker.getSingletonFactory(DOMStorage);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nconst CAPABILITY_ERROR_MEDIASOURCE      = 'mediasource';\r\nconst CAPABILITY_ERROR_MEDIAKEYS        = 'mediakeys';\r\n\r\nconst DOWNLOAD_ERROR_ID_MANIFEST        = 'manifest';\r\nconst DOWNLOAD_ERROR_ID_SIDX            = 'SIDX';\r\nconst DOWNLOAD_ERROR_ID_CONTENT         = 'content';\r\nconst DOWNLOAD_ERROR_ID_INITIALIZATION  = 'initialization';\r\nconst DOWNLOAD_ERROR_ID_XLINK           = 'xlink';\r\n\r\nconst MANIFEST_ERROR_ID_CODEC           = 'codec';\r\nconst MANIFEST_ERROR_ID_PARSE           = 'parse';\r\nconst MANIFEST_ERROR_ID_NOSTREAMS       = 'nostreams';\r\n\r\nconst TIMED_TEXT_ERROR_ID_PARSE         = 'parse';\r\n\r\nfunction ErrorHandler() {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    // \"mediasource\"|\"mediakeys\"\r\n    function capabilityError(err) {\r\n        eventBus.trigger(Events.ERROR, {error: 'capability', event: err});\r\n    }\r\n\r\n    // {id: \"manifest\"|\"SIDX\"|\"content\"|\"initialization\"|\"xlink\", url: \"\", request: {XMLHttpRequest instance}}\r\n    function downloadError(id, url, request) {\r\n        eventBus.trigger(Events.ERROR, {error: 'download', event: {id: id, url: url, request: request}});\r\n    }\r\n\r\n    // {message: \"\", id: \"codec\"|\"parse\"|\"nostreams\", manifest: {parsed manifest}}\r\n    function manifestError(message, id, manifest) {\r\n        eventBus.trigger(Events.ERROR, {error: 'manifestError', event: {message: message, id: id, manifest: manifest}});\r\n    }\r\n\r\n    // {message: '', id: 'parse', cc: ''}\r\n    function timedTextError(message, id, ccContent) {\r\n        eventBus.trigger(Events.ERROR, {error: 'cc', event: {message: message, id: id, cc: ccContent}});\r\n    }\r\n\r\n    function mediaSourceError(err) {\r\n        eventBus.trigger(Events.ERROR, {error: 'mediasource', event: err});\r\n    }\r\n\r\n    function mediaKeySessionError(err) {\r\n        eventBus.trigger(Events.ERROR, {error: 'key_session', event: err});\r\n    }\r\n\r\n    function mediaKeyMessageError(err) {\r\n        eventBus.trigger(Events.ERROR, {error: 'key_message', event: err});\r\n    }\r\n\r\n    instance = {\r\n        capabilityError: capabilityError,\r\n        downloadError: downloadError,\r\n        manifestError: manifestError,\r\n        timedTextError: timedTextError,\r\n        mediaSourceError: mediaSourceError,\r\n        mediaKeySessionError: mediaKeySessionError,\r\n        mediaKeyMessageError: mediaKeyMessageError\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\r\n\r\nconst factory = FactoryMaker.getSingletonFactory(ErrorHandler);\r\n\r\nfactory.CAPABILITY_ERROR_MEDIASOURCE        = CAPABILITY_ERROR_MEDIASOURCE;\r\nfactory.CAPABILITY_ERROR_MEDIAKEYS          = CAPABILITY_ERROR_MEDIAKEYS;\r\nfactory.DOWNLOAD_ERROR_ID_MANIFEST          = DOWNLOAD_ERROR_ID_MANIFEST;\r\nfactory.DOWNLOAD_ERROR_ID_SIDX              = DOWNLOAD_ERROR_ID_SIDX;\r\nfactory.DOWNLOAD_ERROR_ID_CONTENT           = DOWNLOAD_ERROR_ID_CONTENT;\r\nfactory.DOWNLOAD_ERROR_ID_INITIALIZATION    = DOWNLOAD_ERROR_ID_INITIALIZATION;\r\nfactory.DOWNLOAD_ERROR_ID_XLINK             = DOWNLOAD_ERROR_ID_XLINK;\r\nfactory.MANIFEST_ERROR_ID_CODEC             = MANIFEST_ERROR_ID_CODEC;\r\nfactory.MANIFEST_ERROR_ID_PARSE             = MANIFEST_ERROR_ID_PARSE;\r\nfactory.MANIFEST_ERROR_ID_NOSTREAMS         = MANIFEST_ERROR_ID_NOSTREAMS;\r\nfactory.TIMED_TEXT_ERROR_ID_PARSE           = TIMED_TEXT_ERROR_ID_PARSE;\r\n\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport IsoBox from '../vo/IsoBox.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction IsoFile() {\r\n\r\n    let instance,\r\n        parsedIsoFile,\r\n        commonProps,\r\n        sidxProps,\r\n        sidxRefProps,\r\n        emsgProps,\r\n        mdhdProps,\r\n        mfhdProps,\r\n        tfhdProps,\r\n        tfdtProps,\r\n        trunProps,\r\n        trunSampleProps;\r\n\r\n    /**\r\n    * @param {string} type\r\n    * @returns {@link IsoBox}\r\n    * @memberof IsoFile#\r\n    */\r\n    function getBox(type) {\r\n        if (!type || !parsedIsoFile || !parsedIsoFile.boxes || (parsedIsoFile.boxes.length === 0)) return null;\r\n\r\n        return convertToDashIsoBox(parsedIsoFile.fetch(type));\r\n    }\r\n\r\n    /**\r\n    * @param {string} type\r\n    * @returns {Array} array of {@link IsoBox}\r\n    * @memberof IsoFile#\r\n    */\r\n    function getBoxes(type) {\r\n        var boxData = parsedIsoFile.fetchAll(type);\r\n        var boxes = [];\r\n        var box;\r\n\r\n        for (var i = 0, ln = boxData.length; i < ln; i++) {\r\n            box = convertToDashIsoBox(boxData[i]);\r\n\r\n            if (box) {\r\n                boxes.push(box);\r\n            }\r\n        }\r\n\r\n        return boxes;\r\n    }\r\n\r\n    /**\r\n    * @param {string} value\r\n    * @memberof IsoFile#\r\n    */\r\n    function setData(value) {\r\n        parsedIsoFile = value;\r\n    }\r\n\r\n    /**\r\n    * @returns {@link IsoBox}\r\n    * @memberof IsoFile#\r\n    */\r\n    function getLastBox() {\r\n        if (!parsedIsoFile || !parsedIsoFile.boxes || !parsedIsoFile.boxes.length) return null;\r\n\r\n        var type = parsedIsoFile.boxes[parsedIsoFile.boxes.length - 1].type;\r\n        var boxes = getBoxes(type);\r\n\r\n        return boxes[boxes.length - 1];\r\n    }\r\n\r\n    /**\r\n    * @returns {Number}\r\n    * @memberof IsoFile#\r\n    */\r\n    function getOffset() {\r\n        return parsedIsoFile._cursor.offset;\r\n    }\r\n\r\n    function setup() {\r\n        commonProps = {\r\n            offset: '_offset',\r\n            size: 'size',\r\n            type: 'type'\r\n        };\r\n\r\n        sidxProps = {\r\n            references: 'references',\r\n            timescale: 'timescale',\r\n            earliest_presentation_time: 'earliest_presentation_time',\r\n            first_offset: 'first_offset'\r\n        };\r\n\r\n        sidxRefProps = {\r\n            reference_type: 'reference_type',\r\n            referenced_size: 'referenced_size',\r\n            subsegment_duration: 'subsegment_duration'\r\n        };\r\n\r\n        emsgProps = {\r\n            id: 'id',\r\n            value: 'value',\r\n            timescale: 'timescale',\r\n            scheme_id_uri: 'scheme_id_uri',\r\n            presentation_time_delta: 'presentation_time_delta',\r\n            event_duration: 'event_duration',\r\n            message_data: 'message_data'\r\n        };\r\n\r\n        mdhdProps = {\r\n            timescale: 'timescale'\r\n        };\r\n\r\n        mfhdProps = {\r\n            sequence_number: 'sequence_number'\r\n        };\r\n\r\n        tfhdProps = {\r\n            base_data_offset: 'base_data_offset',\r\n            sample_description_index: 'sample_description_index',\r\n            default_sample_duration: 'default_sample_duration',\r\n            default_sample_size: 'default_sample_size',\r\n            default_sample_flags: 'default_sample_flags',\r\n            flags: 'flags'\r\n        };\r\n\r\n        tfdtProps = {\r\n            version: 'version',\r\n            baseMediaDecodeTime: 'baseMediaDecodeTime',\r\n            flags: 'flags'\r\n        };\r\n\r\n        trunProps = {\r\n            sample_count: 'sample_count',\r\n            first_sample_flags: 'first_sample_flags',\r\n            data_offset: 'data_offset',\r\n            flags: 'flags',\r\n            samples: 'samples'\r\n        };\r\n\r\n        trunSampleProps = {\r\n            sample_size: 'sample_size',\r\n            sample_duration: 'sample_duration',\r\n            sample_composition_time_offset: 'sample_composition_time_offset'\r\n        };\r\n    }\r\n\r\n    function copyProps(from, to, props) {\r\n        for (var prop in props) {\r\n            to[prop] = from[props[prop]];\r\n        }\r\n    }\r\n\r\n    function convertToDashIsoBox(boxData) {\r\n        if (!boxData) return null;\r\n\r\n        var box = new IsoBox();\r\n        var i,\r\n            ln;\r\n\r\n        copyProps(boxData, box, commonProps);\r\n\r\n        if (boxData.hasOwnProperty('_incomplete')) {\r\n            box.isComplete = !boxData._incomplete;\r\n        }\r\n\r\n        switch (box.type) {\r\n            case 'sidx':\r\n                copyProps(boxData, box, sidxProps);\r\n                if (box.references) {\r\n                    for (i = 0, ln = box.references.length; i < ln; i++) {\r\n                        copyProps(boxData.references[i], box.references[i], sidxRefProps);\r\n                    }\r\n                }\r\n                break;\r\n            case 'emsg':\r\n                copyProps(boxData, box, emsgProps);\r\n                break;\r\n            case 'mdhd':\r\n                copyProps(boxData, box, mdhdProps);\r\n                break;\r\n            case 'mfhd':\r\n                copyProps(boxData, box, mfhdProps);\r\n                break;\r\n            case 'tfhd':\r\n                copyProps(boxData, box, tfhdProps);\r\n                break;\r\n            case 'tfdt':\r\n                copyProps(boxData, box, tfdtProps);\r\n                break;\r\n            case 'trun':\r\n                copyProps(boxData, box, trunProps);\r\n                if (box.samples) {\r\n                    for (i = 0, ln = box.samples.length; i < ln; i++) {\r\n                        copyProps(boxData.samples[i], box.samples[i], trunSampleProps);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n\r\n        return box;\r\n    }\r\n\r\n    instance = {\r\n        getBox: getBox,\r\n        getBoxes: getBoxes,\r\n        setData: setData,\r\n        getLastBox: getLastBox,\r\n        getOffset: getOffset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\nIsoFile.__dashjs_factory_name = 'IsoFile';\r\nexport default FactoryMaker.getClassFactory(IsoFile);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport SynchronizationRulesCollection from '../rules/synchronization/SynchronizationRulesCollection.js';\r\nimport Error from '../vo/Error.js';\r\nimport EventBus from '../../core/EventBus.js';\r\nimport Events from '../../core/events/Events.js';\r\nimport RulesController from '../rules/RulesController.js';\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nconst LIVE_EDGE_NOT_FOUND_ERROR_CODE = 1;\r\n\r\nfunction LiveEdgeFinder() {\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        timelineConverter,\r\n        streamProcessor,\r\n        rulesController,\r\n        isSearchStarted,\r\n        searchStartTime,\r\n        rules,\r\n        liveEdge,\r\n        ruleSet;\r\n\r\n    function initialize(TimelineConverter, StreamProcessor) {\r\n        timelineConverter = TimelineConverter;\r\n        streamProcessor = StreamProcessor;\r\n        isSearchStarted = false;\r\n        searchStartTime = NaN;\r\n        liveEdge = null;\r\n        rulesController = RulesController(context).getInstance();\r\n        ruleSet = SynchronizationRulesCollection.BEST_GUESS_RULES;\r\n        eventBus.on(Events.STREAM_INITIALIZED, onStreamInitialized, this);\r\n    }\r\n\r\n    function abortSearch() {\r\n        isSearchStarted = false;\r\n        searchStartTime = NaN;\r\n    }\r\n\r\n    function getLiveEdge() {\r\n        return liveEdge;\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.STREAM_INITIALIZED, onStreamInitialized, this);\r\n        abortSearch();\r\n        liveEdge = null;\r\n        timelineConverter = null;\r\n        streamProcessor = null;\r\n        isSearchStarted = false;\r\n        searchStartTime = NaN;\r\n        ruleSet = null;\r\n        rulesController = null;\r\n    }\r\n\r\n    function onSearchCompleted(req) {\r\n        var searchTime = (new Date().getTime() - searchStartTime) / 1000;\r\n        liveEdge = req.value;\r\n        eventBus.trigger(Events.LIVE_EDGE_SEARCH_COMPLETED, {liveEdge: liveEdge, searchTime: searchTime, error: liveEdge === null ? new Error(LIVE_EDGE_NOT_FOUND_ERROR_CODE, 'live edge has not been found', null) : null});\r\n    }\r\n\r\n    function onStreamInitialized(e) {\r\n\r\n        if (!streamProcessor.isDynamic() || isSearchStarted || e.error) {\r\n            return;\r\n        }\r\n\r\n        ruleSet = timelineConverter.isTimeSyncCompleted() ? SynchronizationRulesCollection.TIME_SYNCHRONIZED_RULES : SynchronizationRulesCollection.BEST_GUESS_RULES;\r\n\r\n        rules = SynchronizationRulesCollection(context).getInstance().getRules(ruleSet);\r\n        isSearchStarted = true;\r\n        searchStartTime = new Date().getTime();\r\n\r\n        rulesController.applyRules(rules, streamProcessor, onSearchCompleted, null, function (currentValue, newValue) {\r\n            return newValue;\r\n        });\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        abortSearch: abortSearch,\r\n        getLiveEdge: getLiveEdge,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\nLiveEdgeFinder.__dashjs_factory_name = 'LiveEdgeFinder';\r\nlet factory = FactoryMaker.getSingletonFactory(LiveEdgeFinder);\r\nfactory.LIVE_EDGE_NOT_FOUND_ERROR_CODE = LIVE_EDGE_NOT_FOUND_ERROR_CODE;\r\nexport default factory;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\n/**\r\n * @Module ObjectUtils\r\n * @description Provides utility functions for objects\r\n */\r\nfunction ObjectUtils() {\r\n\r\n    let instance;\r\n\r\n    /**\r\n     * Returns true if objects resolve to the same string. Only really useful\r\n     * when the user controls the object generation\r\n     * @return {boolean}\r\n     * @memberof module:ObjectUtils\r\n     * @instance\r\n     */\r\n    function areSimpleEquivalent(obj1, obj2) {\r\n        return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n    }\r\n\r\n    instance = {\r\n        areSimpleEquivalent: areSimpleEquivalent\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nObjectUtils.__dashjs_factory_name = 'ObjectUtils';\r\nexport default FactoryMaker.getSingletonFactory(ObjectUtils);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\nfunction RequestModifier() {\r\n\r\n    let instance;\r\n\r\n    function modifyRequestURL(url) {\r\n        return url;\r\n    }\r\n\r\n    function modifyRequestHeader(request) {\r\n        return request;\r\n    }\r\n\r\n    instance = {\r\n        modifyRequestURL: modifyRequestURL,\r\n        modifyRequestHeader: modifyRequestHeader\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nRequestModifier.__dashjs_factory_name = 'RequestModifier';\r\nexport default FactoryMaker.getSingletonFactory(RequestModifier);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport X2JS from '../../../externals/xml2json.js';\r\nimport Debug from '../../core/Debug.js';\r\n\r\nconst SECONDS_IN_HOUR = 60 * 60; // Expression of an hour in seconds\r\nconst SECONDS_IN_MIN = 60; // Expression of a minute in seconds\r\n\r\nfunction TTMLParser() {\r\n\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n\r\n    /*\r\n     * This TTML parser follows \"EBU-TT-D SUBTITLING DISTRIBUTION FORMAT - tech3380\" spec - https://tech.ebu.ch/docs/tech/tech3380.pdf.\r\n     * */\r\n    let instance,\r\n        timingRegex,\r\n        ttml, // contains the whole ttml document received\r\n        ttmlStyling, // contains the styling information from the document (from head following EBU-TT-D)\r\n        ttmlLayout, // contains the positioning information from the document (from head following EBU-TT-D)\r\n        fontSize,\r\n        lineHeight,\r\n        linePadding,\r\n        defaultLayoutProperties,\r\n        defaultStyleProperties,\r\n        fontFamilies,\r\n        textAlign,\r\n        multiRowAlign,\r\n        wrapOption,\r\n        unicodeBidi,\r\n        displayAlign,\r\n        writingMode,\r\n        videoModel;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.videoModel) {\r\n            videoModel = config.videoModel;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse the raw data and process it to return the HTML element representing the cue.\r\n     * Return the region to be processed and controlled (hide/show) by the caption controller.\r\n     * @param data: raw data received from the TextSourceBuffer\r\n     **/\r\n\r\n    function parse(data, intervalStart, intervalEnd) {\r\n        let tt, // Top element\r\n            head, // head in tt\r\n            body, // body in tt\r\n            type;\r\n\r\n        var errorMsg = '';\r\n\r\n        let converter = new X2JS([], '', false);\r\n\r\n        // Parse the TTML in a JSON object.\r\n        ttml = converter.xml_str2json(data);\r\n\r\n        if (!ttml) {\r\n            throw 'TTML document could not be parsed';\r\n        }\r\n\r\n        if (videoModel.getTTMLRenderingDiv()) {\r\n            type = 'html';\r\n        }\r\n\r\n        // Get the namespace if there is one defined in the JSON object.\r\n        var ttNS = getNamespacePrefix(ttml, 'http://www.w3.org/ns/ttml');\r\n\r\n        // Remove the namespace before each node if it exists:\r\n        if (ttNS) {\r\n            removeNamespacePrefix(ttml, ttNS);\r\n        }\r\n\r\n        // Check the document and compare to the specification (TTML and EBU-TT-D).\r\n        tt = ttml.tt;\r\n        if (!tt) {\r\n            throw 'TTML document lacks tt element';\r\n        }\r\n        head = tt.head;\r\n        if (!head) {\r\n            throw 'TTML document lacks head element';\r\n        }\r\n        if (head.layout) {\r\n            ttmlLayout = head.layout.region_asArray; //Mandatory in EBU-TT-D\r\n        }\r\n        if (head.styling) {\r\n            ttmlStyling = head.styling.style_asArray; // Mandatory in EBU-TT-D\r\n        }\r\n        body = tt.body;\r\n        if (!body) {\r\n            throw 'TTML document lacks body element';\r\n        }\r\n\r\n        // Extract the cellResolution information\r\n        var cellResolution = getCellResolution();\r\n\r\n        // Recover the video width and height displayed by the player.\r\n        var videoWidth = videoModel.getElement().clientWidth;\r\n        var videoHeight = videoModel.getElement().clientHeight;\r\n\r\n        // Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).\r\n        var cellUnit = [videoWidth / cellResolution[0], videoHeight / cellResolution[1]];\r\n        defaultStyleProperties['font-size'] = cellUnit[1] + 'px;';\r\n\r\n        var regions = [];\r\n        if (ttmlLayout) {\r\n            for (var i = 0; i < ttmlLayout.length; i++) {\r\n                regions.push(processRegion(JSON.parse(JSON.stringify(ttmlLayout[i])), cellUnit));\r\n            }\r\n        }\r\n\r\n        // Get the namespace prefix.\r\n        var nsttp = getNamespacePrefix(ttml.tt, 'http://www.w3.org/ns/ttml#parameter');\r\n\r\n        // Set the framerate.\r\n        if (ttml.tt.hasOwnProperty(nsttp + ':frameRate')) {\r\n            ttml.tt.frameRate = parseInt(ttml.tt[nsttp + ':frameRate'], 10);\r\n        }\r\n        var captionArray = [];\r\n        // Extract the div\r\n        var divs = ttml.tt.body_asArray[0].__children;\r\n\r\n        divs.forEach(function (div) {\r\n            var cues = div.div.p_asArray;\r\n\r\n            // Check if cues is not empty or undefined.\r\n            if (!cues || cues.length === 0) {\r\n                errorMsg = 'TTML document does not contain any cues';\r\n            } else {\r\n\r\n                /*** Parsing of every cue.\r\n                 *\r\n                 * cues: List of the cues found in the ttml parsing.\r\n                 *       We iterate on this list.\r\n                 * cue: Every cue is parsed individually and creates an HTML element with its style and children.\r\n                 *\r\n                 * pElements: all the nodes that can be found in the paragraph.\r\n                 *\r\n                 * ***/\r\n\r\n                // Caption array is the final result return containing all the cues' information.\r\n                var pStartTime;\r\n                var pEndTime;\r\n                var spanStartTime;\r\n                var spanEndTime;\r\n                cues.forEach(function (cue) {\r\n\r\n                    // Obtain the start and end time of the cue.\r\n                    if (cue.hasOwnProperty('begin') && cue.hasOwnProperty('end')) {\r\n                        pStartTime = parseTimings(cue.begin);\r\n                        pEndTime = parseTimings(cue.end);\r\n                    } else if (cue.span.hasOwnProperty('begin') && cue.span.hasOwnProperty('end')) {\r\n                        spanStartTime = parseTimings(cue.span.begin);\r\n                        spanEndTime = parseTimings(cue.span.end);\r\n                    } else {\r\n                        errorMsg = 'TTML document has incorrect timing value';\r\n                        throw errorMsg;\r\n                    }\r\n                    let cueStartTime = spanStartTime || pStartTime;\r\n                    let cueEndTime = spanEndTime || pEndTime;\r\n\r\n                    if (typeof intervalStart !== 'undefined' && typeof intervalEnd !== 'undefined') {\r\n                        if (cueEndTime < intervalStart || cueStartTime > intervalEnd) {\r\n                            log('TTML: Cue interval ' + cueStartTime + '-' + cueEndTime +\r\n                                ' outside sample interval ' + intervalStart + '-' + intervalEnd + '. Dropped');\r\n                            return;\r\n                        } else {\r\n                            let clipped = false;\r\n                            let origStart = cueStartTime;\r\n                            let origEnd = cueEndTime;\r\n                            if (cueStartTime < intervalStart) {\r\n                                clipped = true;\r\n                                cueStartTime = intervalStart;\r\n                            }\r\n                            if (cueEndTime > intervalEnd) {\r\n                                clipped = true;\r\n                                cueEndTime = intervalEnd;\r\n                            }\r\n                            if (clipped) {\r\n                                log('TTML: Clipped cue ' + origStart + '-' + origEnd + ' to ' +\r\n                                    cueStartTime + '-' + cueEndTime);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (cue['smpte:backgroundImage'] !== undefined) {\r\n                        var images = ttml.tt.head.metadata.image_asArray;\r\n                        for (var j = 0; j < images.length; j++) {\r\n                            if (('#' + images[j]['xml:id']) == cue['smpte:backgroundImage']) {\r\n                                captionArray.push({\r\n                                    start: cueStartTime,\r\n                                    end: cueEndTime,\r\n                                    id: images[j]['xml:id'],\r\n                                    data: 'data:image/' + images[j].imagetype.toLowerCase() + ';base64, ' + images[j].__text,\r\n                                    type: 'image'\r\n                                });\r\n                            }\r\n                        }\r\n                    } else if (type === 'html') {\r\n                        lineHeight = {};\r\n                        linePadding = {};\r\n                        fontSize = {};\r\n                        var cueID = '';\r\n                        if (cue.hasOwnProperty('id') || cue.hasOwnProperty('xml:id')) {\r\n                            cueID = cue['xml:id'] || cue.id;\r\n                        }\r\n                        // Error if timing is not specified.\r\n                        // TODO: check with the specification what is allowed.\r\n                        if ((isNaN(pStartTime) || isNaN(pEndTime)) && (isNaN(spanStartTime) || isNaN(spanEndTime))) {\r\n                            errorMsg = 'TTML document has incorrect timing value';\r\n                            throw errorMsg;\r\n                        }\r\n\r\n                        /**\r\n                         * Find the region defined for the cue.\r\n                         */\r\n                        // properties to be put in the \"captionRegion\" HTML element.\r\n                        var cueRegionProperties = constructCueRegion(cue, div.div, cellUnit);\r\n\r\n                        /**\r\n                         * Find the style defined for the cue.\r\n                         */\r\n                        // properties to be put in the \"paragraph\" HTML element.\r\n                        var cueStyleProperties = constructCueStyle(cue, cellUnit);\r\n\r\n                        /**\r\n                         * /!\\ Create the cue HTML Element containing the whole cue.\r\n                         */\r\n                        var styleIDs = cueStyleProperties[1];\r\n                        cueStyleProperties = cueStyleProperties[0];\r\n\r\n                        // Final cue HTML element.\r\n                        var cueParagraph = document.createElement('div');\r\n                        cueParagraph.className = styleIDs;\r\n\r\n                        // Stock the element in the subtitle (in p) in an array (in case there are only one value).\r\n                        var pElements = cue.__children;\r\n\r\n                        // Create an wrapper containing the cue information about unicodeBidi and direction\r\n                        // as they need to be defined on at this level.\r\n                        // We append to the wrapper the cue itself.\r\n                        var cueDirUniWrapper = constructCue(pElements, cellUnit);\r\n                        cueDirUniWrapper.className = 'cueDirUniWrapper';\r\n\r\n                        // If the style defines these two properties, we place them in cueContainer\r\n                        // and delete them from the cue style so it is not added afterwards to the final cue.\r\n                        if (arrayContains('unicode-bidi', cueStyleProperties)) {\r\n                            cueDirUniWrapper.style.cssText += getPropertyFromArray('unicode-bidi', cueStyleProperties);\r\n                            deletePropertyFromArray('unicode-bidi', cueStyleProperties);\r\n                        }\r\n                        if (arrayContains('direction', cueStyleProperties)) {\r\n                            cueDirUniWrapper.style.cssText += getPropertyFromArray('direction', cueStyleProperties);\r\n                            deletePropertyFromArray('direction', cueStyleProperties);\r\n                        }\r\n\r\n                        // Apply the linePadding property if it is specified in the cue style.\r\n                        if (arrayContains('padding-left', cueStyleProperties) && arrayContains('padding-right', cueStyleProperties)) {\r\n                            cueDirUniWrapper.innerHTML = applyLinePadding(cueDirUniWrapper, cueStyleProperties);\r\n                        }\r\n\r\n                        /**\r\n                         * Clean and set the style and region for the cue to be returned.\r\n                         */\r\n\r\n                        // Remove the line padding property from being added at the \"paragraph\" element level.\r\n                        if (arrayContains('padding-left', cueStyleProperties) && arrayContains('padding-right', cueStyleProperties)) {\r\n                            deletePropertyFromArray('padding-left', cueStyleProperties);\r\n                            deletePropertyFromArray('padding-right', cueStyleProperties);\r\n                        }\r\n\r\n                        // Remove the ID of the region from being added at the \"paragraph\" element level.\r\n                        var regionID = '';\r\n                        if (arrayContains('regionID', cueRegionProperties)) {\r\n                            var wholeRegionID = getPropertyFromArray('regionID', cueRegionProperties);\r\n                            regionID = wholeRegionID.slice(wholeRegionID.indexOf(':') + 1, wholeRegionID.length - 1);\r\n                        }\r\n\r\n                        // We link the p style to the finale cueParagraph element.\r\n                        if (cueStyleProperties) {\r\n                            cueParagraph.style.cssText = cueStyleProperties.join(' ') + 'display:flex;';\r\n                        }\r\n                        // We define the CSS style for the cue region.\r\n                        if (cueRegionProperties) {\r\n                            cueRegionProperties = cueRegionProperties.join(' ');\r\n                        }\r\n\r\n                        // We then place the cue wrapper inside the paragraph element.\r\n                        cueParagraph.appendChild(cueDirUniWrapper);\r\n\r\n                        // Final cue.\r\n                        var finalCue = document.createElement('div');\r\n                        finalCue.appendChild(cueParagraph);\r\n                        finalCue.id = 'subtitle_' + cueID;\r\n                        finalCue.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\r\n\r\n                        if (Object.keys(fontSize).length === 0) {\r\n                            fontSize.defaultFontSize = '100';\r\n                        }\r\n\r\n                        // We add all the cue information in captionArray.\r\n                        captionArray.push({\r\n                            start: cueStartTime,\r\n                            end: cueEndTime,\r\n                            type: 'html',\r\n                            cueHTMLElement: finalCue,\r\n                            regions: regions,\r\n                            regionID: regionID,\r\n                            cueID: cueID,\r\n                            videoHeight: videoHeight,\r\n                            videoWidth: videoWidth,\r\n                            cellResolution: cellResolution,\r\n                            fontSize: fontSize || {\r\n                                defaultFontSize: '100'\r\n                            },\r\n                            lineHeight: lineHeight,\r\n                            linePadding: linePadding\r\n                        });\r\n\r\n                    } else {\r\n                        var text = '';\r\n                        var textElements = cue.__children;\r\n                        if (textElements.length) {\r\n                            textElements.forEach(function (el) {\r\n                                if (el.hasOwnProperty('span')) {\r\n                                    var spanElements = el.span.__children;\r\n                                    spanElements.forEach(function (spanEl) {\r\n                                        // If metadata is present, do not process.\r\n                                        if (spanElements.hasOwnProperty('metadata')) {\r\n                                            return;\r\n                                        }\r\n                                        // If the element is a string\r\n                                        if (spanEl.hasOwnProperty('#text')) {\r\n                                            text += spanEl['#text'].replace(/[\\r\\n]+/gm, ' ').trim();\r\n                                            // If the element is a 'br' tag\r\n                                        } else if ('br' in spanEl) {\r\n                                            // Create a br element.\r\n                                            text += '\\n';\r\n                                        }\r\n                                    });\r\n                                } else if (el.hasOwnProperty('br')) {\r\n                                    text += '\\n';\r\n                                } else {\r\n                                    text += el['#text'].replace(/[\\r\\n]+/gm, ' ').trim();\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        captionArray.push({\r\n                            start: cueStartTime,\r\n                            end: cueEndTime,\r\n                            data: text,\r\n                            type: 'text'\r\n                        });\r\n\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if (errorMsg !== '') {\r\n            log(errorMsg);\r\n        }\r\n\r\n        if (captionArray.length > 0) {\r\n            return captionArray;\r\n        } else {\r\n            throw errorMsg;\r\n        }\r\n    }\r\n\r\n    function setup() {\r\n        /*\r\n         * This TTML parser follows \"EBU-TT-D SUBTITLING DISTRIBUTION FORMAT - tech3380\" spec - https://tech.ebu.ch/docs/tech/tech3380.pdf.\r\n         * */\r\n        timingRegex = /^([0-9][0-9]+):([0-5][0-9]):([0-5][0-9])|(60)(\\.([0-9])+)?$/; // Regex defining the time\r\n        fontSize = {};\r\n        lineHeight = {};\r\n        linePadding = {};\r\n        defaultLayoutProperties = {\r\n            'top': '85%;',\r\n            'left': '5%;',\r\n            'width': '90%;',\r\n            'height': '10%;',\r\n            'align-items': 'flex-start;',\r\n            'overflow': 'visible;',\r\n            '-ms-writing-mode': 'lr-tb, horizontal-tb;',\r\n            '-webkit-writing-mode': 'horizontal-tb;',\r\n            '-moz-writing-mode': 'horizontal-tb;',\r\n            'writing-mode': 'horizontal-tb;'\r\n        };\r\n        defaultStyleProperties = {\r\n            'color': 'rgb(255,255,255);',\r\n            'direction': 'ltr;',\r\n            'font-family': 'monospace, sans-serif;',\r\n            'font-style': 'normal;',\r\n            'line-height': 'normal;',\r\n            'font-weight': 'normal;',\r\n            'text-align': 'start;',\r\n            'justify-content': 'flex-start;',\r\n            'text-decoration': 'none;',\r\n            'unicode-bidi': 'normal;',\r\n            'white-space': 'normal;',\r\n            'width': '100%;'\r\n        };\r\n        fontFamilies = {\r\n            monospace: 'font-family: monospace;',\r\n            sansSerif: 'font-family: sans-serif;',\r\n            serif: 'font-family: serif;',\r\n            monospaceSansSerif: 'font-family: monospace, sans-serif;',\r\n            monospaceSerif: 'font-family: monospace, serif;',\r\n            proportionalSansSerif: 'font-family: Arial;',\r\n            proportionalSerif: 'font-family: Times New Roman;',\r\n            'default': 'font-family: monospace, sans-serif;'\r\n        };\r\n        textAlign = {\r\n            right: ['justify-content: flex-end;', 'text-align: right;'],\r\n            start: ['justify-content: flex-start;', 'text-align: start;'],\r\n            center: ['justify-content: center;', 'text-align: center;'],\r\n            end: ['justify-content: flex-end;', 'text-align: end;'],\r\n            left: ['justify-content: flex-start;', 'text-align: left;']\r\n        };\r\n        multiRowAlign = {\r\n            start: 'text-align: start;',\r\n            center: 'text-align: center;',\r\n            end: 'text-align: end;',\r\n            auto: ''\r\n        };\r\n        wrapOption = {\r\n            wrap: 'white-space: normal;',\r\n            noWrap: 'white-space: nowrap;'\r\n        };\r\n        unicodeBidi = {\r\n            normal: 'unicode-bidi: normal;',\r\n            embed: 'unicode-bidi: embed;',\r\n            bidiOverride: 'unicode-bidi: bidi-override;'\r\n        };\r\n        displayAlign = {\r\n            before: 'align-items: flex-start;',\r\n            center: 'align-items: center;',\r\n            after: 'align-items: flex-end;'\r\n        };\r\n        writingMode = {\r\n            lrtb: '-webkit-writing-mode: horizontal-tb;' +\r\n                'writing-mode: horizontal-tb;',\r\n            rltb: '-webkit-writing-mode: horizontal-tb;' +\r\n                'writing-mode: horizontal-tb;' +\r\n                'direction: rtl;' +\r\n                'unicode-bidi: bidi-override;',\r\n            tbrl: '-webkit-writing-mode: vertical-rl;' +\r\n                'writing-mode: vertical-rl;' +\r\n                '-webkit-text-orientation: upright;' +\r\n                'text-orientation: upright;',\r\n            tblr: '-webkit-writing-mode: vertical-lr;' +\r\n                'writing-mode: vertical-lr;' +\r\n                '-webkit-text-orientation: upright;' +\r\n                'text-orientation: upright;',\r\n            lr: '-webkit-writing-mode: horizontal-tb;' +\r\n                'writing-mode: horizontal-tb;',\r\n            rl: '-webkit-writing-mode: horizontal-tb;' +\r\n                'writing-mode: horizontal-tb;' +\r\n                'direction: rtl;',\r\n            tb: '-webkit-writing-mode: vertical-rl;' +\r\n                'writing-mode: vertical-rl;' +\r\n                '-webkit-text-orientation: upright;' +\r\n                'text-orientation: upright;'\r\n        };\r\n    }\r\n\r\n    function parseTimings(timingStr) {\r\n        // Test if the time provided by the caption is valid.\r\n        var test = timingRegex.test(timingStr);\r\n        var timeParts,\r\n            parsedTime,\r\n            frameRate;\r\n\r\n        if (!test) {\r\n            // Return NaN so it will throw an exception at internalParse if the time is incorrect.\r\n            return NaN;\r\n        }\r\n\r\n        timeParts = timingStr.split(':');\r\n\r\n        // Process the timings by decomposing it and converting it in numbers.\r\n        parsedTime = (parseFloat(timeParts[0]) * SECONDS_IN_HOUR +\r\n            parseFloat(timeParts[1]) * SECONDS_IN_MIN +\r\n            parseFloat(timeParts[2]));\r\n\r\n        // In case a frameRate is provided, we adjust the parsed time.\r\n        if (timeParts[3]) {\r\n            frameRate = ttml.tt.frameRate;\r\n            if (frameRate && !isNaN(frameRate)) {\r\n                parsedTime += parseFloat(timeParts[3]) / frameRate;\r\n            } else {\r\n                return NaN;\r\n            }\r\n        }\r\n        return parsedTime;\r\n    }\r\n\r\n    function getNamespacePrefix(json, ns) {\r\n        // Obtain the namespace prefix.\r\n        var r = Object.keys(json)\r\n            .filter(function (k) {\r\n                return (k.split(':')[0] === 'xmlns' || k.split(':')[1] === 'xmlns') && json[k] === ns;\r\n            }).map(function (k) {\r\n                return k.split(':')[2] || k.split(':')[1];\r\n            });\r\n        if (r.length != 1) {\r\n            return null;\r\n        }\r\n        return r[0];\r\n    }\r\n\r\n    function removeNamespacePrefix(json, nsPrefix) {\r\n        for (var key in json) {\r\n            if (json.hasOwnProperty(key)) {\r\n                if ((typeof json[key] === 'object' || json[key] instanceof Object) && !Array.isArray(json[key])) {\r\n                    removeNamespacePrefix(json[key], nsPrefix);\r\n                } else if (Array.isArray(json[key])) {\r\n                    for (var i = 0; i < json[key].length; i++) {\r\n                        removeNamespacePrefix(json[key][i], nsPrefix);\r\n                    }\r\n                }\r\n                var newKey = key.slice(key.indexOf(nsPrefix) + nsPrefix.length + 1);\r\n                json[newKey] = json[key];\r\n                delete json[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    // backgroundColor = background-color, convert from camelCase to dash.\r\n    function camelCaseToDash(key) {\r\n        return key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n    }\r\n\r\n    // Convert an RGBA value written in Hex to rgba(v,v,v,a).\r\n    function convertHexToRGBA(rgba) {\r\n        // Get the hexadecimal value without the #.\r\n        var hex = rgba.slice(1);\r\n        // Separate the values in pairs.\r\n        var hexMatrice = hex.match(/.{2}/g);\r\n        // Convert the alpha value in decimal between 0 and 1.\r\n        var alpha = parseFloat(parseInt((parseInt(hexMatrice[3], 16) / 255) * 1000, 10) / 1000);\r\n        // Get the standard RGB value.\r\n        var rgb = hexMatrice.slice(0, 3).map(function (i) {\r\n            return parseInt(i, 16);\r\n        });\r\n        // Return the RGBA value for CSS.\r\n        return 'rgba(' + rgb.join(',') + ',' + alpha + ');';\r\n    }\r\n\r\n    // Return whether or not an array contains a certain text\r\n    function arrayContains(text, array) {\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (array[i].indexOf(text) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Return the whole value that contains \"text\"\r\n    function getPropertyFromArray(text, array) {\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (array[i].indexOf(text) > -1) {\r\n                return array[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Delete a a property from an array.\r\n    function deletePropertyFromArray(property, array) {\r\n        array.splice(array.indexOf(getPropertyFromArray(property, array)), 1);\r\n    }\r\n\r\n    function mergeArrays(primeArray, arrayToAdd) {\r\n        for (var i = 0; i < primeArray.length; i++) {\r\n            for (var j = 0; j < arrayToAdd.length; j++) {\r\n                // Take only the name of the property\r\n                if (primeArray[i]) {\r\n                    if (primeArray[i].split(':')[0].indexOf(arrayToAdd[j].split(':')[0]) > -1) {\r\n                        primeArray.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return primeArray.concat(arrayToAdd);\r\n    }\r\n\r\n    /**\r\n     * Processing of styling information:\r\n     * - processStyle: return an array of strings with the cue style under a CSS style form.\r\n     * - findStyleFromID: Return the unprocessed style from TTMLStyling corresponding to the ID researched.\r\n     * - getProcessedStyle: Return the processed style(s) from the ID(s) received in entry.\r\n     * **/\r\n\r\n\r\n    // Compute the style properties to return an array with the cleaned properties.\r\n    function processStyle(cueStyle, cellUnit) {\r\n        var properties = [];\r\n\r\n        // Clean up from the xml2json parsing:\r\n        for (var key in cueStyle) {\r\n            if (cueStyle.hasOwnProperty(key)) {\r\n                //Clean the properties from the parsing.\r\n                var newKey = key.replace('ebutts:', '');\r\n                newKey = newKey.replace('xml:', '');\r\n                newKey = newKey.replace('tts:', '');\r\n\r\n                // Clean the properties' names.\r\n                newKey = camelCaseToDash(newKey);\r\n                cueStyle[newKey] = cueStyle[key];\r\n                delete cueStyle[key];\r\n            }\r\n        }\r\n\r\n        // Line padding is computed from the cellResolution.\r\n        if ('line-padding' in cueStyle) {\r\n            var valuePadding = parseFloat(cueStyle['line-padding'].slice(cueStyle['line-padding'].indexOf(':') + 1,\r\n                cueStyle['line-padding'].indexOf('c')));\r\n            if ('id' in cueStyle) {\r\n                linePadding[cueStyle.id] = valuePadding;\r\n            }\r\n            var valuePaddingInPx = valuePadding * cellUnit[0] + 'px;';\r\n            properties.push('padding-left:' + valuePaddingInPx);\r\n            properties.push('padding-right:' + valuePaddingInPx);\r\n        }\r\n        // Font size is computed from the cellResolution.\r\n        if ('font-size' in cueStyle) {\r\n            var valueFtSize = parseFloat(cueStyle['font-size'].slice(cueStyle['font-size'].indexOf(':') + 1,\r\n                cueStyle['font-size'].indexOf('%')));\r\n            if ('id' in cueStyle) {\r\n                fontSize[cueStyle.id] = valueFtSize;\r\n            }\r\n            var valueFtSizeInPx = valueFtSize / 100 * cellUnit[1] + 'px;';\r\n            properties.push('font-size:' + valueFtSizeInPx);\r\n        }\r\n        // Line height is computed from the cellResolution.\r\n        if ('line-height' in cueStyle) {\r\n            if (cueStyle['line-height'] === 'normal') {\r\n                properties.push('line-height: normal;');\r\n            } else {\r\n                var valueLHSize = parseFloat(cueStyle['line-height'].slice(cueStyle['line-height'].indexOf(':') + 1,\r\n                    cueStyle['line-height'].indexOf('%')));\r\n                if ('id' in cueStyle) {\r\n                    lineHeight[cueStyle.id] = valueLHSize;\r\n                }\r\n                var valueLHSizeInPx = valueLHSize / 100 * cellUnit[1] + 'px;';\r\n                properties.push('line-height' + ':' + valueLHSizeInPx);\r\n            }\r\n        }\r\n        // Font-family can be specified by a generic family name or a custom family name.\r\n        if ('font-family' in cueStyle) {\r\n            if (cueStyle['font-family'] in fontFamilies) {\r\n                properties.push(fontFamilies[cueStyle['font-family']]);\r\n            } else {\r\n                properties.push('font-family:' + cueStyle['font-family'] + ';');\r\n            }\r\n        }\r\n        // Text align needs to be set from two properties:\r\n        // The standard text-align CSS property.\r\n        // The justify-content property as we use flex boxes.\r\n        if ('text-align' in cueStyle) {\r\n            if (cueStyle['text-align'] in textAlign) {\r\n                properties.push(textAlign[cueStyle['text-align']][0]);\r\n                properties.push(textAlign[cueStyle['text-align']][1]);\r\n            }\r\n        }\r\n        // Multi Row align is set only by the text-align property.\r\n        // TODO: TO CHECK\r\n        if ('multi-row-align' in cueStyle) {\r\n            if (arrayContains('text-align', properties) && cueStyle['multi-row-align'] != 'auto') {\r\n                deletePropertyFromArray('text-align', properties);\r\n            }\r\n            if (cueStyle['multi-row-align'] in multiRowAlign) {\r\n                properties.push(multiRowAlign[cueStyle['multi-row-align']]);\r\n            }\r\n        }\r\n        // Background color can be specified from hexadecimal (RGB or RGBA) value.\r\n        var rgbaValue;\r\n        if ('background-color' in cueStyle) {\r\n            if (cueStyle['background-color'].indexOf('#') > -1 && (cueStyle['background-color'].length - 1) === 8) {\r\n                rgbaValue = convertHexToRGBA(cueStyle['background-color']);\r\n                properties.push('background-color: ' + rgbaValue);\r\n            } else {\r\n                properties.push('background-color:' + cueStyle['background-color'] + ';');\r\n            }\r\n        }\r\n        // Color can be specified from hexadecimal (RGB or RGBA) value.\r\n        if ('color' in cueStyle) {\r\n            if (cueStyle.color.indexOf('#') > -1 && (cueStyle.color.length - 1) === 8) {\r\n                rgbaValue = convertHexToRGBA(cueStyle.color);\r\n                properties.push('color: ' + rgbaValue);\r\n            } else {\r\n                properties.push('color:' + cueStyle.color + ';');\r\n            }\r\n        }\r\n        // Wrap option is determined by the white-space CSS property.\r\n        if ('wrap-option' in cueStyle) {\r\n            if (cueStyle['wrap-option'] in wrapOption) {\r\n                properties.push(wrapOption[cueStyle['wrap-option']]);\r\n            } else {\r\n                properties.push('white-space:' + cueStyle['wrap-option']);\r\n            }\r\n        }\r\n        // Unicode bidi is determined by the unicode-bidi CSS property.\r\n        if ('unicode-bidi' in cueStyle) {\r\n            if (cueStyle['unicode-bidi'] in unicodeBidi) {\r\n                properties.push(unicodeBidi[cueStyle['unicode-bidi']]);\r\n            } else {\r\n                properties.push('unicode-bidi:' + cueStyle['unicode-bidi']);\r\n            }\r\n        }\r\n\r\n        // Standard properties identical to CSS.\r\n\r\n        if ('font-style' in cueStyle) {\r\n            properties.push('font-style:' + cueStyle['font-style'] + ';');\r\n        }\r\n        if ('font-weight' in cueStyle) {\r\n            properties.push('font-weight:' + cueStyle['font-weight'] + ';');\r\n        }\r\n        if ('direction' in cueStyle) {\r\n            properties.push('direction:' + cueStyle.direction + ';');\r\n        }\r\n        if ('text-decoration' in cueStyle) {\r\n            properties.push('text-decoration:' + cueStyle['text-decoration'] + ';');\r\n        }\r\n\r\n        // Handle white-space preserve\r\n        if (ttml.tt.hasOwnProperty('xml:space')) {\r\n            if (ttml.tt['xml:space'] === 'preserve') {\r\n                properties.push('white-space: pre;');\r\n            }\r\n        }\r\n\r\n        return properties;\r\n    }\r\n\r\n    // Find the style set by comparing the style IDs available.\r\n    // Return null if no style is found\r\n    function findStyleFromID(ttmlStyling, cueStyleID) {\r\n        // For every styles available, search the corresponding style in ttmlStyling.\r\n        for (var j = 0; j < ttmlStyling.length; j++) {\r\n            var currStyle = ttmlStyling[j];\r\n            if (currStyle['xml:id'] === cueStyleID || currStyle.id === cueStyleID) {\r\n                // Return the style corresponding to the ID in parameter.\r\n                return currStyle;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    // Return the computed style from a certain ID.\r\n    function getProcessedStyle(reference, cellUnit) {\r\n        var styles = [];\r\n        var ids = reference.match(/\\S+/g);\r\n        ids.forEach(function (id) {\r\n            // Find the style for each id received.\r\n            var cueStyle = findStyleFromID(ttmlStyling, id);\r\n            if (cueStyle) {\r\n                // Process the style for the cue in CSS form.\r\n                // Send a copy of the style object, so it does not modify the original by cleaning it.\r\n                var stylesFromId = processStyle(JSON.parse(JSON.stringify(cueStyle)), cellUnit);\r\n                styles = styles.concat(stylesFromId);\r\n            }\r\n        });\r\n        return styles;\r\n    }\r\n\r\n    /**\r\n     * Processing of layout information:\r\n     * - processRegion: return an array of strings with the cue region under a CSS style form.\r\n     * - findRegionFromID: Return the unprocessed region from TTMLLayout corresponding to the ID researched.\r\n     * - getProcessedRegion: Return the processed region(s) from the ID(s) received in entry.\r\n     ***/\r\n\r\n    // Compute the region properties to return an array with the cleaned properties.\r\n    function processRegion(cueRegion, cellUnit) {\r\n        var properties = [];\r\n\r\n        // Clean up from the xml2json parsing:\r\n        for (var key in cueRegion) {\r\n            //Clean the properties from the parsing.\r\n            var newKey = key.replace('tts:', '');\r\n            newKey = newKey.replace('xml:', '');\r\n\r\n            // Clean the properties' names.\r\n            newKey = camelCaseToDash(newKey);\r\n            cueRegion[newKey] = cueRegion[key];\r\n            if (newKey !== key) {\r\n                delete cueRegion[key];\r\n            }\r\n        }\r\n        // Extent property corresponds to width and height\r\n        if ('extent' in cueRegion) {\r\n            var coordsExtent = cueRegion.extent.split(/\\s/);\r\n            properties.push('width: ' + coordsExtent[0] + ';');\r\n            properties.push('height: ' + coordsExtent[1] + ';');\r\n        }\r\n        // Origin property corresponds to top and left\r\n        if ('origin' in cueRegion) {\r\n            var coordsOrigin = cueRegion.origin.split(/\\s/);\r\n            properties.push('left: ' + coordsOrigin[0] + ';');\r\n            properties.push('top: ' + coordsOrigin[1] + ';');\r\n        }\r\n        // DisplayAlign property corresponds to vertical-align\r\n        if ('display-align' in cueRegion) {\r\n            properties.push(displayAlign[cueRegion['display-align']]);\r\n        }\r\n        // WritingMode is not yet implemented (for CSS3, to come)\r\n        if ('writing-mode' in cueRegion) {\r\n            properties.push(writingMode[cueRegion['writing-mode']]);\r\n        }\r\n        // Style will give to the region the style properties from the style selected\r\n        if ('style' in cueRegion) {\r\n            var styleFromID = getProcessedStyle(cueRegion.style, cellUnit);\r\n            properties = properties.concat(styleFromID);\r\n        }\r\n\r\n        // Standard properties identical to CSS.\r\n\r\n        if ('padding' in cueRegion) {\r\n            properties.push('padding:' + cueRegion.padding + ';');\r\n        }\r\n        if ('overflow' in cueRegion) {\r\n            properties.push('overflow:' + cueRegion.overflow + ';');\r\n        }\r\n        if ('show-background' in cueRegion) {\r\n            properties.push('show-background:' + cueRegion['show-background'] + ';');\r\n        }\r\n        if ('id' in cueRegion) {\r\n            properties.push('regionID:' + cueRegion.id + ';');\r\n        }\r\n\r\n        return properties;\r\n    }\r\n\r\n    // Find the region set by comparing the region IDs available.\r\n    // Return null if no region is found\r\n    function findRegionFromID(ttmlLayout, cueRegionID) {\r\n        // For every region available, search the corresponding style in ttmlLayout.\r\n        for (var j = 0; j < ttmlLayout.length; j++) {\r\n            var currReg = ttmlLayout[j];\r\n            if (currReg['xml:id'] === cueRegionID || currReg.id === cueRegionID) {\r\n                // Return the region corresponding to the ID in parameter.\r\n                return currReg;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Return the computed region from a certain ID.\r\n    function getProcessedRegion(reference, cellUnit) {\r\n        var regions = [];\r\n        var ids = reference.match(/\\S+/g);\r\n        ids.forEach(function (id) {\r\n            // Find the region for each id received.\r\n            var cueRegion = findRegionFromID(ttmlLayout, id);\r\n            if (cueRegion) {\r\n                // Process the region for the cue in CSS form.\r\n                // Send a copy of the style object, so it does not modify the original by cleaning it.\r\n                var regionsFromId = processRegion(JSON.parse(JSON.stringify(cueRegion)), cellUnit);\r\n                regions = regions.concat(regionsFromId);\r\n            }\r\n        });\r\n        return regions;\r\n    }\r\n\r\n    //Return the cellResolution defined by the TTML document.\r\n    function getCellResolution() {\r\n        var defaultCellResolution = [32, 15]; // Default cellResolution.\r\n        if (ttml.tt.hasOwnProperty('ttp:cellResolution')) {\r\n            return ttml.tt['ttp:cellResolution'].split(' ').map(parseFloat);\r\n        } else {\r\n            return defaultCellResolution;\r\n        }\r\n    }\r\n\r\n    // Return the cue wrapped into a span specifying its linePadding.\r\n    function applyLinePadding(cueHTML, cueStyle) {\r\n        // Extract the linePadding property from cueStyleProperties.\r\n        var linePaddingLeft = getPropertyFromArray('padding-left', cueStyle);\r\n        var linePaddingRight = getPropertyFromArray('padding-right', cueStyle);\r\n        var linePadding = linePaddingLeft.concat(' ' + linePaddingRight + ' ');\r\n\r\n        // Declaration of the HTML elements to be used in the cue innerHTML construction.\r\n        var outerHTMLBeforeBr = '';\r\n        var outerHTMLAfterBr = '';\r\n        var cueInnerHTML = '';\r\n\r\n        // List all the nodes of the subtitle.\r\n        var nodeList = Array.prototype.slice.call(cueHTML.children);\r\n        // Take a br element as reference.\r\n        var brElement = cueHTML.getElementsByClassName('lineBreak')[0];\r\n        // First index of the first br element.\r\n        var idx = nodeList.indexOf(brElement);\r\n        // array of all the br element indices\r\n        var indices = [];\r\n        // Find all the indices of the br elements.\r\n        while (idx != -1) {\r\n            indices.push(idx);\r\n            idx = nodeList.indexOf(brElement, idx + 1);\r\n        }\r\n\r\n        // Strings for the cue innerHTML construction.\r\n        var spanStringEnd = '<\\/span>';\r\n        var br = '<br>';\r\n        var clonePropertyString = '<span' + ' class=\"spanPadding\" ' + 'style=\"-webkit-box-decoration-break: clone; ';\r\n\r\n        // If br elements are found:\r\n        if (indices.length) {\r\n            // For each index of a br element we compute the HTML coming before and/or after it.\r\n            indices.forEach(function (i, index) {\r\n                // If this is the first line break, we compute the HTML of the element coming before.\r\n                if (index === 0) {\r\n                    var styleBefore = '';\r\n                    // for each element coming before the line break, we add its HTML.\r\n                    for (var j = 0; j < i; j++) {\r\n                        outerHTMLBeforeBr += nodeList[j].outerHTML;\r\n                        // If this is the first element, we add its style to the wrapper.\r\n                        if (j === 0) {\r\n                            styleBefore = linePadding.concat(nodeList[j].style.cssText);\r\n                        }\r\n                    }\r\n                    // The before element will comprises the clone property (for line wrapping), the style that\r\n                    // need to be applied (ex: background-color) and the rest og the HTML.\r\n                    outerHTMLBeforeBr = clonePropertyString + styleBefore + '\">' + outerHTMLBeforeBr;\r\n                }\r\n                // For every element of the list, we compute the element coming after the line break.s\r\n                var styleAfter = '';\r\n                // for each element coming after the line break, we add its HTML.\r\n                for (var k = i + 1; k < nodeList.length; k++) {\r\n                    outerHTMLAfterBr += nodeList[k].outerHTML;\r\n                    // If this is the last element, we add its style to the wrapper.\r\n                    if (k === nodeList.length - 1) {\r\n                        styleAfter += linePadding.concat(nodeList[k].style.cssText);\r\n                    }\r\n                }\r\n\r\n                // The before element will comprises the clone property (for line wrapping), the style that\r\n                // need to be applied (ex: background-color) and the rest og the HTML.\r\n                outerHTMLAfterBr = clonePropertyString + styleAfter + '\">' + outerHTMLAfterBr;\r\n\r\n                // For each line break we must add the before and/or after element to the final cue as well as\r\n                // the line break when needed.\r\n                if (outerHTMLBeforeBr && outerHTMLAfterBr && index === (indices.length - 1)) {\r\n                    cueInnerHTML += outerHTMLBeforeBr + spanStringEnd + br + outerHTMLAfterBr + spanStringEnd;\r\n                } else if (outerHTMLBeforeBr && outerHTMLAfterBr && index !== (indices.length - 1)) {\r\n                    cueInnerHTML += outerHTMLBeforeBr + spanStringEnd + br + outerHTMLAfterBr + spanStringEnd + br;\r\n                } else if (outerHTMLBeforeBr && !outerHTMLAfterBr) {\r\n                    cueInnerHTML += outerHTMLBeforeBr + spanStringEnd;\r\n                } else if (!outerHTMLBeforeBr && outerHTMLAfterBr && index === (indices.length - 1)) {\r\n                    cueInnerHTML += outerHTMLAfterBr + spanStringEnd;\r\n                } else if (!outerHTMLBeforeBr && outerHTMLAfterBr && index !== (indices.length - 1)) {\r\n                    cueInnerHTML += outerHTMLAfterBr + spanStringEnd + br;\r\n                }\r\n            });\r\n        } else {\r\n            // If there is no line break in the subtitle, we simply wrap cue in a span indicating the linePadding.\r\n            var style = '';\r\n            for (var k = 0; k < nodeList.length; k++) {\r\n                style += nodeList[k].style.cssText;\r\n            }\r\n            cueInnerHTML = clonePropertyString + linePadding + style + '\">' + cueHTML.innerHTML + spanStringEnd;\r\n        }\r\n        return cueInnerHTML;\r\n    }\r\n\r\n    /*** Create the cue element\r\n     * I. The cues are text only:\r\n     *      i) The cue contains a 'br' element\r\n     *      ii) The cue contains a span element\r\n     *      iii) The cue contains text\r\n     * ***/\r\n\r\n    function constructCue(cueElements, cellUnit) {\r\n        var cue = document.createElement('div');\r\n        cueElements.forEach(function (el) {\r\n            // If metadata is present, do not process.\r\n            if (el.hasOwnProperty('metadata')) {\r\n                return;\r\n            }\r\n\r\n            /**\r\n             * If the p element contains spans: create the span elements.\r\n             */\r\n            if (el.hasOwnProperty('span')) {\r\n\r\n                // Stock the span subtitles in an array (in case there are only one value).\r\n                var spanElements = el.span.__children;\r\n\r\n                // Create the span element.\r\n                var spanHTMLElement = document.createElement('span');\r\n                // Extract the style of the span.\r\n                if (el.span.hasOwnProperty('style')) {\r\n                    var spanStyle = getProcessedStyle(el.span.style, cellUnit);\r\n                    spanHTMLElement.className = 'spanPadding ' + el.span.style;\r\n                    spanHTMLElement.style.cssText = spanStyle.join(' ');\r\n                }\r\n\r\n\r\n                // if the span has more than one element, we check for each of them their nature (br or text).\r\n                spanElements.forEach(function (spanEl) {\r\n                    // If metadata is present, do not process.\r\n                    if (spanElements.hasOwnProperty('metadata')) {\r\n                        return;\r\n                    }\r\n                    // If the element is a string\r\n                    if (spanEl.hasOwnProperty('#text')) {\r\n                        var textNode = document.createTextNode(spanEl['#text']);\r\n                        spanHTMLElement.appendChild(textNode);\r\n                        // If the element is a 'br' tag\r\n                    } else if ('br' in spanEl) {\r\n                        // To handle br inside span we need to add the current span\r\n                        // to the cue and then create a br and add that the cue\r\n                        // then create a new span that we use for the next line of\r\n                        // text, that is a copy of the current span\r\n\r\n                        // Add the current span to the cue, only if it has childNodes (text)\r\n                        if (spanHTMLElement.hasChildNodes()) {\r\n                            cue.appendChild(spanHTMLElement);\r\n                        }\r\n\r\n                        // Create a br and add that to the cue\r\n                        var brEl = document.createElement('br');\r\n                        brEl.className = 'lineBreak';\r\n                        cue.appendChild(brEl);\r\n\r\n                        // Create an replacement span and copy the style and classname from the old one\r\n                        var newSpanHTMLElement = document.createElement('span');\r\n                        newSpanHTMLElement.className = spanHTMLElement.className;\r\n                        newSpanHTMLElement.style.cssText = spanHTMLElement.style.cssText;\r\n\r\n                        // Replace the current span with the one we just created\r\n                        spanHTMLElement = newSpanHTMLElement;\r\n                    }\r\n                });\r\n                // We append the element to the cue container.\r\n                cue.appendChild(spanHTMLElement);\r\n            }\r\n\r\n            /**\r\n             * Create a br element if there is one in the cue.\r\n             */\r\n            else if (el.hasOwnProperty('br')) {\r\n                // We append the line break to the cue container.\r\n                var brEl = document.createElement('br');\r\n                brEl.className = 'lineBreak';\r\n                cue.appendChild(brEl);\r\n            }\r\n\r\n            /**\r\n             * Add the text that is not in any inline element\r\n             */\r\n            else if (el.hasOwnProperty('#text')) {\r\n                // Add the text to an individual span element (to add line padding if it is defined).\r\n                var textNode = document.createElement('span');\r\n                textNode.textContent = el['#text'];\r\n\r\n                // We append the element to the cue container.\r\n                cue.appendChild(textNode);\r\n            }\r\n        });\r\n        return cue;\r\n    }\r\n\r\n    function constructCueRegion(cue, div, cellUnit) {\r\n        var cueRegionProperties = []; // properties to be put in the \"captionRegion\" HTML element\r\n        // Obtain the region ID(s) assigned to the cue.\r\n        var pRegionID = cue.region;\r\n        // If div has a region.\r\n        var divRegionID = div.region;\r\n\r\n        var divRegion;\r\n        var pRegion;\r\n\r\n        // If the div element reference a region.\r\n        if (divRegionID) {\r\n            divRegion = getProcessedRegion(divRegionID, cellUnit);\r\n        }\r\n        // If the p element reference a region.\r\n        if (pRegionID) {\r\n            pRegion = cueRegionProperties.concat(getProcessedRegion(pRegionID, cellUnit));\r\n            if (divRegion) {\r\n                cueRegionProperties = mergeArrays(divRegion, pRegion);\r\n            } else {\r\n                cueRegionProperties = pRegion;\r\n            }\r\n        } else if (divRegion) {\r\n            cueRegionProperties = divRegion;\r\n        }\r\n\r\n        // Add initial/default values to what's not defined in the layout:\r\n        applyDefaultProperties(cueRegionProperties, defaultLayoutProperties);\r\n\r\n        return cueRegionProperties;\r\n    }\r\n\r\n    function constructCueStyle(cue, cellUnit) {\r\n        var cueStyleProperties = []; // properties to be put in the \"paragraph\" HTML element\r\n        // Obtain the style ID(s) assigned to the cue.\r\n        var pStyleID = cue.style;\r\n        // If body has a style.\r\n        var bodyStyleID = ttml.tt.body.style;\r\n        // If div has a style.\r\n        var divStyleID = ttml.tt.body.div.style;\r\n\r\n        var bodyStyle;\r\n        var divStyle;\r\n        var pStyle;\r\n        var styleIDs = '';\r\n\r\n        // If the body element reference a style.\r\n        if (bodyStyleID) {\r\n            bodyStyle = getProcessedStyle(bodyStyleID, cellUnit);\r\n            styleIDs = 'paragraph ' + bodyStyleID;\r\n        }\r\n\r\n        // If the div element reference a style.\r\n        if (divStyleID) {\r\n            divStyle = getProcessedStyle(divStyleID, cellUnit);\r\n            if (bodyStyle) {\r\n                divStyle = mergeArrays(bodyStyle, divStyle);\r\n                styleIDs += ' ' + divStyleID;\r\n            } else {\r\n                styleIDs = 'paragraph ' + divStyleID;\r\n            }\r\n        }\r\n\r\n        // If the p element reference a style.\r\n        if (pStyleID) {\r\n            pStyle = getProcessedStyle(pStyleID, cellUnit);\r\n            if (bodyStyle && divStyle) {\r\n                cueStyleProperties = mergeArrays(divStyle, pStyle);\r\n                styleIDs += ' ' + pStyleID;\r\n            } else if (bodyStyle) {\r\n                cueStyleProperties = mergeArrays(bodyStyle, pStyle);\r\n                styleIDs += ' ' + pStyleID;\r\n            } else if (divStyle) {\r\n                cueStyleProperties = mergeArrays(divStyle, pStyle);\r\n                styleIDs += ' ' + pStyleID;\r\n            } else {\r\n                cueStyleProperties = pStyle;\r\n                styleIDs = 'paragraph ' + pStyleID;\r\n            }\r\n        } else if (bodyStyle && !divStyle) {\r\n            cueStyleProperties = bodyStyle;\r\n        } else if (!bodyStyle && divStyle) {\r\n            cueStyleProperties = divStyle;\r\n        }\r\n\r\n\r\n        // Add initial/default values to what's not defined in the styling:\r\n        applyDefaultProperties(cueStyleProperties, defaultStyleProperties);\r\n\r\n        return [cueStyleProperties, styleIDs];\r\n    }\r\n\r\n    function applyDefaultProperties(array, defaultProperties) {\r\n        for (var key in defaultProperties) {\r\n            if (defaultProperties.hasOwnProperty(key)) {\r\n                if (!arrayContains(key, array)) {\r\n                    array.push(key + ':' + defaultProperties[key]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        parse: parse,\r\n        setConfig: setConfig\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\nTTMLParser.__dashjs_factory_name = 'TTMLParser';\r\nexport\r\ndefault FactoryMaker.getSingletonFactory(TTMLParser);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\n\r\n/**\r\n * @Module URLUtils\r\n * @description Provides utility functions for operating on URLs.\r\n * Initially this is simply a method to determine the Base URL of a URL, but\r\n * should probably include other things provided all over the place such as\r\n * determining whether a URL is relative/absolute, resolving two paths etc.\r\n */\r\nfunction URLUtils() {\r\n\r\n    let instance;\r\n\r\n    const absUrl = /^(?:(?:[a-z]+:)?\\/)?\\//i;\r\n\r\n    /**\r\n     * Returns a string that contains the Base URL of a URL, if determinable.\r\n     * @return {string}\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function parseBaseUrl(url) {\r\n        var base = '';\r\n\r\n        if (url.indexOf('/') !== -1) {\r\n            if (url.indexOf('?') !== -1) {\r\n                url = url.substring(0, url.indexOf('?'));\r\n            }\r\n            base = url.substring(0, url.lastIndexOf('/') + 1);\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is relative.\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isRelative(url) {\r\n        return !absUrl.test(url);\r\n    }\r\n\r\n    instance = {\r\n        parseBaseUrl:   parseBaseUrl,\r\n        isRelative:     isRelative\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nURLUtils.__dashjs_factory_name = 'URLUtils';\r\nexport default FactoryMaker.getSingletonFactory(URLUtils);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker.js';\r\nimport Debug from '../../core/Debug.js';\r\n\r\nfunction VTTParser() {\r\n    let context = this.context;\r\n    let log = Debug(context).getInstance().log;\r\n\r\n    let instance,\r\n        regExNewLine,\r\n        regExToken,\r\n        regExWhiteSpace,\r\n        regExWhiteSpaceWordBoundary;\r\n\r\n    function setup() {\r\n        regExNewLine = /(?:\\r\\n|\\r|\\n)/gm;\r\n        regExToken = /-->/;\r\n        regExWhiteSpace = /(^[\\s]+|[\\s]+$)/g;\r\n        regExWhiteSpaceWordBoundary = /\\s\\b/g;\r\n    }\r\n\r\n    function parse(data) {\r\n        var captionArray = [];\r\n        var len,\r\n            lastStartTime;\r\n\r\n        data = data.split( regExNewLine );\r\n        len = data.length;\r\n        lastStartTime = -1;\r\n\r\n        for (var i = 0 ; i < len; i++)\r\n        {\r\n            var item = data[i];\r\n\r\n            if (item.length > 0 && item !== 'WEBVTT')\r\n            {\r\n                if (item.match(regExToken))\r\n                {\r\n                    var attributes = parseItemAttributes(item);\r\n                    var cuePoints = attributes.cuePoints;\r\n                    var styles = attributes.styles;\r\n                    var text = getSublines(data, i + 1);\r\n                    var startTime = convertCuePointTimes(cuePoints[0].replace(regExWhiteSpace, ''));\r\n                    var endTime = convertCuePointTimes(cuePoints[1].replace(regExWhiteSpace, ''));\r\n\r\n                    if ((!isNaN(startTime) && !isNaN(endTime)) && startTime >= lastStartTime && endTime > startTime) {\r\n                        if (text !== '') {\r\n                            lastStartTime = startTime;\r\n                            //TODO Make VO external so other parsers can use.\r\n                            captionArray.push({\r\n                                start: startTime,\r\n                                end: endTime,\r\n                                data: text,\r\n                                styles: styles\r\n                            });\r\n                        }\r\n                        else {\r\n                            log('Skipping cue due to empty/malformed cue text');\r\n                        }\r\n                    }\r\n                    else {\r\n                        log('Skipping cue due to incorrect cue timing');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return captionArray;\r\n    }\r\n\r\n    function convertCuePointTimes(time) {\r\n        var timeArray = time.split(':');\r\n        var len = timeArray.length - 1;\r\n\r\n        time = parseInt( timeArray[len - 1], 10 ) * 60 + parseFloat( timeArray[len]);\r\n\r\n        if ( len === 2 ) {\r\n            time += parseInt( timeArray[0], 10 ) * 3600;\r\n        }\r\n\r\n        return time;\r\n    }\r\n\r\n    function parseItemAttributes(data) {\r\n        var vttCuePoints = data.split(regExToken);\r\n        var arr = vttCuePoints[1].split(regExWhiteSpaceWordBoundary);\r\n        arr.shift(); //remove first array index it is empty...\r\n        vttCuePoints[1] = arr[0];\r\n        arr.shift();\r\n        return {cuePoints: vttCuePoints, styles: getCaptionStyles(arr)};\r\n    }\r\n\r\n    function getCaptionStyles(arr) {\r\n        var styleObject = {};\r\n        arr.forEach(function (element) {\r\n            if (element.split(/:/).length > 1) {\r\n                var val = element.split(/:/)[1];\r\n                if (val && val.search(/%/) != -1) {\r\n                    val = parseInt(val.replace(/%/, ''), 10);\r\n                }\r\n                if (element.match(/align/) || element.match(/A/)) {\r\n                    styleObject.align = val;\r\n                }\r\n                if (element.match(/line/) || element.match(/L/) ) {\r\n                    styleObject.line = val;\r\n                }\r\n                if (element.match(/position/) || element.match(/P/) ) {\r\n                    styleObject.position = val;\r\n                }\r\n                if (element.match(/size/) || element.match(/S/)) {\r\n                    styleObject.size = val;\r\n                }\r\n            }\r\n        });\r\n\r\n        return styleObject;\r\n    }\r\n\r\n    /**\r\n        * VTT can have multiple lines to display per cuepoint.\r\n        * */\r\n    function getSublines(data, idx) {\r\n        var i = idx;\r\n\r\n        var subline = '';\r\n        var lineData = '';\r\n        var lineCount;\r\n\r\n        while (data[i] !== '' && i < data.length) {\r\n            i++;\r\n        }\r\n\r\n        lineCount = i - idx;\r\n        if (lineCount > 1) {\r\n            for (var j = 0; j < lineCount; j++) {\r\n                lineData = data[(idx + j)];\r\n                if (!lineData.match(regExToken)) {\r\n                    subline += lineData;\r\n                    if (j !== lineCount - 1) {\r\n                        subline += '\\n';\r\n                    }\r\n                }\r\n                else {\r\n                    // caption text should not have '-->' in it\r\n                    subline = '';\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            lineData = data[idx];\r\n            if (!lineData.match(regExToken))\r\n                subline = lineData;\r\n        }\r\n        return decodeURI(subline);\r\n    }\r\n\r\n    instance = {\r\n        parse: parse\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\nVTTParser.__dashjs_factory_name = 'VTTParser';\r\nexport default FactoryMaker.getSingletonFactory(VTTParser);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass BitrateInfo {\r\n    constructor() {\r\n        this.mediaType = null;\r\n        this.bitrate = null;\r\n        this.width = null;\r\n        this.height = null;\r\n        this.qualityIndex = NaN;\r\n    }\r\n}\r\n\r\nexport default BitrateInfo;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DataChunk {\r\n    //Represents a data structure that keep all the necessary info about a single init/media segment\r\n    constructor() {\r\n        this.streamId = null;\r\n        this.mediaInfo = null;\r\n        this.segmentType = null;\r\n        this.quality = NaN;\r\n        this.index = NaN;\r\n        this.bytes = null;\r\n        this.start = NaN;\r\n        this.end = NaN;\r\n        this.duration = NaN;\r\n    }\r\n}\r\n\r\nexport default DataChunk;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Error {\r\n    constructor(code, message, data) {\r\n        this.code = code || null;\r\n        this.message = message || null;\r\n        this.data = data || null;\r\n    }\r\n}\r\n\r\nexport default Error;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass FragmentRequest {\r\n    constructor() {\r\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\r\n        this.startTime = NaN;\r\n        this.mediaType = null;\r\n        this.mediaInfo = null;\r\n        this.type = null;\r\n        this.duration = NaN;\r\n        this.timescale = NaN;\r\n        this.range = null;\r\n        this.url = null;\r\n        this.serviceLocation = null;\r\n        this.requestStartDate = null;\r\n        this.firstByteDate = null;\r\n        this.requestEndDate = null;\r\n        this.quality = NaN;\r\n        this.index = NaN;\r\n        this.availabilityStartTime = null;\r\n        this.availabilityEndTime = null;\r\n        this.wallStartTime = null;\r\n        this.bytesLoaded = NaN;\r\n        this.bytesTotal = NaN;\r\n        this.delayLoadingTime = NaN;\r\n        this.responseType = 'arraybuffer';\r\n    }\r\n}\r\n\r\nFragmentRequest.ACTION_DOWNLOAD = 'download';\r\nFragmentRequest.ACTION_COMPLETE = 'complete';\r\n\r\nexport default FragmentRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nimport FragmentRequest from './FragmentRequest.js';\r\n\r\nclass HeadRequest extends FragmentRequest {\r\n    constructor(url) {\r\n        super();\r\n        this.url = url || null;\r\n        this.checkForExistenceOnly = true;\r\n    }\r\n}\r\n\r\nexport default HeadRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass IsoBox {\r\n    constructor() {\r\n        this.offset = NaN;\r\n        this.type = null;\r\n        this.size = NaN;\r\n        this.isComplete = true;\r\n    }\r\n}\r\n\r\nexport default IsoBox;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ManifestInfo {\r\n    constructor() {\r\n        this.DVRWindowSize = NaN;\r\n        this.loadedTime = null;\r\n        this.availableFrom = null;\r\n        this.minBufferTime = NaN;\r\n        this.duration = NaN;\r\n        this.isDynamic = false;\r\n        this.maxFragmentDuration = null;\r\n    }\r\n}\r\n\r\nexport default ManifestInfo;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass MediaInfo {\r\n    constructor() {\r\n        this.id = null;\r\n        this.index = null;\r\n        this.type = null;\r\n        this.streamInfo = null;\r\n        this.representationCount = 0;\r\n        this.lang = null;\r\n        this.viewpoint = null;\r\n        this.accessibility = null;\r\n        this.audioChannelConfiguration = null;\r\n        this.roles = null;\r\n        this.codec = null;\r\n        this.mimeType = null;\r\n        this.contentProtection = null;\r\n        this.isText = false;\r\n        this.KID = null;\r\n        this.bitrateList = null;\r\n    }\r\n}\r\n\r\nexport default MediaInfo;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass MetricsList {\r\n    constructor() {\r\n        this.TcpList = [];\r\n        this.HttpList = [];\r\n        this.RepSwitchList = [];\r\n        this.BufferLevel = [];\r\n        this.BufferState = [];\r\n        this.PlayList = [];\r\n        this.DroppedFrames = [];\r\n        this.SchedulingInfo = [];\r\n        this.DVRInfo = [];\r\n        this.ManifestUpdate = [];\r\n        this.RequestsQueue = null;\r\n        this.DVBErrors = [];\r\n        this.BolaState = [];\r\n    }\r\n}\r\n\r\nexport default MetricsList;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass StreamInfo {\r\n    constructor() {\r\n        this.id = null;\r\n        this.index = null;\r\n        this.start = NaN;\r\n        this.duration = NaN;\r\n        this.manifestInfo = null;\r\n        this.isLast = true;\r\n        this.isFirst = true;\r\n    }\r\n}\r\n\r\nexport default StreamInfo;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nimport FragmentRequest from './FragmentRequest.js';\r\n\r\nclass TextRequest extends FragmentRequest {\r\n    constructor(url, type) {\r\n        super();\r\n        this.url = url || null;\r\n        this.type = type || null;\r\n        this.mediaType = 'stream';\r\n        this.responseType = 'text';\r\n    }\r\n}\r\n\r\nexport default TextRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass TextTrackInfo {\r\n    constructor() {\r\n        this.video = null;\r\n        this.captionData = null;\r\n        this.label = null;\r\n        this.lang = null;\r\n        this.defaultTrack = false;\r\n        this.kind = null;\r\n        this.isFragmented = false;\r\n        this.isEmbedded = false;\r\n    }\r\n}\r\n\r\nexport default TextTrackInfo;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass TrackInfo {\r\n    constructor() {\r\n        this.id = null;\r\n        this.quality = null;\r\n        this.DVRWindow = null;\r\n        this.fragmentDuration = null;\r\n        this.mediaInfo = null;\r\n        this.MSETimeOffset = null;\r\n    }\r\n}\r\n\r\nexport default TrackInfo;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass URIFragmentData {\r\n    constructor() {\r\n        this.t = null;\r\n        this.xywh = null;\r\n        this.track = null;\r\n        this.id = null;\r\n        this.s = null;\r\n    }\r\n}\r\n\r\nexport default URIFragmentData;\r\n\r\n/*\r\n    From Spec http://www.w3.org/TR/media-frags/\r\n\r\n    temporal (t)     - This dimension denotes a specific time range in the original media, such as \"starting at second 10, continuing until second 20\";\r\n    spatial  (xywh)  - this dimension denotes a specific range of pixels in the original media, such as \"a rectangle with size (100,100) with its top-left at coordinate (10,10)\";\r\n                       Media fragments support also addressing the media along two additional dimensions (in the advanced version defined in Media Fragments 1.0 URI (advanced)):\r\n    track    (track) - this dimension denotes one or more tracks in the original media, such as \"the english audio and the video track\";\r\n    id       (id)    - this dimension denotes a named temporal fragment within the original media, such as \"chapter 2\", and can be seen as a convenient way of specifying a temporal fragment.\r\n\r\n\r\n    ## Note\r\n    Akamai is purposing to add #s=X to the ISO standard.\r\n        - (X) Value would be a start time to seek to at startup instead of starting at 0 or live edge\r\n        - Allows for seeking back before the start time unlike a temporal clipping.\r\n*/","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2016, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass BolaState {\r\n    constructor() {\r\n        /**\r\n         * number\r\n         * @private\r\n         */\r\n        this._s = undefined;\r\n    }\r\n}\r\n\r\nexport default BolaState;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n */\r\nclass BufferLevel {\r\n    /**\r\n     * @description This Object holds reference to the current buffer level and the time it was recorded.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Real-Time | Time of the measurement of the buffer level.\r\n         * @public\r\n         */\r\n        this.t = null;\r\n        /**\r\n         * Level of the buffer in milliseconds. Indicates the playout duration for which\r\n         * media data of all active media components is available starting from the\r\n         * current playout time.\r\n         * @public\r\n         */\r\n        this.level = null;\r\n    }\r\n}\r\n\r\nexport default BufferLevel;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport BufferController from '../../controllers/BufferController.js';\r\n/**\r\n * @class\r\n */\r\nclass BufferState {\r\n    /**\r\n     * @description This Object holds reference to the current buffer state of the video element.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * The Buffer Level Target determined by the BufferLevelRule.\r\n         * @public\r\n         */\r\n        this.target = null;\r\n        /**\r\n         * Current buffer state. Will be BufferController.BUFFER_EMPTY or BufferController.BUFFER_LOADED.\r\n         * @public\r\n         */\r\n        this.state = BufferController.BUFFER_EMPTY;\r\n    }\r\n}\r\n\r\nexport default BufferState;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n */\r\nclass DVRInfo {\r\n    /**\r\n     * @description This Object holds reference to DVR availability window information.\r\n     */\r\n    constructor() {\r\n\r\n        /**\r\n         * The current time of the video element when this was created.\r\n         * @public\r\n         */\r\n        this.time = null;\r\n        /**\r\n         * The current Segment Availability Range as an object with start and end properties.\r\n         * It's delta defined by the timeShiftBufferDepth MPD attribute.\r\n         * @public\r\n         */\r\n        this.range = null;\r\n        /**\r\n         * Reference to the internal ManifestInfo.js VO.\r\n         * @public\r\n         */\r\n        this.manifestInfo = null;\r\n    }\r\n}\r\n\r\nexport default DVRInfo;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n */\r\nclass DroppedFrames {\r\n    /**\r\n     * @description This Object holds reference to DroppedFrames count and the time it was recorded.\r\n     */\r\n    constructor()\r\n    {\r\n        /**\r\n         * Real-Time | Time of the measurement of the dropped frames.\r\n         * @public\r\n         */\r\n        this.time = null;\r\n        /**\r\n         * Number of dropped frames\r\n         * @public\r\n         */\r\n        this.droppedFrames = null;\r\n    }\r\n}\r\n\r\nexport default DroppedFrames;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n */\r\nclass HTTPRequest {\r\n    /**\r\n     * @description This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\r\n     * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\r\n     * by Metrics Reporting code.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Identifier of the TCP connection on which the HTTP request was sent.\r\n         * @public\r\n         */\r\n        this.tcpid = null;\r\n        /**\r\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\r\n         * The type of the request:\r\n         * - MPD\r\n         * - XLink expansion\r\n         * - Initialization Fragment\r\n         * - Index Fragment\r\n         * - Media Fragment\r\n         * - Bitstream Switching Fragment\r\n         * - other\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * The original URL (before any redirects or failures)\r\n         * @public\r\n         */\r\n        this.url = null;\r\n        /**\r\n         * The actual URL requested, if different from above\r\n         * @public\r\n         */\r\n        this.actualurl = null;\r\n        /**\r\n         * The contents of the byte-range-spec part of the HTTP Range header.\r\n         * @public\r\n         */\r\n        this.range = null;\r\n        /**\r\n         * Real-Time | The real time at which the request was sent.\r\n         * @public\r\n         */\r\n        this.trequest = null;\r\n        /**\r\n         * Real-Time | The real time at which the first byte of the response was received.\r\n         * @public\r\n         */\r\n        this.tresponse = null;\r\n        /**\r\n         * The HTTP response code.\r\n         * @public\r\n         */\r\n        this.responsecode = null;\r\n        /**\r\n         * The duration of the throughput trace intervals (ms), for successful requests only.\r\n         * @public\r\n         */\r\n        this.interval = null;\r\n        /**\r\n         * Throughput traces, for successful requests only.\r\n         * @public\r\n         */\r\n        this.trace = [];\r\n\r\n        /**\r\n         * Type of stream (\"audio\" | \"video\" etc..)\r\n         * @public\r\n         */\r\n        this._stream = null;\r\n        /**\r\n         * Real-Time | The real time at which the request finished.\r\n         * @public\r\n         */\r\n        this._tfinish = null;\r\n        /**\r\n         * The duration of the media requests, if available, in milliseconds.\r\n         * @public\r\n         */\r\n        this._mediaduration = null;\r\n        /**\r\n         * all the response headers from request.\r\n         * @public\r\n         */\r\n        this._responseHeaders = null;\r\n        /**\r\n         * The selected service location for the request. string.\r\n         * @public\r\n         */\r\n        this._serviceLocation = null;\r\n    }\r\n}\r\n\r\nHTTPRequest.Trace = class {\r\n    /**\r\n     * @description This Object holds reference to the progress of the HTTPRequest.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Real-Time | Measurement stream start.\r\n         * @public\r\n         */\r\n        this.s = null;\r\n        /**\r\n         * Measurement stream duration (ms).\r\n         * @public\r\n         */\r\n        this.d = null;\r\n        /**\r\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\r\n         * @public\r\n         */\r\n        this.b = [];\r\n    }\r\n};\r\n\r\nHTTPRequest.MPD_TYPE = 'MPD';\r\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\r\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\r\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\r\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\r\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\r\nHTTPRequest.OTHER_TYPE = 'other';\r\n\r\nexport default HTTPRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n */\r\nclass ManifestUpdate {\r\n    /**\r\n     * @description This Object holds reference to the manifest update information.\r\n     */\r\n    constructor() {\r\n\r\n        /**\r\n         * Media Type Video | Audio | FragmentedText\r\n         * @public\r\n         */\r\n        this.mediaType = null;\r\n        /**\r\n         * MPD Type static | dynamic\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * When this manifest update was requested\r\n         * @public\r\n         */\r\n        this.requestTime = null;\r\n        /**\r\n         * When this manifest update was received\r\n         * @public\r\n         */\r\n        this.fetchTime = null;\r\n        /**\r\n         * Calculated Availability Start time of the stream.\r\n         * @public\r\n         */\r\n        this.availabilityStartTime = null;\r\n        /**\r\n         * the seek point (liveEdge for dynamic, Stream[0].startTime for static)\r\n         * @public\r\n         */\r\n        this.presentationStartTime = 0;\r\n        /**\r\n         * The calculated difference between the server and client wall clock time\r\n         * @public\r\n         */\r\n        this.clientTimeOffset = 0;\r\n        /**\r\n         * Actual element.currentTime\r\n         * @public\r\n         */\r\n        this.currentTime = null;\r\n        /**\r\n         * Actual element.ranges\r\n         * @public\r\n         */\r\n        this.buffered = null;\r\n        /**\r\n         * Static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - elementCurrentTime)\r\n         * @public\r\n         */\r\n        this.latency = 0;\r\n        /**\r\n         * Array holding list of StreamInfo VO Objects\r\n         * @public\r\n         */\r\n        this.streamInfo = [];\r\n        /**\r\n         * Array holding list of TrackInfo VO Objects\r\n         * @public\r\n         */\r\n        this.trackInfo = [];\r\n\r\n    }\r\n}\r\n\r\nManifestUpdate.StreamInfo = class {\r\n    /**\r\n     * @description This Object holds reference to the current period's stream information when the manifest was updated.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Stream@id\r\n         * @public\r\n         */\r\n        this.id = null;\r\n        /**\r\n         * Period Index\r\n         * @public\r\n         */\r\n        this.index = null;\r\n        /**\r\n         * Stream@start\r\n         * @public\r\n         */\r\n        this.start = null;\r\n        /**\r\n         * Stream@duration\r\n         * @public\r\n         */\r\n        this.duration = null;\r\n    }\r\n};\r\n\r\nManifestUpdate.TrackInfo = class {\r\n\r\n    /**\r\n     * @description This Object holds reference to the current representation's info when the manifest was updated.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Track@id\r\n         * @public\r\n         */\r\n        this.id = null;\r\n        /**\r\n         * Representation Index\r\n         * @public\r\n         */\r\n        this.index = null;\r\n        /**\r\n         * Media Type Video | Audio | FragmentedText\r\n         * @public\r\n         */\r\n        this.mediaType = null;\r\n        /**\r\n         * Which reprenset\r\n         * @public\r\n         */\r\n        this.streamIndex = null;\r\n        /**\r\n         * Holds reference to @presentationTimeOffset\r\n         * @public\r\n         */\r\n        this.presentationTimeOffset = null;\r\n        /**\r\n         * Holds reference to @startNumber\r\n         * @public\r\n         */\r\n        this.startNumber = null;\r\n        /**\r\n         * list|template|timeline\r\n         * @public\r\n         */\r\n        this.fragmentInfoType = null;\r\n    }\r\n};\r\n//TODO we need exports for all the sub objects.  These should all be class VO\r\nexport default ManifestUpdate;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n */\r\nclass PlayList {\r\n    /**\r\n     * @description This Object holds reference to the playback session information\r\n     */\r\n    constructor() {\r\n\r\n        /**\r\n         * Timestamp of the user action that starts the playback stream...\r\n         * @public\r\n         */\r\n        this.start = null;\r\n        /**\r\n         * Presentation time at which playout was requested by the user...\r\n         * @public\r\n         */\r\n        this.mstart = null;\r\n        /**\r\n         * Type of user action which triggered playout\r\n         * - New playout request (e.g. initial playout or seeking)\r\n         * - Resume from pause\r\n         * - Other user request (e.g. user-requested quality change)\r\n         * - Start of a metrics collection stream (hence earlier entries in the play list not collected)\r\n         * @public\r\n         */\r\n        this.starttype = null;\r\n\r\n        /**\r\n         * List of streams of continuous rendering of decoded samples.\r\n         * @public\r\n         */\r\n        this.trace = [];\r\n\r\n    }\r\n}\r\n\r\nPlayList.Trace = class {\r\n    constructor() {\r\n        /**\r\n         * The value of the Representation@id of the Representation from which the samples were taken.\r\n         * @type {String}\r\n         * @public\r\n         */\r\n        this.representationid = null;\r\n        /**\r\n         * If not present, this metrics concerns the Representation as a whole.\r\n         * If present, subreplevel indicates the greatest value of any\r\n         * Subrepresentation@level being rendered.\r\n         * @type {Number}\r\n         * @public\r\n         */\r\n        this.subreplevel = null;\r\n        /**\r\n         * The time at which the first sample was rendered\r\n         * @type {Number}\r\n         * @public\r\n         */\r\n        this.start = null;\r\n        /**\r\n         * The presentation time of the first sample rendered.\r\n         * @type {Number}\r\n         * @public\r\n         */\r\n        this.mstart = null;\r\n        /**\r\n         * The duration of the continuously presented samples (which is the same in real time and media time). \"Continuously presented\" means that the media clock continued to advance at the playout speed throughout the interval. NOTE: the spec does not call out the units, but all other durations etc are in ms, and we use ms too.\r\n         * @type {Number}\r\n         * @public\r\n         */\r\n        this.duration = null;\r\n        /**\r\n         * The playback speed relative to normal playback speed (i.e.normal forward playback speed is 1.0).\r\n         * @type {Number}\r\n         * @public\r\n         */\r\n        this.playbackspeed = null;\r\n        /**\r\n         * The reason why continuous presentation of this Representation was stopped.\r\n         * representation switch\r\n         * rebuffering\r\n         * user request\r\n         * end of Period\r\n         * end of Stream\r\n         * end of content\r\n         * end of a metrics collection period\r\n         *\r\n         * @type {String}\r\n         * @public\r\n         */\r\n        this.stopreason = null;\r\n    }\r\n};\r\n\r\n\r\n/* Public Static Constants */\r\nPlayList.INITIAL_PLAYOUT_START_REASON = 'initial_playout';\r\nPlayList.SEEK_START_REASON = 'seek';\r\nPlayList.RESUME_FROM_PAUSE_START_REASON = 'resume';\r\nPlayList.METRICS_COLLECTION_START_REASON = 'metrics_collection_start';\r\n\r\nPlayList.Trace.REPRESENTATION_SWITCH_STOP_REASON = 'representation_switch';\r\nPlayList.Trace.REBUFFERING_REASON = 'rebuffering';\r\nPlayList.Trace.USER_REQUEST_STOP_REASON = 'user_request';\r\nPlayList.Trace.END_OF_PERIOD_STOP_REASON = 'end_of_period';\r\nPlayList.Trace.END_OF_CONTENT_STOP_REASON = 'end_of_content';\r\nPlayList.Trace.METRICS_COLLECTION_STOP_REASON = 'metrics_collection_end';\r\nPlayList.Trace.FAILURE_STOP_REASON = 'failure';\r\n\r\nexport default PlayList;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n */\r\nclass RepresentationSwitch {\r\n    /**\r\n     * @description This Object holds reference to the info at quality switch between two representations.\r\n     */\r\n    constructor() {\r\n\r\n        /**\r\n         * Time of the switch event.\r\n         * @public\r\n         */\r\n        this.t = null;\r\n        /**\r\n         * The media presentation time of the earliest access unit\r\n         * (out of all media content components) played out from\r\n         * the Representation.\r\n         *\r\n         * @public\r\n         */\r\n        this.mt = null;\r\n        /**\r\n         * Value of Representation@id identifying the switch-to Representation.\r\n         * @public\r\n         */\r\n        this.to = null;\r\n        /**\r\n         * If not present, this metrics concerns the Representation as a whole.\r\n         * If present, lto indicates the value of SubRepresentation@level within\r\n         * Representation identifying the switch-to level of the Representation.\r\n         *\r\n         * @public\r\n         */\r\n        this.lto = null;\r\n\r\n    }\r\n}\r\n\r\nexport default RepresentationSwitch;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n */\r\nclass RequestsQueue {\r\n    /**\r\n     * @description This Object holds reference to Fragment Model's request queues\r\n     */\r\n    constructor() {\r\n\r\n        /**\r\n         * Array of all of the requests that have begun to load\r\n         * This request may not make it into the executed queue if it is abandon due to ABR rules for example.\r\n         * @public\r\n         */\r\n        this.loadingRequests = [];\r\n        /**\r\n         * Array of the The requests that have completed\r\n         * @public\r\n         */\r\n        this.executedRequests = [];\r\n    }\r\n}\r\n\r\nexport default RequestsQueue;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n */\r\nclass SchedulingInfo {\r\n    /**\r\n     * @description This Object holds reference to the index handling of the current fragment being loaded or executed.\r\n     */\r\n    constructor() {\r\n\r\n        /**\r\n         * Type of stream Audio | Video | FragmentedText\r\n         * @public\r\n         */\r\n        this.mediaType = null;\r\n        /**\r\n         * Time of the scheduling event.\r\n         * @public\r\n         */\r\n        this.t = null;\r\n\r\n        /**\r\n         * Type of fragment (initialization | media)\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * Presentation start time of fragment\r\n         * @public\r\n         */\r\n        this.startTime = null;\r\n        /**\r\n         * Availability start time of fragment\r\n         * @public\r\n         */\r\n        this.availabilityStartTime = null;\r\n        /**\r\n         * Duration of fragment\r\n         * @public\r\n         */\r\n        this.duration = null;\r\n        /**\r\n         * Bit Rate Quality of fragment\r\n         * @public\r\n         */\r\n        this.quality = null;\r\n        /**\r\n         * Range of fragment\r\n         * @public\r\n         */\r\n        this.range = null;\r\n\r\n        /**\r\n         * Current state of fragment\r\n         * @public\r\n         */\r\n        this.state = null;\r\n    }\r\n}\r\n\r\nexport default SchedulingInfo;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n */\r\nclass TCPConnection {\r\n    /**\r\n     * @description This Object holds reference to the current tcp connection\r\n     */\r\n    constructor() {\r\n\r\n        /**\r\n         * Identifier of the TCP connection on which the HTTP request was sent.\r\n         * @public\r\n         */\r\n        this.tcpid = null;\r\n        /**\r\n         * IP Address of the interface over which the client is receiving the TCP data.\r\n         * @public\r\n         */\r\n        this.dest = null;\r\n        /**\r\n         * Real-Time | The time at which the connection was opened (sending time of the initial SYN or connect socket operation).\r\n         * @public\r\n         */\r\n        this.topen = null;\r\n        /**\r\n         * Real-Time | The time at which the connection was closed (sending or reception time of FIN or RST or close socket operation).\r\n         * @public\r\n         */\r\n        this.tclose = null;\r\n        /**\r\n         * Connect time in ms (time from sending the initial SYN to receiving the ACK or completion of the connect socket operation).\r\n         * @public\r\n         */\r\n        this.tconnect = null;\r\n\r\n    }\r\n}\r\n\r\nexport default TCPConnection;"]}